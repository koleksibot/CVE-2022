<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data-structure on SoByte</title>
    <link>https://www.sobyte.net/categories/data-structure/</link>
    <description>Recent content in data-structure on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Jul 2021 14:41:53 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/categories/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing Lock Free Queues With Go</title>
      <link>https://www.sobyte.net/post/2021-07/implementing-lock-free-queues-with-go/</link>
      <pubDate>Fri, 09 Jul 2021 14:41:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/implementing-lock-free-queues-with-go/</guid>
      <description>A queue is a very common data structure that allows only outgoing (dequeue) operations at the front end of a table (head) and incoming (enqueue) operations at the back end of a table (tail). Like the stack data structure, a queue is a linear table with restricted operations. The end that performs the insert operation is called the tail and the end that performs the delete operation is called the header.</description>
    </item>
    
    <item>
      <title>Finding the Kth Largest Number in a Large Amount of Unordered Data</title>
      <link>https://www.sobyte.net/post/2021-06/finding-the-kth-largest-number-in-a-large-amount-of-unordered-data/</link>
      <pubDate>Wed, 30 Jun 2021 17:39:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/finding-the-kth-largest-number-in-a-large-amount-of-unordered-data/</guid>
      <description>Find the Kth largest value in an unordered long array of millions. The requirement is, of course, that the faster you find it, the better.
top K questions As soon as the problem is described, many people will associate it with the top K problem, which is discussed extensively in both the algorithm and engineering fields, and it is easy to encounter similar problems in actual projects, so I also took the opportunity to summarize it into an article.</description>
    </item>
    
  </channel>
</rss>
