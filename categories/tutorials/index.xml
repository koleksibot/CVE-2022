<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorials on SoByte</title>
    <link>https://www.sobyte.net/categories/tutorials/</link>
    <description>Recent content in tutorials on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Mar 2022 10:48:51 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/categories/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang http.Client&#39;s connection behavior control explained</title>
      <link>https://www.sobyte.net/post/2022-03/go-http-client-connection-control/</link>
      <pubDate>Tue, 29 Mar 2022 10:48:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-http-client-connection-control/</guid>
      <description>Go is known for its &amp;ldquo;self contained battery&amp;rdquo; and many developers are fond of the feature-rich standard library that comes with Go. Among the Go standard libraries, the net/http package is one of the most popular and commonly used packages, allowing us to generate a medium-performance http server with a few lines of code that supports large concurrency. http.Client is also the most widely used http client, and its performance</description>
    </item>
    
    <item>
      <title>The &#34;little trap&#34; of the Go standard library flag package</title>
      <link>https://www.sobyte.net/post/2022-03/pitfall-in-std-flag-pkg/</link>
      <pubDate>Tue, 29 Mar 2022 10:30:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pitfall-in-std-flag-pkg/</guid>
      <description>The Go language is said to be &amp;ldquo;battery-included&amp;rdquo;, which means that the Go standard library is available out of the box, providing Gopher with a feature-rich set of common toolkits that are sufficient for most everyday development needs. In particular, the Go Standard Library toolkit is widely used in areas where the Go language excels. The following chart shows the results of the Official Go 2020 User Survey. We see</description>
    </item>
    
    <item>
      <title>Use the reflect package to read and write variables of all types in the reflection world</title>
      <link>https://www.sobyte.net/post/2022-03/golang-reflect/</link>
      <pubDate>Tue, 29 Mar 2022 09:54:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-reflect/</guid>
      <description>The reflection package provided by Go in the standard library gives Go programs the ability to reflect at runtime (reflection), but this reflection ability is also a &amp;ldquo;double-edged sword&amp;rdquo;, it has the advantage of solving a specific class of problems, but also brings a lack of logic, performance problems, and difficult to find problems and debug It also brings disadvantages such as unclear logic, performance problems, and difficulty in problem</description>
    </item>
    
    <item>
      <title>Things to know about the gRPC client</title>
      <link>https://www.sobyte.net/post/2022-03/golang-grpc/</link>
      <pubDate>Tue, 29 Mar 2022 09:22:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-grpc/</guid>
      <description>In the era of cloud-native and microservices-dominated architectural models, there are only two types of communication protocols used for internal service interactions: HTTP API (RESTful API) and RPC. With today&amp;rsquo;s hardware configurations and network conditions, modern RPC implementations generally perform better than HTTP API. We compare json over http with gRPC(insecure), using ghz and hey stress test the gRPC and json over http implementations. The performance of gRPC (Requests/sec: 59924.34)</description>
    </item>
    
    <item>
      <title>Thanos Advanced User Guide</title>
      <link>https://www.sobyte.net/post/2022-03/thanos-guide/</link>
      <pubDate>Tue, 29 Mar 2022 09:09:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/thanos-guide/</guid>
      <description>1. Aggregate data using Query Thanos Query can interface not only with Thanos Store Gateway, but also with any component that is compatible with Prometheus API. Here is the diagram.
Thanos Query can be interfaced with the following components.
 Thanos Store Gateway Thanos Query Prometheus VictoriaMetrics Prometheus API-compatible components  Using the cascading between Thanos Query, we can implement correlated queries across components to build mega-monitoring systems. This also means that each docked component should provide a fast enough Prometheus API.</description>
    </item>
    
    <item>
      <title>Go standard library http and fasthttp server-side performance comparison</title>
      <link>https://www.sobyte.net/post/2022-03/nethttp-vs-fasthttp/</link>
      <pubDate>Mon, 28 Mar 2022 20:30:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/nethttp-vs-fasthttp/</guid>
      <description>1. Background After writing the classic &amp;ldquo;hello, world&amp;rdquo; program, Go beginners may be eager to experience Go&amp;rsquo;s powerful standard library, for example, writing a fully functional web server like the following example in a few lines of code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 来自https://tip.g</description>
    </item>
    
    <item>
      <title>Understanding Go escape analysis by example</title>
      <link>https://www.sobyte.net/post/2022-03/go-escape/</link>
      <pubDate>Mon, 28 Mar 2022 17:07:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-escape/</guid>
      <description>Most Gophers don&amp;rsquo;t really have to care about Go variable escape analysis, or can even ignore it. But if you&amp;rsquo;re using Go in a performance-sensitive domain, where you want to completely squeeze the performance out of your Go application, then understanding Go escape analysis can be very beneficial. In this article, we&amp;rsquo;ll take a look at understanding Go escape analysis together. 1. The problem to be solved by escape analysis</description>
    </item>
    
    <item>
      <title>Go project source code analysis with the help of functrace</title>
      <link>https://www.sobyte.net/post/2022-03/go-source-analysis-with-functrace/</link>
      <pubDate>Mon, 28 Mar 2022 10:52:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-source-analysis-with-functrace/</guid>
      <description>The daily life of a programmer cannot be separated from &amp;ldquo;source code reading and analysis&amp;rdquo;, and the daily reading of code can only be done in these ways (or a combination of them). Combining the powerful source code cross-indexing and jumping features provided by source code editors or IDEs to establish links between codes in a large source code base. running the code up, adding some print output to the</description>
    </item>
    
    <item>
      <title>A global images distribution network</title>
      <link>https://www.sobyte.net/post/2022-03/global-images-distribution-network/</link>
      <pubDate>Mon, 28 Mar 2022 10:37:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/global-images-distribution-network/</guid>
      <description>1. Global network planning Many globally oriented multi-regional infrastructures are designed without much thought put into network planning at the beginning. When the complexity of the business reaches a certain level, they are then forced to make network adjustments and optimizations. And any major adjustments on the network will have a huge impact on the business. In the end, you will be caught in a dilemma and have to invest more manpower, carry the historical burden, and walk on the precipice again and again.</description>
    </item>
    
    <item>
      <title>A brief comparison of mainstream Kafka clients in the Go community</title>
      <link>https://www.sobyte.net/post/2022-03/the-comparison-of-the-go-community-leading-kakfa-clients/</link>
      <pubDate>Mon, 28 Mar 2022 09:57:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/the-comparison-of-the-go-community-leading-kakfa-clients/</guid>
      <description>I. Background As we all know, Kafka is a star open source project under the Apache Open Source Foundation. As an open source distributed event streaming platform, it is used by thousands of companies for high-performance data pipelines, stream analysis, data integration, and mission-critical applications. In China, large and small companies, whether they deploy their own or use Kafka cloud services like those provided by AliCloud, many Internet applications are</description>
    </item>
    
    <item>
      <title>Process creation in Linux</title>
      <link>https://www.sobyte.net/post/2022-03/process-creation-in-linux/</link>
      <pubDate>Mon, 28 Mar 2022 09:33:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/process-creation-in-linux/</guid>
      <description>Regardless of the field, building is often much more difficult than destroying. Building a building may take years, while destroying it may be a matter of seconds. At the root of this, because construction is an entropy-reducing process, there must be an input of energy from outside the system. One type of problem in creation that seems even more special is the problem of origins. How did the first life</description>
    </item>
    
    <item>
      <title>Clickhouse deployment and use in cloud-native scenarios</title>
      <link>https://www.sobyte.net/post/2022-03/clickhouse-cloud-native/</link>
      <pubDate>Mon, 28 Mar 2022 09:07:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/clickhouse-cloud-native/</guid>
      <description>ClickHouse is a column-oriented database management system (DBMS) for online analytical processing (OLAP) of queries. Clickhouse Features A true column-oriented DBMS In a true column-oriented DBMS, no additional data is stored along with the values. Beyond that, this means that constant length values must be supported to avoid storing their length &amp;ldquo;numbers&amp;rdquo; next to the values. For example, a billion UInt8 type values should consume about 1 GB uncompressed, otherwise</description>
    </item>
    
    <item>
      <title>Understanding Go Execution Tracer by Example</title>
      <link>https://www.sobyte.net/post/2022-03/go-execution-tracer-by-example/</link>
      <pubDate>Sun, 27 Mar 2022 16:52:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-execution-tracer-by-example/</guid>
      <description>Netflix&amp;rsquo;s performance architect Brendan Gregg in his book &amp;ldquo;BPF Performance Tools&amp;rdquo; gives a detailed description of tracing, sampling, and other concepts are described in detail to help developers understand these concepts and classify performance optimization aids based on these concepts and clarify their applicability. Some of them are cited here as follows. Sampling tools use a subset of measurements to paint a rough picture of the target; this is also</description>
    </item>
    
    <item>
      <title>Using go-metrics to add metrics to Go applications</title>
      <link>https://www.sobyte.net/post/2022-03/go-metrics/</link>
      <pubDate>Sun, 27 Mar 2022 16:32:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-metrics/</guid>
      <description>The Go language has a built-in expvar, and we can customize various metrics based on the support for basic metrics provided by expvar. But expvar only provides the lowest level of metric definition support, for some complex metric scenarios, third-party or self-implemented metrics packages are essential.
The go-metrics package is the most used metrics package in the Go domain, and it is an incomplete Go port of Coda Hale&amp;rsquo;s Metrics library, which is still very active in the Java community (I have to sigh: the Java ecosystem is really powerful).</description>
    </item>
    
    <item>
      <title>How to use the uber open source zap log library very well</title>
      <link>https://www.sobyte.net/post/2022-03/uber-zap-advanced-usage/</link>
      <pubDate>Sun, 27 Mar 2022 10:50:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/uber-zap-advanced-usage/</guid>
      <description>Logging has an important place in the back-end system. Not only can logs visualize the current running state of the program, but more importantly they can provide clues to developers when something goes wrong with the program. In the Go ecosystem, logrus is probably the most used Go logging library, which not only provides structured logs, but more importantly is compatible with the standard library log package at the api</description>
    </item>
    
    <item>
      <title>Figuring out the Golang plugin</title>
      <link>https://www.sobyte.net/post/2022-03/golang-plugin/</link>
      <pubDate>Sun, 27 Mar 2022 10:22:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-plugin/</guid>
      <description>To count the features in Go that I haven&amp;rsquo;t used yet, the go plugin introduced in Go 1.8 is one of them. Recently I wanted to design a plugin system for a gateway-type platform, so I thought of the go plugin ^_^. Go plugin supports compiling Go packages to be distributed separately as shared libraries (.so), and the main application can dynamically load these go plugins compiled as dynamic shared</description>
    </item>
    
    <item>
      <title>Go I/O multiplexing based TCP protocol stream parsing in practice</title>
      <link>https://www.sobyte.net/post/2022-03/go-multiplexing-tcp/</link>
      <pubDate>Sun, 27 Mar 2022 10:10:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-multiplexing-tcp/</guid>
      <description>In the article &amp;ldquo;Go Classical Blocking TCP Stream Parsing in Practice&amp;rdquo;, we implemented a custom TCP stream-based parsing protocol based on Go&amp;rsquo;s classical blocking I/O model. The advantage of this one-connection-per-goroutine model is that it is simple, well-written, and well-understood, reducing the mental burden on developers. However, once the number of connections is up, the number of goroutines increases linearly. When faced with a large number of connections, this model</description>
    </item>
    
    <item>
      <title>Go classical blocking TCP protocol stream parsing in practice</title>
      <link>https://www.sobyte.net/post/2022-03/go-block-tcp-parse/</link>
      <pubDate>Sun, 27 Mar 2022 09:48:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-block-tcp-parse/</guid>
      <description>1. Go&amp;rsquo;s TCP network programming model for classical blocking I/O The Go language has made rapid development over the past decade or so since its birth and has been widely accepted and used by developers around the world for a wide range of applications, including: Web services, databases, network programming, system programming, DevOps, security detection and control, data science, and artificial intelligence. The following are some of the results of</description>
    </item>
    
    <item>
      <title>Fix the contents of the Error.cshtml file of the ASP.NET MVC 5 project template in Visual Studio</title>
      <link>https://www.sobyte.net/post/2022-03/vs-fix-error/</link>
      <pubDate>Sun, 27 Mar 2022 09:38:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/vs-fix-error/</guid>
      <description>The /Views/Shared/Error.cshtml view (View) file for the ASP.NET MVC 5 project templates from Visual Studio 2017 all the way to Visual Studio 2022 is wrong. When I was teaching the ASP.NET MVC 5 course, I had to Google the full example of this file or look for a version I had written before. Today&amp;rsquo;s article explains the problem and provides a complete example program for me to quickly find the</description>
    </item>
    
    <item>
      <title>When will variables caught by closures be recycled in Go?</title>
      <link>https://www.sobyte.net/post/2022-03/when-variables-captured-by-closures-are-recycled-in-go/</link>
      <pubDate>Sat, 26 Mar 2022 11:53:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/when-variables-captured-by-closures-are-recycled-in-go/</guid>
      <description>1. Go function closures The Go language provides native support for closures. In Go, closures are function literals. The Go specification interprets closures in the following way.
 function literals are closures: they can refer to variables defined in their wrapping function. These variables are then shared between the wrapping function and the function literals, and they continue to exist as long as they can be accessed.
 Closures have a wide range of applications in Go, most often used in conjunction with the go keyword to create a new goroutine, such as the following code from the net/http package in the standard library.</description>
    </item>
    
    <item>
      <title>Small company internal private Go module pulling solution</title>
      <link>https://www.sobyte.net/post/2022-03/private-go-module/</link>
      <pubDate>Sat, 26 Mar 2022 11:36:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/private-go-module/</guid>
      <description>1. The cause of the problem With the introduction of the Go module in Go 1.11, the Go command to pull the dependent public go module is no longer a &amp;ldquo;pain point&amp;rdquo;. This is shown in the figure below.
We only need to configure a public GOPROXY service for the environment variable GOPROXY within our company/organization to easily pull all public go modules (public mods are open source mods).
However, as the number of Go users in the company increases and the number of Go projects increases, the problem of &amp;ldquo;code duplication&amp;rdquo; arises.</description>
    </item>
    
    <item>
      <title>Response design for gRPC services</title>
      <link>https://www.sobyte.net/post/2022-03/the-design-of-the-response-for-grpc-server/</link>
      <pubDate>Sat, 26 Mar 2022 11:20:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/the-design-of-the-response-for-grpc-server/</guid>
      <description>1. Status of server-side response Developers doing back-end services are always sensitive to error handling, so they will always be very careful when doing the service response (response/reply) design.
If the back-end service is selected from HTTP API (rest api), such as json over http, the API response (Response) will mostly contain the following information.
1 2 3 4 5 6 7  { &amp;#34;code&amp;#34;: 0, &amp;#34;msg&amp;#34;: &amp;#34;ok&amp;#34;, &amp;#34;payload&amp;#34; : { .</description>
    </item>
    
    <item>
      <title>The first thing to do after switching to Go 1.18: replace all interfaces{} with any</title>
      <link>https://www.sobyte.net/post/2022-03/replace-empty-interface-with-any-first-after-switching-to-go-1-18/</link>
      <pubDate>Sat, 26 Mar 2022 10:53:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/replace-empty-interface-with-any-first-after-switching-to-go-1-18/</guid>
      <description>With the release of Go 1.18, many Gopher&amp;rsquo;s can&amp;rsquo;t wait to download the release and experience the new features! After Go 1.18 arrives, what is the first thing you want to do? Speaking of which, many people will ask: What meme is this? This meme comes from Russ Cox on December 1, 2021 a commit to the Go language project. As you can see from the commit log, the main</description>
    </item>
    
    <item>
      <title>How Go GC detects if a memory object contains a pointer</title>
      <link>https://www.sobyte.net/post/2022-03/how-gc-detect-pointer-in-mem-obj/</link>
      <pubDate>Sat, 26 Mar 2022 10:39:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-gc-detect-pointer-in-mem-obj/</guid>
      <description>As we all know, Go is a programming language with garbage collection (GC), so developers usually don&amp;rsquo;t need to think about memory management, which reduces the mental burden, and while the Go program is running, the GC is quietly working behind the scenes to do the &amp;ldquo;aftercare &amp;ldquo; for the developer: releasing the memory objects that can&amp;rsquo;t be reached periodically for subsequent reuse. GC only cares about pointer, as long</description>
    </item>
    
    <item>
      <title>Talking about engineering practices for Go application output logging</title>
      <link>https://www.sobyte.net/post/2022-03/go-logging-practice/</link>
      <pubDate>Fri, 25 Mar 2022 14:08:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-logging-practice/</guid>
      <description>Go is a back-end language that is known for developing various services, middleware and system platforms. When learning Go, logging is not indispensable or even unnecessary, but once we get to the real Go engineering practice, output logging is an inevitable problem we must face. Most of the services developed by Go have the property of continuous and autonomous operation, usually running 7×24 hours, and it is</description>
    </item>
    
    <item>
      <title>Why does the &#34;dependency hell&#34; problem persist with the Go module?</title>
      <link>https://www.sobyte.net/post/2022-03/dependency-hell-in-go/</link>
      <pubDate>Fri, 25 Mar 2022 13:46:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/dependency-hell-in-go/</guid>
      <description>If all Gophers abandoned the GOPATH build model and embraced the Go module build model, if all legacy Go package authors added go.mod to their legacy packages, and if all Go module authors adhered strictly to the semantic versioning (semver) specification, then Go would solve the &amp;ldquo;dependency hell&amp;rdquo; problem once and for all. But the reality is not so rosy! The &amp;ldquo;dependency hell problem&amp;rdquo; in Go still exists . In</description>
    </item>
    
    <item>
      <title>Does Go support incremental builds?</title>
      <link>https://www.sobyte.net/post/2022-03/golang-incremental-builds/</link>
      <pubDate>Fri, 25 Mar 2022 13:23:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-incremental-builds/</guid>
      <description>The Go language is known in the programmer community for its fast compilation speed. This is due to the fact that Go chose to abandon the header file inclusion mechanism of its C ancestor in favor of package as the basic unit of compilation, which makes dependency analysis very simple and avoids the huge overhead of analyzing dependencies through header files as in C. Three specific reasons for Go&amp;rsquo;s fast</description>
    </item>
    
    <item>
      <title>Is the result of the len(s) expression a constant or a variable?</title>
      <link>https://www.sobyte.net/post/2022-03/golang-len/</link>
      <pubDate>Fri, 25 Mar 2022 09:58:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-len/</guid>
      <description>len is a Go predefined identifier and also a Go built-in predefined function, through the go doc tool we can check the doc of the len function as follows. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 $go doc builtin.len package builtin // import &amp;#34;builtin&amp;#34; func len(v Type) int The len built-in function returns the length of v, according to its type:</description>
    </item>
    
    <item>
      <title>Asynchronous Programming Methods and Practices in JavaScript</title>
      <link>https://www.sobyte.net/post/2022-03/javascript-async-programming/</link>
      <pubDate>Fri, 25 Mar 2022 09:29:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/javascript-async-programming/</guid>
      <description>1. Why Asynchronous Programming JavaScript is a single-threaded programming language that can only execute one task at a time. In order to handle different task scheduling logic, asynchronous programming is unavoidable in JavaScript development. The following scenarios necessarily involve asynchronous programming methods. IO operations: external device access File access TCP / UDP network access Asynchronous APIs setTimeout / setInterval setImmediate process.nextTick queueMicrotask Event 2. Several ways to implement asynchronous programming</description>
    </item>
    
    <item>
      <title>Introduction to Linux TC Flow Control</title>
      <link>https://www.sobyte.net/post/2022-03/linux-tc-flow-control/</link>
      <pubDate>Fri, 25 Mar 2022 09:06:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-tc-flow-control/</guid>
      <description>Some time ago, when doing some tests, I came across Linux tc, because I needed to add a delay to the packets, I used netem in tc. It is very easy to add a simple delay, just one command like this: $ tc qdisc add dev eth0 root netem delay 1s, you don&amp;rsquo;t even need to fully understand the meaning of the parameters in the command . But when you want to do some more specific restrictions, (such as adding delay only to a specific ip port, or adding delay only to inbound traffic), things get a little tricky, and a simple Google search doesn&amp;rsquo;t seem to satisfy the requirements anymore.</description>
    </item>
    
    <item>
      <title>SSL and GMVPN Handshake Protocol Explained</title>
      <link>https://www.sobyte.net/post/2022-03/ssl-gmvpn-handlshake/</link>
      <pubDate>Thu, 24 Mar 2022 16:14:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/ssl-gmvpn-handlshake/</guid>
      <description>Previously, I wrote an article on SSL protocol, which introduces the fundamentals of cryptography and gives an overall overview of the SSL protocol. For space reasons, the detailed flow of the SSL handshake was not covered in depth. In this paper, we will disassemble the handshake process and introduce it in detail at the message level. If you don&amp;rsquo;t have the basic concepts of cryptography or don&amp;rsquo;t know the basic information of SSL protocol, it is recommended to read the previous article first.</description>
    </item>
    
    <item>
      <title>Cryptography fundamentals and SSL/TLS protocols</title>
      <link>https://www.sobyte.net/post/2022-03/cryptography-ssl/</link>
      <pubDate>Thu, 24 Mar 2022 15:00:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/cryptography-ssl/</guid>
      <description>SSL protocol is an important part of modern network communication, which provides data security at the transport layer. In order to facilitate your understanding, this article will start with the basics of cryptography, and then move on to a detailed explanation of the SSL protocol principles, processes and some important features, and finally will expand on the differences between the national SSL protocols, security and the key new features of TLS 1.</description>
    </item>
    
    <item>
      <title>Function calling conventions in C</title>
      <link>https://www.sobyte.net/post/2022-03/function-calling-conventions-in-c/</link>
      <pubDate>Thu, 24 Mar 2022 10:35:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/function-calling-conventions-in-c/</guid>
      <description>This article focuses on function calling conventions in C. The assembly code is combined with real-time observation of stack changes to visualize the process of function calls. This article only discusses the situation in x86/64 architecture, Linux/GCC environment, but other environments should be similar in overall idea and need to deal with these issues. Preface What is the Calling Convention? It is mainly to facilitate the sharing of code and</description>
    </item>
    
    <item>
      <title>OpenSSL CVE-2022-0778 Vulnerability Recurrence and Illegal Certificate Construction</title>
      <link>https://www.sobyte.net/post/2022-03/openssl-cve-2022-0778/</link>
      <pubDate>Thu, 24 Mar 2022 10:02:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/openssl-cve-2022-0778/</guid>
      <description>Vulnerability Description The vulnerability is in the BN_mod_sqrt() interface function, which is used to compute the square root of a modulus and expects that the argument p should be a prime number, but there is no check within the function, which leads to a possible infinite loop internally. This function is used when parsing certificates of the following format.
 when the certificate contains an elliptic curve public key in compressed format certificate with explicit elliptic curve parameters whose base point is encoded in compressed format  In short, this function is called when the certificate is parsed and the point coordinates need to be decompressed.</description>
    </item>
    
    <item>
      <title>How the Linux kernel is booted</title>
      <link>https://www.sobyte.net/post/2022-03/how-the-linux-kernel-is-booted/</link>
      <pubDate>Thu, 24 Mar 2022 09:43:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-the-linux-kernel-is-booted/</guid>
      <description>This article describes the boot process and the initialization process of the Linux kernel. What happens from the time you press power until you finally log in to the terminal? Note: This article is based on Linux 0.11, and the kernel source code can be downloaded from here. 0.11 is simple enough, but the basic functionality of the kernel is close enough to the current version to make it a</description>
    </item>
    
    <item>
      <title>Nginx&#39;s shared memory management - the slab algorithm</title>
      <link>https://www.sobyte.net/post/2022-03/nginx-slab/</link>
      <pubDate>Thu, 24 Mar 2022 09:23:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/nginx-slab/</guid>
      <description>I first learned about the slab algorithm when I was learning the Linux kernel. The kernel uses the Buddy System algorithm to manage memory pages. But for small objects, it would be wasteful to use a page allocator, so slab was born. The kernel&amp;rsquo;s kmalloc() is managed using slab. nginx&amp;rsquo;s shared memory management uses the same idea, but it is not as complex as slab in the Linux kernel. slab</description>
    </item>
    
    <item>
      <title>In-depth understanding of mmap - kernel code analysis and driver demo examples</title>
      <link>https://www.sobyte.net/post/2022-03/mmap/</link>
      <pubDate>Thu, 24 Mar 2022 09:01:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/mmap/</guid>
      <description>mmap is a very common system call in user space, whether it is allocating memory, reading and writing large files, linking dynamic library files, or sharing memory between multiple processes. This article first introduces the process address space and mmap, then analyzes the kernel code to understand its implementation, and finally deepens the understanding of mmap with a simple demo driver example. Process address space and vma As a pre-knowledge,</description>
    </item>
    
    <item>
      <title>Should I use 777 or 0777 for os.Chmod?</title>
      <link>https://www.sobyte.net/post/2022-03/0777-or-777/</link>
      <pubDate>Wed, 23 Mar 2022 17:44:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/0777-or-777/</guid>
      <description>Here&amp;rsquo;s the problem: I called os.Chmod(&amp;quot;test.txt&amp;quot;, 777) in the code, hoping to make the read/write and execute permissions of the file available to all users.
After executing the code, I used the command ls to look at the list of files by hand. Here is the list.
1 2  $ ls -l test.txt -r----x--x 1 cyhone 1085706827 0 Jun 20 13:27 test.txt   Surprisingly, the file permissions do not change to rwxrwxrwx as expected.</description>
    </item>
    
    <item>
      <title>Deep analysis of Golang sync.Pool underlying principles</title>
      <link>https://www.sobyte.net/post/2022-03/think-in-sync-pool/</link>
      <pubDate>Wed, 23 Mar 2022 17:11:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/think-in-sync-pool/</guid>
      <description>sync.Pool is Golang&amp;rsquo;s built-in object pooling technology, which can be used to cache temporary objects to avoid the consumption and pressure on GC caused by frequent creation of temporary objects. You can see sync.Pool used extensively in many well-known open source libraries. For example, the HTTP framework Gin uses sync.Pool to reuse the gin.Context object that is created with each request. sync.Pool can also be found in grpc-Go, kubernates, and</description>
    </item>
    
    <item>
      <title>A First Look at Web Components</title>
      <link>https://www.sobyte.net/post/2022-03/web-components/</link>
      <pubDate>Wed, 23 Mar 2022 15:03:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/web-components/</guid>
      <description>I first learned about the concept of Web Components in 2019 and only recently started trying to use it, this will be a brief introduction to Web Components, understanding its standards, what problems it solves and its advantages, the interface API it provides, the level of compatibility This article will briefly introduce Web Components, learn about its standard, what problems it solves and its advantages, the interface API it provides,</description>
    </item>
    
    <item>
      <title>Using ref to get dom elements in Vue3&#39;s setup</title>
      <link>https://www.sobyte.net/post/2022-03/vue3-ref-dom/</link>
      <pubDate>Wed, 23 Mar 2022 14:56:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/vue3-ref-dom/</guid>
      <description>Background question How to get focus for input in vue3? How does vue3 setup syntactic sugar get the dom element? The vue2 approach In vue2, after setting the ref property on a component, you can access the corresponding DOM element via this.$refs.ref. 1 &amp;lt;input type=&amp;#34;text&amp;#34; ref=&amp;#34;inputRef&amp;#34; /&amp;gt; In JavaScript you can access. 1 this.$refs.usernameInput If you need to focus on the input box. 1 this.$refs.usernameInput.focus() vue3 There are no $refs</description>
    </item>
    
    <item>
      <title>Protocol Buffers Encoding</title>
      <link>https://www.sobyte.net/post/2022-03/pb-encoding/</link>
      <pubDate>Wed, 23 Mar 2022 09:51:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pb-encoding/</guid>
      <description>In today&amp;rsquo;s cloud era gRPC is very popular, and the default serialization encoding of gRPC Protocol Buffers is also popular. It is said that Protocol Buffers is very efficient, but what is it? Today we will discuss the coding rules of Protocol Buffers. There are basically two types of objects in the code, one with a fixed length, such as int32 occupying 32 bits and double occupying 64 bits, and</description>
    </item>
    
    <item>
      <title>Understanding the gRPC Protocol</title>
      <link>https://www.sobyte.net/post/2022-03/understanding-the-gprc-protocol/</link>
      <pubDate>Wed, 23 Mar 2022 09:35:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/understanding-the-gprc-protocol/</guid>
      <description>gRPC is Google&amp;rsquo;s open source RPC protocol framework. Because it comes with the aura of a big company, the use of gRPC is also becoming more and more widespread. So should we use gRPC when we make technology choices? This requires consideration of both positive and negative aspects. If gRPC is good, what is it good for? What does it sacrifice for this good? What problems do we face in</description>
    </item>
    
    <item>
      <title>Implementing a simple gRPC client using Golang</title>
      <link>https://www.sobyte.net/post/2022-03/golang-grcp-client/</link>
      <pubDate>Wed, 23 Mar 2022 09:14:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-grcp-client/</guid>
      <description>I recently mentioned the gRPC protocol in a discussion with a friend, and I&amp;rsquo;ve written about gRPC before. People usually use the official grpc library to communicate directly. But as far as I can see, most of them are Unary requests and very few are stream calls. Unary requests of gRPC are not much different from ordinary http/2 calls, so we can write a simple gRPC client by ourselves. Today,</description>
    </item>
    
    <item>
      <title>Zero-Copy Optimization in the Golang</title>
      <link>https://www.sobyte.net/post/2022-03/golang-zero-copy/</link>
      <pubDate>Tue, 22 Mar 2022 19:26:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-zero-copy/</guid>
      <description>Anyone familiar with the Go language should be familiar with interfaces and methods such as io.Copy()/io.CopyN()/io.CopyBuffer()/io.ReaderFrom. They are APIs that are often used to transfer data using Go to manipulate various types of I/O. The TCP-based socket makes use of Linux&amp;rsquo;s zero-copy technologies sendfile and splice when transferring data using these interfaces and methods.
splice After looking through Linux zero-copy techniques, splice is more suitable as a general-purpose zero-copy method than other techniques such as mmap, sendfile and MSG_ZEROCOPY in terms of cost, performance and applicability.</description>
    </item>
    
    <item>
      <title>Lifecycle Management Design Patterns in K8s</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-managed-lifecycle/</link>
      <pubDate>Tue, 22 Mar 2022 19:11:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-managed-lifecycle/</guid>
      <description>Containerized applications managed by cloud-native platforms have no control over their lifecycle, and to be good cloud-native , they must listen to events issued by the management platform and adjust their lifecycle accordingly. The hosted lifecycle model describes how applications can and should react to these lifecycle events. Existence of problems health probes we explain why containers provide APIs for different health checks. health check APIs are read-only endpoints that</description>
    </item>
    
    <item>
      <title>Centralized data management of multiple Prometheus instances with Thanos</title>
      <link>https://www.sobyte.net/post/2022-03/manage-multiple-prometheus-using-thanos/</link>
      <pubDate>Tue, 22 Mar 2022 14:51:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/manage-multiple-prometheus-using-thanos/</guid>
      <description>1. layering of monitoring As shown above, two strategies are used when building a monitoring system:
 The advantage of separating IaaS, MySQL middleware, and App tier monitoring is that the systems are highly available and fault-tolerant to each other. When the App tier monitoring does not work, the IaaS tier monitoring will immediately show up. Separation of long and short term metrics. Short-term metrics are used to provide alerting systems with high frequency queries for recent data, and long-term metrics are used to provide people with queries for data sets that span a larger period of time.</description>
    </item>
    
    <item>
      <title>Automatic scheduling design pattern in K8s</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-automatic-scheduling/</link>
      <pubDate>Tue, 22 Mar 2022 09:54:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-automatic-scheduling/</guid>
      <description>Automated Placement is a core feature of the Kubernetes scheduler that is used to assign new Pods to nodes that meet container resource requests and comply with the scheduling policy. This pattern describes the principles of Kubernetes&#39; scheduling algorithm and the way it influences scheduling decisions from the outside. Problems A reasonably sized microservices-based system consists of dozens or even hundreds of independent processes. Containers and Pods do provide good</description>
    </item>
    
    <item>
      <title>Timed Job Design Pattern in K8s</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-cronjob/</link>
      <pubDate>Tue, 22 Mar 2022 09:48:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-cronjob/</guid>
      <description>The Timed Job mode extends the Batch Job mode by adding a time dimension and allows a unit of work to be executed triggered by an event at that time.
Existence of problems In the world of distributed systems and microservices, real-time and event-driven application interaction using HTTP and lightweight messaging is a clear trend. However, regardless of the latest trends in software development, Job scheduling has a long history and it is still relevant.</description>
    </item>
    
    <item>
      <title>Daemon Service Design Pattern in K8s</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-daemon-service/</link>
      <pubDate>Tue, 22 Mar 2022 09:42:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-daemon-service/</guid>
      <description>Daemon Service mode allows for scheduling and running high-priority, infrastructure-focused Pods on target nodes. administrators primarily use it to run node-specific Pods to enhance the Kubernetes platform. Existence of problems The concept of daemon processes in software systems exists at many levels. At the operating system level, a daemon is a long-running, self-recovering computer program that runs as a background process. In Unix, daemon names end with a &amp;ldquo;d&amp;rdquo;, such</description>
    </item>
    
    <item>
      <title>Single Service Design Pattern in K8s</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-singleton-service/</link>
      <pubDate>Tue, 22 Mar 2022 09:30:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-singleton-service/</guid>
      <description>The Singleton service pattern ensures that only one instance of an application is active at a time, yet highly available. This pattern can be implemented from within the application, or can be delegated entirely to Kubernetes.
Existence of problems One of the main features provided by Kubernetes is the ability to easily and transparently scale applications. pods can be forced to scale with a single command (e.g. kubectl scale), or declaratively with a controller definition (e.</description>
    </item>
    
    <item>
      <title>How to switch from Webpacker to CSS/JS bundling</title>
      <link>https://www.sobyte.net/post/2022-03/webpacker-to-css-js-bundling/</link>
      <pubDate>Tue, 22 Mar 2022 09:15:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/webpacker-to-css-js-bundling/</guid>
      <description>One of the notable features of the recent Rails 7 release is CSS/JS bundling, which replaces Rails 6&amp;rsquo;s Webpacker.
Rails now creates projects that will add two parameters.
1 2  -j, [--javascript=JAVASCRIPT] # Choose JavaScript approach [options: importmap (default), webpack, esbuild, rollup] -c, [--css=CSS] # Choose CSS processor [options: tailwind, bootstrap, bulma, postcss, sass...]   For example, to use esbuild and sass you can use the following command.</description>
    </item>
    
    <item>
      <title>Rails on Docker: Build a development environment with Docker Compose</title>
      <link>https://www.sobyte.net/post/2022-03/rails-on-docker/</link>
      <pubDate>Tue, 22 Mar 2022 08:58:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rails-on-docker/</guid>
      <description>Why use Docker First of all, why should I use Docker in a development environment when it&amp;rsquo;s better to build it directly on my local system? Using Docker in a development environment provides the following benefits. Solidify the development environment into a configuration file, which makes it easy for new developers to start. Isolating system dependencies across projects to avoid interactions. Make the development environment as close to the production</description>
    </item>
    
    <item>
      <title>Lifetimes in Rust</title>
      <link>https://www.sobyte.net/post/2022-03/understanding-lifetimes-in-rust/</link>
      <pubDate>Mon, 21 Mar 2022 14:32:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/understanding-lifetimes-in-rust/</guid>
      <description>The things that make the lifetime annotation syntax awkward for me are
 it&amp;rsquo;s not a real type because it can&amp;rsquo;t be instantiated like a real type, but it can be passed into the type parameter of a generic type like a real type, and it does have covariant inversion for real subtyping it can also be used as a type constraint like Trait, in addition to other lifetime annotations like &#39;a: &#39;b, it can also be constrained with normal types like T: &#39;a.</description>
    </item>
    
    <item>
      <title>Can you answer this Go question correctly?</title>
      <link>https://www.sobyte.net/post/2022-03/go-s-test-questions/</link>
      <pubDate>Mon, 21 Mar 2022 14:04:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-s-test-questions/</guid>
      <description>Bartłomiej Płotka, chief software engineer at Redhat and maintainer of projects such as Prometheus, asked a Go question on twitter with the following title.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  func aaa() (done func(), err error) { return func() { print(&amp;#34;aaa: done&amp;#34;) }, nil } func bbb() (done func(), _ error) { done, err := aaa() return func() { print(&amp;#34;bbb: surprise!</description>
    </item>
    
    <item>
      <title>How to Distribute Files and Scripts to Vm Under Kubernetes</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-distribute-files-and-scripts-to-vm-under-kubernetes/</link>
      <pubDate>Mon, 21 Mar 2022 09:49:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-distribute-files-and-scripts-to-vm-under-kubernetes/</guid>
      <description>1. What this article is about Growth in business volume and evolution of business forms require solid and robust IT systems to support them. Business content is transparent to the market, but IT systems can&amp;rsquo;t be built overnight. The competition between companies in the future will mainly come from the competition between IT systems, and the ability to respond quickly to business needs is the key to victory.
IT systems are constantly evolving.</description>
    </item>
    
    <item>
      <title>Kubernetes, cluster federation, and resource distribution</title>
      <link>https://www.sobyte.net/post/2022-03/kuberentes-federation/</link>
      <pubDate>Mon, 21 Mar 2022 09:16:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kuberentes-federation/</guid>
      <description>Kubernetes has claimed to support 5,000 nodes in a single cluster since an earlier release, and there are no plans to increase the number of nodes supported by a single Kubernetes cluster in the near future. If you need to support more than 5,000 nodes in Kubernetes, Federation is the preferred method of cluster federation.
 People frequently ask how far we are going to go in improving Kubernetes scalability. Currently we do not have plans to increase scalability beyond 5000-node clusters (within our SLOs) in the next few releases.</description>
    </item>
    
    <item>
      <title>Commonly used encryption algorithms in programming</title>
      <link>https://www.sobyte.net/post/2022-03/encryption-algorithms/</link>
      <pubDate>Mon, 21 Mar 2022 08:59:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/encryption-algorithms/</guid>
      <description>Preface There are several common encryption algorithms in programming, and they each have applications in different scenarios. All encryption methods except the message digest algorithm will require a key. Message digest algorithm Symmetric encryption algorithm Asymmetric encryption algorithm Key A key (key, also often called golden key) is some secret information used to accomplish encryption, decryption, integrity verification, and other cryptographic applications. Key classification Keys in encryption and decryption: share</description>
    </item>
    
    <item>
      <title>How to Configure NetworkPolicy for NodePort in Kubernetes</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-nodeport-networkpolicy/</link>
      <pubDate>Sun, 20 Mar 2022 12:29:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-nodeport-networkpolicy/</guid>
      <description>1. Background of requirements As shown above, the business side needs to isolate the namespae&amp;rsquo;s service by disabling load access to the bar space and allowing users to access the service from the Load Balancer (LB) via NodePort. A network policy can be easily written.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  apiVersion:networking.k8s.io/v1kind:NetworkPolicymetadata:name:test-network-policynamespace:foospec:podSelector:matchLabels:{}policyTypes:- Ingressingress:- from:- ipBlock:cidr:10.2.3.4/32- namespaceSelector:matchExpressions:- key:regionoperator:NotInvalues:- bar  However, traffic accessing from LB is completely banned, which is not expected.</description>
    </item>
    
    <item>
      <title>Building and Using Go Private Packages</title>
      <link>https://www.sobyte.net/post/2022-03/building-and-using-go-private-packages/</link>
      <pubDate>Sun, 20 Mar 2022 12:19:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/building-and-using-go-private-packages/</guid>
      <description>1. Create a Go Modules project  Create a directory  1 2  mkdir go-test cd go-test    Initialization package  1 2 3 4 5  go mod init gitlab.private.com/shaowenchen/go-test go: creating new go.mod: module gitlab.private.com/shaowenchen/go-test go: to add module requirements and sums: go mod tidy    Add business code  main.go
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  package main import ( &amp;#34;github.</description>
    </item>
    
    <item>
      <title>Tekton pipelines under multiple clusters</title>
      <link>https://www.sobyte.net/post/2022-03/using-kubefed-to-distribute-tekton-resource-cross-cluster/</link>
      <pubDate>Sun, 20 Mar 2022 12:04:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/using-kubefed-to-distribute-tekton-resource-cross-cluster/</guid>
      <description>1. The advantages of Tekton for multi-cluster builds With Kubernetes, Tekton is already very resilient and can support large scale builds. At the same time, the development task mainly uses Yaml and Shell, which extends the scope of Tekton for various scenarios. Above is a diagram of Tekton under multiple clusters. Why does Tekton need a multi-cluster execution pipeline? Variable Kubernetes clusters at any time. A single Kubernetes cluster cannot</description>
    </item>
    
    <item>
      <title>Tekton Based Cicd Platform</title>
      <link>https://www.sobyte.net/post/2022-03/tekton-based-cicd-platform/</link>
      <pubDate>Sun, 20 Mar 2022 11:54:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/tekton-based-cicd-platform/</guid>
      <description>1. Background 1.1 Problems currently encountered with Jenkins  Unstable orchestration engine  Jenkins is an orchestration engine written in Java that stops The World (STW) on Full GC. During large builds, STW can cause Jenkins to be unable to process new requests.
 Large builds stall  Jenkins uses disk files to store data, and each pipeline, each build, takes up a file directory and generates a large number of files.</description>
    </item>
    
    <item>
      <title>Gateway Services under Kubernetes - APISIX</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-gateway-apisix/</link>
      <pubDate>Sun, 20 Mar 2022 11:40:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-gateway-apisix/</guid>
      <description>1. A comparison of several common gateways  Nginx, modular reverse proxy software, developed in C OpenResty, a Nginx-based web development platform that parses and executes Lua scripts Kong, an application of OpenResty, is an API gateway with API management and request proxy functions, using PostgreSQL storage APISIX, which replaces Kong&amp;rsquo;s PostgreSQL for Etcd, based on Nginx&amp;rsquo;s core library implementation  The advantage of APISIX is that it provides API management and extension capabilities, allowing the gateway to be configured and customized instead of just forwarding services.</description>
    </item>
    
    <item>
      <title>Monitor of Kubernetes Using Prometheus Grafana</title>
      <link>https://www.sobyte.net/post/2022-03/monitor-of-kubernetes-using-prometheus-grafana/</link>
      <pubDate>Sun, 20 Mar 2022 11:28:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/monitor-of-kubernetes-using-prometheus-grafana/</guid>
      <description>The Prometheus community is updating so fast that some of the documentation written before is a bit out of date. Recently, I started to focus on observability again, and make up for some knowledge points in operation and maintenance.
1. Explanation of terms  Grafana  A visualization tool that provides various visualization panels and supports various data sources, including Prometheus, OpenTSDB, MySQL, etc.
 Prometheus  A time series database, mainly used to collect, store, and provide query data to the public.</description>
    </item>
    
    <item>
      <title>How to add an entrance to Kubernetes Apiserver.</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-add-entrance-to-kubernetes-apiserver/</link>
      <pubDate>Sun, 20 Mar 2022 11:19:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-add-entrance-to-kubernetes-apiserver/</guid>
      <description>1. How to access the remote cluster locally During development, you need to connect to the remote Kubernetes cluster directly. The usual practice is to copy /etc/kubernetes/admin.conf to the local ~/.kube/kubeconfig.
But the server address for kubeconfig is kubernetes.default.svc. Therefore, we need to configure a hosts.
1  1.1.1.1 kubernetes.default.svc   If you need to switch between clusters, not only do you need to change kubeconfig, but you also need to modify the hosts.</description>
    </item>
    
    <item>
      <title>Multi-cluster applications under Kubevela</title>
      <link>https://www.sobyte.net/post/2022-03/multi-cluster-applications-under-kubevela/</link>
      <pubDate>Sun, 20 Mar 2022 11:07:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/multi-cluster-applications-under-kubevela/</guid>
      <description>Kubevela is currently at version 1.1. In general, we consider version 1.x to be relatively stable enough to try to introduce into production. As we continue to track and learn, we&amp;rsquo;ve learned some good things about Kubevela, and this is a short summary document.
1. What Kubevela can solve  For platform developers  Several roles need to be distinguished: development, operations and maintenance, and operations and maintenance development. Development is oriented to business needs, Ops is oriented to business stability, and Ops development is oriented to efficiency.</description>
    </item>
    
    <item>
      <title>Time and Time Zone in Go</title>
      <link>https://www.sobyte.net/post/2022-03/time-timezeon-tips/</link>
      <pubDate>Sun, 20 Mar 2022 10:57:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/time-timezeon-tips/</guid>
      <description>1. Time and Time Zone 1.1 Time standard UTC, Universal Time, is the current standard of time and is measured in atomic time.
GMT, Greenwich Mean Time, is the former time standard, which specifies that the sun passes the Royal Greenwich Observatory in the suburbs of London, England, at 12:00 noon each day.
UTC time is more accurate, but if accuracy is not required, the two standards can be considered equivalent.</description>
    </item>
    
    <item>
      <title>Conditional compilation using if constexpr </title>
      <link>https://www.sobyte.net/post/2022-03/if-constexpr/</link>
      <pubDate>Sat, 19 Mar 2022 18:30:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/if-constexpr/</guid>
      <description>In project development, we usually use conditional compilation to trim code and selectively exclude code that is not needed, for example, if a feature is not supported at all under a certain platform, then that feature should not be compiled. Generally we use macros to determine the code, selectively pick the parts that need to be compiled, and turn on such conditions in the build system. 1 2 3 4</description>
    </item>
    
    <item>
      <title>Prometheus Routing and Routing Configuration with Nginx Reverse Proxy</title>
      <link>https://www.sobyte.net/post/2022-03/prometheus-nginx-proxy/</link>
      <pubDate>Sat, 19 Mar 2022 18:03:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/prometheus-nginx-proxy/</guid>
      <description>Background The company group an end-to-end containerized test environment, located under different sub-paths, proxied by Nginx: * For example, user A is under /a/prometheus/: /a/prometheus/. For example, user A is under /a/: /a/prometheus/ For example, user B under /b/: /b/prometheus/ The effect you want to achieve, in addition to the above distinction between different subpaths, requires that there is no such distinction inside the container: i.e., the container can be</description>
    </item>
    
    <item>
      <title>Develop and debug envoy with vscode Container</title>
      <link>https://www.sobyte.net/post/2022-03/vscode-container-debug-envoy/</link>
      <pubDate>Sat, 19 Mar 2022 16:55:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/vscode-container-debug-envoy/</guid>
      <description>As I am recently studying envoy project, which is a cpp project, for me this cpp newcomer is still more pressure, feel everywhere is a pit, open a guide article to record. If you want to study the envoy project source code, it is definitely necessary to jump to the code, but if you open it with clion, then you will find that envoy is built with bazel, no CMakeLists.txt</description>
    </item>
    
    <item>
      <title>Common commands for cleaning up Kubernetes cluster resources</title>
      <link>https://www.sobyte.net/post/2022-03/common-commands-for-cleaning-up-kubernetes-cluster-resources/</link>
      <pubDate>Sat, 19 Mar 2022 12:10:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/common-commands-for-cleaning-up-kubernetes-cluster-resources/</guid>
      <description>Long-running clusters often face a variety of resource exhaustion problems, in addition to insufficient disk Kubelet will also actively clean up the image to increase uncertainty, this article provides some command snippets for cleanup work.
1. Kubernetes Base Object Cleanup  Clean up Pods in Evicted state  1  kubectl get pods --all-namespaces -o wide | grep Evicted | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 kubectl delete pod -n    Clean up Pods in Error state  1  kubectl get pods --all-namespaces -o wide | grep Error | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 kubectl delete pod -n    Clearing the Completed state of Pods  1  kubectl get pods --all-namespaces -o wide | grep Completed | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 kubectl delete pod -n    Clean up unused PVs  1  kubectl describe -A pvc | grep -E &amp;#34;^Name:.</description>
    </item>
    
    <item>
      <title>Reading Btrfs partition files on MacOS</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-reading-btrfs-partition-files-under-macos/</link>
      <pubDate>Sat, 19 Mar 2022 12:03:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-reading-btrfs-partition-files-under-macos/</guid>
      <description>1. Background and pre-requisites The Btrfs file system is a younger file system than Ext4, with more playable features such as support for snapshots, subvolumes, checksums and self-tests, soft RAID and even transparent compression.
However, it is recommended not to use Btrfs file system without O&amp;amp;M capability. This article documents the process of reading data after removing the disk from the Btrfs file system under a Synology DSM system.
In my DSM system, there are two hard disks forming a RAID1 array, using the Btrfs file system.</description>
    </item>
    
    <item>
      <title>Several open source Kubernetes web-side management tools</title>
      <link>https://www.sobyte.net/post/2022-03/several-open-source-kubernetes-web-management-tools/</link>
      <pubDate>Sat, 19 Mar 2022 11:52:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/several-open-source-kubernetes-web-management-tools/</guid>
      <description>Recently, I was investigating the open source Kubernetes management platform, and the requirement was to be able to manage hundreds of clusters on the intranet. The function is positioned to assist in operations and maintenance, providing capabilities to the application layer, rather than directly to the end user.
1. Kubernetes Dashboard Project address.
https://github.com/kubernetes/dashboard
Technology Stack: Angular + Go
Key words.
 Single cluster K8s resource management  2. Kuboard Project address.</description>
    </item>
    
    <item>
      <title>How to cache third-party dependencies in a phased build</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-cache-third-party-package-whilie-building-in-stage/</link>
      <pubDate>Sat, 19 Mar 2022 11:39:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-cache-third-party-package-whilie-building-in-stage/</guid>
      <description>In non-phased build scenarios, when using containers for builds, we can mount the cache directory in the container to the build host to perform the build task; then copy the product to the run image to make the application image. However, in a phased build, the build image and the run image are in the same Dockerfile, which makes it difficult to optimize the cache for third-party dependencies.
1. Create a Vue instance project   Install the Vue CLI</description>
    </item>
    
    <item>
      <title>Migrating Docker storage to a new drive</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-migrate-docker-storage-to-new-disk/</link>
      <pubDate>Sat, 19 Mar 2022 11:34:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-migrate-docker-storage-to-new-disk/</guid>
      <description>1. hard disk formatting   View new disk
1  fdisk -l     Usually, the name of the second hard disk will be /dev/sdb.
  Disk partition
1  fdisk /dev/sdb     There will be a prompt to enter the following parameters.
1 2 3 4  command (m for help):n Partition number(1-4):1 First cylinder (1-22800,default 1):Enter command (m for help):w     Format the disk as ext4</description>
    </item>
    
    <item>
      <title>Adding an external DNS service to a Kubernetes cluster</title>
      <link>https://www.sobyte.net/post/2022-03/add-outer-dns-server-to-kubernetes-cluster/</link>
      <pubDate>Sat, 19 Mar 2022 11:30:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/add-outer-dns-server-to-kubernetes-cluster/</guid>
      <description>1. Add DNS to the host 1.1 CentOS Edit the resolve.conf file directly.
1 2 3 4  /etc/resolv.conf nameserver 114.114.114.114 nameserver 8.8.8.8   1.2 Ubuntu Since resolve.conf is automatically generated, you need to change resolved.conf to make it work.
1 2 3 4 5  vim /etc/systemd/resolved.conf [Resolve] DNS=114.114.114.114 DNS=8.8.8.8   Then restart the resolve service.
1  systemctl restart systemd-resolved.service   Finally, you can also confirm that the configuration is in effect.</description>
    </item>
    
    <item>
      <title>Injecting Environment Variables and Priorities in Kubernetes Pods</title>
      <link>https://www.sobyte.net/post/2022-03/injecting-env-vars-to-kubernetes-pod-and-priority/</link>
      <pubDate>Sat, 19 Mar 2022 11:26:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/injecting-env-vars-to-kubernetes-pod-and-priority/</guid>
      <description>1. Several ways for Kubernetes Pods to refer to environment variables 1.1 Direct Key/Value You can set the Value value directly, or you can use the current Pod&amp;rsquo;s information as the Value value.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  apiVersion:v1kind:Podmetadata:name:envar-demolabels:purpose:demonstrate-envarsspec:containers:- name:envar-demo-containerimage:gcr.io/google-samples/node-hello:1.0env:- name:DEMO_GREETINGvalue:&amp;#34;Hello from the environment&amp;#34;- name:DEMO_FAREWELLvalue:&amp;#34;Such a sweet sorrow&amp;#34;- name:MY_NODE_NAMEvalueFrom:fieldRef:fieldPath:spec.nodeName- name:MY_POD_NAMEvalueFrom:fieldRef:fieldPath:metadata.name  1.</description>
    </item>
    
    <item>
      <title>How to Upgrade a Kubernetes Cluster</title>
      <link>https://www.sobyte.net/post/2022-03/how-upgrade-kubernetes-cluster/</link>
      <pubDate>Sat, 19 Mar 2022 11:21:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-upgrade-kubernetes-cluster/</guid>
      <description>The upgrade idea is to upgrade the control node first and then the working node after expelling the load and taking off the traffic.
1. View cluster version 1 2 3 4  kubectl version Client Version: version.Info{Major:&amp;#34;1&amp;#34;, Minor:&amp;#34;20&amp;#34;, GitVersion:&amp;#34;v1.20.4&amp;#34;, GitCommit:&amp;#34;e87da0bd6e03ec3fea7933c4b5263d151aafd07c&amp;#34;, GitTreeState:&amp;#34;clean&amp;#34;, BuildDate:&amp;#34;2021-02-18T16:12:00Z&amp;#34;, GoVersion:&amp;#34;go1.15.8&amp;#34;, Compiler:&amp;#34;gc&amp;#34;, Platform:&amp;#34;linux/amd64&amp;#34;} Server Version: version.Info{Major:&amp;#34;1&amp;#34;, Minor:&amp;#34;22&amp;#34;, GitVersion:&amp;#34;v1.22.0&amp;#34;, GitCommit:&amp;#34;c2b5237ccd9c0f1d600d3072634ca66cefdf272f&amp;#34;, GitTreeState:&amp;#34;clean&amp;#34;, BuildDate:&amp;#34;2021-08-04T17:57:25Z&amp;#34;, GoVersion:&amp;#34;go1.16.6&amp;#34;, Compiler:&amp;#34;gc&amp;#34;, Platform:&amp;#34;linux/amd64&amp;#34;}   The current version is 1.22. Since kubeadm does not allow cross-version upgrades, we are going to upgrade to 1.</description>
    </item>
    
    <item>
      <title>Adding SSH Key Login and Troubleshooting</title>
      <link>https://www.sobyte.net/post/2022-03/add-ssh-key-login-os-and-troubleshooting/</link>
      <pubDate>Sat, 19 Mar 2022 11:14:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/add-ssh-key-login-os-and-troubleshooting/</guid>
      <description>1. Steps to add a key 1.1 Client-side generation of ssh key There are two formats of keys:
  The old format, the private key starts with -----BEGIN RSA PRIVATE KEY-----.
1  ssh-keygen -m PEM -t rsa -b 4096 -C &amp;#34;mail@chenshaowen.com&amp;#34;     New format, private key starts with -----BEGIN OPENSSH PRIVATE KEY-----.
1  ssh-keygen -t rsa -b 4096 -C &amp;#34;mail@chenshaowen.com&amp;#34;     Since some older systems do not support the new format of the Key, it is recommended to generate the old format of the Key.</description>
    </item>
    
    <item>
      <title>The one thing that makes React18 better than the old React</title>
      <link>https://www.sobyte.net/post/2022-03/react18-better-than-the-old-react/</link>
      <pubDate>Sat, 19 Mar 2022 11:05:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/react18-better-than-the-old-react/</guid>
      <description>React18 has entered the RC (release candidate) phase, only one step away from the official version. Today, instead of talking about new features, we&amp;rsquo;ll talk about a detail that makes v18 better than the old version: v18 may have fewer component renders. Where does the state come from? In the following components. 1 2 3 4 function App() { const [num, update] = useState(0); // ...省略</description>
    </item>
    
    <item>
      <title>Pulsar Repeat Consumption</title>
      <link>https://www.sobyte.net/post/2022-03/pulsar-repeat-consume/</link>
      <pubDate>Fri, 18 Mar 2022 16:29:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pulsar-repeat-consume/</guid>
      <description>I recently helped a colleague troubleshoot a problem where the same message was being consumed repeatedly when using Pulsar.
Troubleshoot I was skeptical when he told me about this phenomenon, based on my previous experience with Pulsar, which is explained in the official documentation and API.
Only when the ackTimeout for consumption is set and the consumption timeout is timed out will the message be recast, which is off by default and really not on by looking at the code.</description>
    </item>
    
    <item>
      <title>Flink JobManager HA on Kubernetes</title>
      <link>https://www.sobyte.net/post/2022-03/flink-ha-kubernetes/</link>
      <pubDate>Fri, 18 Mar 2022 09:40:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/flink-ha-kubernetes/</guid>
      <description>This article introduces the idea of implementing Flink&amp;rsquo;s JobManager HA on top of Kubernetes. flink 1.12 is not yet released, but we have seen this piece in the development plan. But this post is mainly about our internal implementation. 0. Flink HA HA stands for HighAvailability and is used in many distributed systems to solve the SPOF (single point of failure) problem. For example, the NameNode of HDFS, the distributed</description>
    </item>
    
    <item>
      <title>Replace grep with ripgrep</title>
      <link>https://www.sobyte.net/post/2022-03/ripgrep/</link>
      <pubDate>Fri, 18 Mar 2022 09:31:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/ripgrep/</guid>
      <description>grep is pre-installed on *nix systems and is a tool that programmers often use in their daily work. My recent work involves a lot of large text processing, and grep doesn&amp;rsquo;t work very fast. So I used ripgrep, a tool that runs much faster. This article is mainly excerpts from the use of their usual may be used. Install Just find your corresponding system command in the GitHub Repo guide</description>
    </item>
    
    <item>
      <title>Build container images in the pipeline using the docker in pod method</title>
      <link>https://www.sobyte.net/post/2022-03/docker-in-pod/</link>
      <pubDate>Fri, 18 Mar 2022 09:03:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/docker-in-pod/</guid>
      <description>docker has been criticized in the Kubernetes community for being a CRI, but it&amp;rsquo;s important to understand that CRIs are only part of docker&amp;rsquo;s functionality. There are still many areas that rely heavily on docker for local development testing or CI/CD streamline image builds. For example, docker&amp;rsquo;s official build-push-action is the preferred method for building container images on GitHub. Even docker&amp;rsquo;s rivals podman + skopeo + buildah are using docker</description>
    </item>
    
    <item>
      <title>Redis Multi-Threaded Network Model</title>
      <link>https://www.sobyte.net/post/2022-03/redis-multi-threaded-network-model/</link>
      <pubDate>Thu, 17 Mar 2022 09:10:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/redis-multi-threaded-network-model/</guid>
      <description>Redis has become the de facto standard for high-performance caching solutions in current technology selection, and as a result, Redis has become one of the basic skill trees for back-end developers, and the underlying principles of Redis are logically a must-learn. Redis is essentially a web server, and for a web server, the network model is the essence of it. If you understand the network model of a web server,</description>
    </item>
    
    <item>
      <title>Linux I/O Principles and Zero-copy Technology</title>
      <link>https://www.sobyte.net/post/2022-03/linux-io-and-zero-copy/</link>
      <pubDate>Wed, 16 Mar 2022 21:59:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-io-and-zero-copy/</guid>
      <description>Today&amp;rsquo;s network applications have shifted from CPU-intensive to I/O-intensive, and most of the network servers are based on the C-S model, i.e., the Client-Server model, which requires a lot of network communication between the client and the server, which also determines the performance bottleneck of modern network applications: I/O. The standard I/O interface of the traditional Linux operating system is based on data copy operations, i.e. I/O operations result in</description>
    </item>
    
    <item>
      <title>Go&#39;s distributed transaction framework - seata</title>
      <link>https://www.sobyte.net/post/2022-03/seata-golang/</link>
      <pubDate>Wed, 16 Mar 2022 11:03:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/seata-golang/</guid>
      <description>Seata Introduction Seata is a distributed transaction service open source by Ali , currently provides users with AT, TCC, SAGA, XA transaction mode , the overall use of a two-phase commit protocol. go version of seata-golang currently seems to implement only mysql AT, TCC mode , the author is not much updated now . Seata has several core roles. TC(Transaction Coordinator) - Transaction coordinator. (Maintains the state of global and</description>
    </item>
    
    <item>
      <title>Understanding of CAP theory</title>
      <link>https://www.sobyte.net/post/2022-03/cap/</link>
      <pubDate>Wed, 16 Mar 2022 10:53:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/cap/</guid>
      <description>One of the major difficulties in distributed systems is how to synchronize the states between nodes, and CAP is a proven law in the field of distributed systems.
The meaning of each letter is as follows.
 Consistency Availability Partition tolerance  Here we use some simple examples to illustrate.
Suppose our system is composed of two services:G1 and G2.
G1 and G2 maintain the same record V0. G1 and G2 can communicate with each other, and an external client (Client) can invoke either service.</description>
    </item>
    
    <item>
      <title>A troubleshooting process for frequent crashes in a kafka cluster</title>
      <link>https://www.sobyte.net/post/2022-03/kafka-crash/</link>
      <pubDate>Wed, 16 Mar 2022 10:34:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kafka-crash/</guid>
      <description>Overview Some brokers in a kafka cluster will restart randomly, and there is no pattern to the restart. broker restart is not perceptible to the client side at the usage level, but there are risks in data consistency and stability. broker restart, the connections connected to this broker will be reconnected to other normal brokers, increasing the pressure on the other This increases the pressure on other brokers in the cluster.</description>
    </item>
    
    <item>
      <title>Go Concurrency-working pool mode</title>
      <link>https://www.sobyte.net/post/2022-03/go-working-pool-mode/</link>
      <pubDate>Tue, 15 Mar 2022 09:41:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-working-pool-mode/</guid>
      <description>I read an article earlier: Handling 1 Million Requests per Minute with Go. Today I stumbled upon another article. The principle of the two articles is similar: there are a number of work tasks (jobs), through the work-pool (worker-pool) way, to achieve the effect of multiple worker concurrent processing job. There are still many differences between them, and the differences in implementation are quite big. Here is a picture, which</description>
    </item>
    
    <item>
      <title>Use of iota in Go</title>
      <link>https://www.sobyte.net/post/2022-03/go-iota/</link>
      <pubDate>Tue, 15 Mar 2022 09:31:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-iota/</guid>
      <description>Introduction The Go language doesn&amp;rsquo;t actually have direct support for the enumeration keyword. We generally implement enumeration capabilities via const + iota. One might ask, why do we have to use enums? There is a highly rated answer on stackoverflow. 1 2 3 4 5 You should always use enums when a variable (especially a method parameter) can only take one out of a small set of possible values. Examples</description>
    </item>
    
    <item>
      <title>How to Spoof Go Mod?</title>
      <link>https://www.sobyte.net/post/2022-03/gomod/</link>
      <pubDate>Tue, 15 Mar 2022 09:23:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/gomod/</guid>
      <description>Recently I was working on cortex optimization for prometheus ecosystem, and I came across a rather interesting go mod problem, which I&amp;rsquo;ll share here.
Why do I call the title: How to cheat Go mod? This is quite interesting, so I&amp;rsquo;ll sell it here, but it does break Go mod-related features.
Before we start this topic, we need to briefly introduce the cortex and thanos projects.
Limitations of Prometheus When it comes to business development, you can&amp;rsquo;t do without a monitoring system.</description>
    </item>
    
    <item>
      <title>Golang interface Principle - Type Conversion</title>
      <link>https://www.sobyte.net/post/2022-03/go-interface/</link>
      <pubDate>Tue, 15 Mar 2022 09:13:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-interface/</guid>
      <description>In this article, I&amp;rsquo;ll take a look at the interface from the internal degree assignment + assembly perspective, to understand how the interface works.
This article will focus on type conversions and related error-prone areas.
eface 1 2 3 4 5 6  func main() { var ti interface{} var a int = 100 ti = a fmt.Println(ti) }   This most common code now raises some questions.
 How to see if ti is eface or iface ?</description>
    </item>
    
    <item>
      <title>How Go timers are scheduled</title>
      <link>https://www.sobyte.net/post/2022-03/go-timer/</link>
      <pubDate>Tue, 15 Mar 2022 08:53:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-timer/</guid>
      <description>This article breaks down the content of Go timers. Timers are an important part of business development and infrastructure development, so you can see how important they are. AfterFun to initialize a timer, the timer will eventually be added to a global timer heap, which is managed by Go runtime. The global timer heap has undergone three major upgrades. Before Go 1.9, all timers were maintained by a globally unique</description>
    </item>
    
    <item>
      <title>A simple analysis of how the ElasticSearch Operator works</title>
      <link>https://www.sobyte.net/post/2022-03/elasticsearch-operator/</link>
      <pubDate>Mon, 14 Mar 2022 12:27:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/elasticsearch-operator/</guid>
      <description>ElasticSearch Operator The core features of the current ElasticSearch Operator.
 Elasticsearch, Kibana and APM Server deployments TLS Certificates management Safe Elasticsearch cluster configuration &amp;amp; topology changes Persistent volumes usage Custom node configuration and attributes Secure settings keystore updates  Installation Installing ElasticSearch Operator is very simple, based on &amp;lsquo;all in one yaml&amp;rsquo;, quickly pulling up all the components of Operator and registering the CRD.
1  kubectl apply -f https://download.</description>
    </item>
    
    <item>
      <title>Multi-Cluster Management with Kubernetes Kubefed</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-kubefed/</link>
      <pubDate>Mon, 14 Mar 2022 09:45:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-kubefed/</guid>
      <description>The previous article &amp;ldquo;Kubernetes Multi-Cluster Management: Kubefed (Federation v2)&amp;rdquo; gave a brief introduction to the basic concepts and working principles of Federation v2, and this article focuses on the use of Kubefed. The experimental environment for this article is v0.1.0-rc6. 1 2 $ kubefedctl version kubefedctl version: version.Info{Version:&amp;#34;v0.1.0-rc6&amp;#34;, GitCommit:&amp;#34;7586b42f4f477f1912caf28287fa2e0a7f68f407&amp;#34;, GitTreeState:&amp;#34;clean&amp;#34;, BuildDate:&amp;#34;2019-08-17T03:55:05Z&amp;#34;, GoVersion:&amp;#34;go1.12.5&amp;#34;, Compiler:&amp;#34;gc&amp;#34;, Platform:&amp;#34;linux/amd64&amp;#34;} Installation The installation of Federation v2 is divided into two parts, one is Controller Plan and</description>
    </item>
    
    <item>
      <title>Kubernetes Multi-Cluster Management: Kubefed (Federation v2)</title>
      <link>https://www.sobyte.net/post/2022-03/kubefed/</link>
      <pubDate>Mon, 14 Mar 2022 09:37:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubefed/</guid>
      <description>Why Federation v1 was deprecated Federation v1 entered Beta in Kubernetes v1.6, but it was deprecated until Kubernetes v1.11 or so. The reason for the deprecation was because the development team felt that the practice of cluster federation was more difficult than expected and that there were many issues that the v1 architecture did not take into account, such as
 Control plane components can affect the overall cluster efficiency due to problems that occur.</description>
    </item>
    
    <item>
      <title>How Kubernetes implements timed tasks</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-task/</link>
      <pubDate>Mon, 14 Mar 2022 09:30:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-task/</guid>
      <description>Each component of Kubernetes has certain timed tasks, such as log processing, querying of tasks, cache usage, etc. Timed tasks in Kubernetes are implemented through wait packages, such as starting a probe check in a Kubelet.
1 2 3 4 5 6 7  // Start syncing probe status. This should only be called once. func (m *manager) Start() { // Start syncing readiness. 	go wait.Forever(m.updateReadiness, 0) // Start syncing startup.</description>
    </item>
    
    <item>
      <title>Container tool without Daemon process: Podman</title>
      <link>https://www.sobyte.net/post/2022-03/podman/</link>
      <pubDate>Mon, 14 Mar 2022 09:19:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/podman/</guid>
      <description>What is a container Linux container technology A Linux container is a process with specific isolation provided by the Linux Kernel. Linux container technology allows you to package or isolate your application and its entire runtime environment (including all required files) together. This allows users to easily migrate applications between environments while retaining the full functionality of the application. Docker&amp;rsquo;s problem Docker is a famous open source container engine, which</description>
    </item>
    
    <item>
      <title>Manage Helm Chart with chartmuseum</title>
      <link>https://www.sobyte.net/post/2022-03/chartmuseum-helm-chart/</link>
      <pubDate>Sun, 13 Mar 2022 16:46:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/chartmuseum-helm-chart/</guid>
      <description>chartmuseum is an open source Helm Chart Repository that supports a variety of backend stores including GCS, S3, etc.
API chartmuseum provides several APIs to implement the capabilities of the Helm Chart Repository.
Helm related APIs  GET /index.yaml - Get the helm chart list when executing helm repo add chartmuseum http://localhost:8080/ GET /charts/mychart-0.1.0.tgz - Download the corresponding chart when you run helm install chartmuseum/mychart. GET /charts/mychart-0.1.0.tgz.prov - execute helm install with the --verify flag to get the provenance file for verification  Chart related API  POST /api/charts - upload a new chart POST /api/prov - upload a new provenance file (record provenance for integrity verification) DELETE /api/charts/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt; - Delete a chart version and the associated provenance file GET /api/charts - list all charts GET /api/charts/&amp;lt;name&amp;gt; - List all versions of a chart GET /api/charts/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt; - Get description information for a specific version of a chart GET / - welcome page GET /health - returns 200 OK  Install chartmuseum GoFish 1 2 3  gofish install chartmuseum ==&amp;gt; Installing chartmuseum.</description>
    </item>
    
    <item>
      <title>Monitoring Kubernetes Clusters with Prometheus</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-prometheus/</link>
      <pubDate>Sun, 13 Mar 2022 16:36:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-prometheus/</guid>
      <description>When you consider adding to your application based on the capabilities of Kubernetes, it&amp;rsquo;s like opening a Pandora&amp;rsquo;s Box, and you don&amp;rsquo;t know exactly what&amp;rsquo;s in that box, just as you don&amp;rsquo;t know what is, or will be, happening to the Kubernetes cluster and the applications on it that you rely on.
No matter what architecture is chosen and what runtime the underlying layer is based on, observability always has a very high priority.</description>
    </item>
    
    <item>
      <title>Building a Kubernetes CRD Controller with Kubebuilder</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-crd-controller/</link>
      <pubDate>Sun, 13 Mar 2022 16:27:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-crd-controller/</guid>
      <description>The previous article, How to Extend a Kubernetes Cluster with CRD, explained what CRD is and what capabilities it can provide through a demo. This article continues to build on that demo (https://github.com/Coderhypo/KubeService) and explains how to build a CRD Controller.
CRD Controller For the CRD (CustomResourceDefinition) itself, it is not too much to understand it as just a Schema of OpenApi, because that is its only ability and role, but for the broader statement: &amp;ldquo;CRD is used to implement xx functions&amp;rdquo;, it is actually the CRD Controller that is responsible for implementing the functions.</description>
    </item>
    
    <item>
      <title>How to Extend a Kubernetes Cluster with CRD</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-cluster-crd/</link>
      <pubDate>Sun, 13 Mar 2022 16:17:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-cluster-crd/</guid>
      <description>What is a CRD CRD itself is a Kubernetes built-in resource type, which stands for CustomResourceDefinition, and can be viewed with the kubectl get command to see the CRD resources defined within the cluster.
1 2 3 4  # kubectl get crd NAME CREATED AT apps.app.o0w0o.cn 2019-07-25T07:02:47Z microservices.app.o0w0o.cn 2019-07-25T07:02:47Z   After talking to people about CRD, I found that there are some common misconceptions about CRD, so some concepts need to be clarified in advance:</description>
    </item>
    
    <item>
      <title>Kubernetes Deployment Solution for MongoDB</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-mongodb/</link>
      <pubDate>Sun, 13 Mar 2022 16:06:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-mongodb/</guid>
      <description>The database used by Open Hackathon is MongoDB, and in containerization, the security of data is a top priority.
Storage issues Stateful applications need to use PersistentVolume when deployed on Kubernetes, but if the underlying PV storage is unreliable, even with PV, data security is still not guaranteed.
In a general usage scenario, the application needs to define a PersistentVolumeClaim to describe the required storage resources and use the PersistentVolumeClaim in the Pod, and the cluster will create or find a PersistentVolumeClaim based on the description in the PersistentVolumeClaim.</description>
    </item>
    
    <item>
      <title>Managing Kubernetes Applications with kustomize</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-kustomize/</link>
      <pubDate>Sun, 13 Mar 2022 12:32:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-kustomize/</guid>
      <description>With the release of Kubernetes 1.14, it was discovered that the Yaml management tool kustomize, which was only for the Kube interest group, was integrated into kubectl, so that you can use kubectl apply -k to apply kustomization.yaml from the specified directory to the cluster.
What is kustomize Using the tool definitely starts with figuring out where the tool is located. kustomize (Github link) is described in the code repository as.</description>
    </item>
    
    <item>
      <title>Kaniko: Build images in Kubernetes without privileges</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-kaniko/</link>
      <pubDate>Sun, 13 Mar 2022 11:35:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-kaniko/</guid>
      <description>Kaniko is one of the tools created by Google. It is used to build docker images on Kubernetes without privileges and is described in github (https://github.com/GoogleContainerTools/kaniko) as follows:
 kaniko is a tool to build container images from a Dockerfile, inside a container or Kubernetes cluster.
 How it works Traditional Docker build is a Docker daemon that executes sequentially on the host using a privileged user (root) and generates each layer of the image according to the Dockerfile.</description>
    </item>
    
    <item>
      <title>Istio and Service Mesh</title>
      <link>https://www.sobyte.net/post/2022-03/istio-and-service-mesh/</link>
      <pubDate>Sun, 13 Mar 2022 11:26:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/istio-and-service-mesh/</guid>
      <description>Recently, Service Mesh has become more and more popular and popular, and various community discussions have emerged. In the face of such a hot technology, we have some questions: What exactly is Service Mesh and what does it solve? In this article, we try to briefly explain the architectural design of Service Mesh and introduce its popular solution, Istio.
Starting with distributed systems Modern applications rarely use monolithic architectures anymore, and when distributed architectures become mainstream, network calls between system components become a natural problem.</description>
    </item>
    
    <item>
      <title>A Brief Introduction to WSGI</title>
      <link>https://www.sobyte.net/post/2022-03/wsgi/</link>
      <pubDate>Sun, 13 Mar 2022 11:21:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/wsgi/</guid>
      <description>WSGI is a term often referred to in Python Web development, and is defined in Wikipedia as follows. The Python Web Server Gateway Interface (abbreviated WSGI) is a simple and generic interface between a web server and a web application or framework defined for the Python language. Since WSGI was developed, similar interfaces have appeared in many other languages. As defined, WSGI is not a server, not an API, not</description>
    </item>
    
    <item>
      <title>Linux Process Scheduling</title>
      <link>https://www.sobyte.net/post/2022-03/linux-process-scheduling/</link>
      <pubDate>Sun, 13 Mar 2022 11:09:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-process-scheduling/</guid>
      <description>When participating in interviews, Linux processes should be considered a must for me, because many languages don&amp;rsquo;t bother to implement a set of process management and scheduling, but instead borrow directly from the operating system, especially the Python community which sees no need to duplicate the wheel in this area and uses a simple wrapper around system calls. As a result, it&amp;rsquo;s hard to really know what&amp;rsquo;s going to happen to the concurrent code you write if you don&amp;rsquo;t know much about Linux processes.</description>
    </item>
    
    <item>
      <title>Linux Process Management</title>
      <link>https://www.sobyte.net/post/2022-03/linux-process-management/</link>
      <pubDate>Sun, 13 Mar 2022 10:58:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-process-management/</guid>
      <description>It is the essence of an operating system to provide the ability to run programs. And in Linux, light and correspondingly fast process management is one of its good features. In this article, the focus is on the description, and life cycle of Linux processes.
Descriptors and task structures A process is a program in execution and usually includes some resources, such as files, pending signals, internal kernel data, processor state, memory space, and one or more threads of execution.</description>
    </item>
    
    <item>
      <title>Concurrent Programming in Python</title>
      <link>https://www.sobyte.net/post/2022-03/concurrent-programming-in-python/</link>
      <pubDate>Sat, 12 Mar 2022 12:11:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/concurrent-programming-in-python/</guid>
      <description>This article will explain the basic operations of concurrent programming in Python. Concurrency and parallelism are twin brothers, and the concepts are often confused. Joe Armstrong, the father of Erlang, has a very interesting diagram that illustrates these two concepts. One of my personal preferences is that concurrency is macro-parallel and micro-serial. GIL While Python comes with great class libraries to support multithreaded/processed programming, it is well known that Python</description>
    </item>
    
    <item>
      <title>Container persistence methods</title>
      <link>https://www.sobyte.net/post/2022-03/container-persistence-methods/</link>
      <pubDate>Sat, 12 Mar 2022 11:56:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/container-persistence-methods/</guid>
      <description>A container acts as an instance of a image, a runtime for stateless applications in the images. Stateless is so-called because the lifecycle of a container is very flexible. When a container&amp;rsquo;s lifecycle ends, the data generated during that time does not persist, but is removed with the deletion of the container. However, most applications are for data now, so the persistence of containers is explored here.
Storage for containers Before we discuss container persistence, let&amp;rsquo;s explore what data storage looks like without persistence, i.</description>
    </item>
    
    <item>
      <title>JavaScript Data Processing - Mapping Tables</title>
      <link>https://www.sobyte.net/post/2022-03/js-mapping-tables/</link>
      <pubDate>Sat, 12 Mar 2022 11:12:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/js-mapping-tables/</guid>
      <description>The common data collections in JavaScript are lists (Array) and mapping tables (Plain Object). This article talks about mapping tables. Due to the dynamic nature of JavaScript, the object itself is a mapping table, and the &amp;ldquo;attribute name ⇒ attribute value&amp;rdquo; of an object is the &amp;ldquo;key ⇒ value&amp;rdquo; in the mapping table. To make it easier to use the object as a mapping table, JavaScript even allows property names</description>
    </item>
    
    <item>
      <title>Getting Started with Kubernetes - A Knowledge Base</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-knowledge-base/</link>
      <pubDate>Sat, 12 Mar 2022 11:08:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-knowledge-base/</guid>
      <description>Start with an introduction to k8s knowledge points and common terms.
Master The Master node, the brain of k8s, is the control node of the cluster and is responsible for the management and control of the cluster. All other Nodes register themselves with the Master and report all information about themselves on a regular basis. The following four processes run on the Master node.
 Api Server: The service process that provides the HTTP Rest interface; the only entry point for all resource add, delete, and check operations; the entry point for cluster control, kubectl is directly responsible for the Api Server.</description>
    </item>
    
    <item>
      <title>Django&#39;s signaling mechanism</title>
      <link>https://www.sobyte.net/post/2022-03/django-signaling-mechanism/</link>
      <pubDate>Sat, 12 Mar 2022 11:02:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/django-signaling-mechanism/</guid>
      <description>Django describes signal as a &amp;ldquo;signal dispatcher&amp;rdquo; that triggers multiple applications, mainly in the form of signals. This article will explain how signals work in Django and how to use them from the perspective of source code analysis. Signal class The most common scenario for signal is notifications. For example, if your blog has comments, the system will have a notification mechanism to push the comments to you. If you</description>
    </item>
    
    <item>
      <title>Getting Started with Kubernetes - Pods Explained</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-pod/</link>
      <pubDate>Sat, 12 Mar 2022 10:46:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-pod/</guid>
      <description>Pods are the basic scheduling unit of k8s and are the key to k8s. This article explains how to publish and manage applications in k8s, starting from Pod usage, control, scheduling, and application configuration. Pod Basic Usage The requirement for a long-running container is that its main application needs to be running in the foreground at all times. kubelet creates a Pod containing this container, then runs the command, considers</description>
    </item>
    
    <item>
      <title>Python Coroutine</title>
      <link>https://www.sobyte.net/post/2022-03/python-coroutine/</link>
      <pubDate>Sat, 12 Mar 2022 10:35:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-coroutine/</guid>
      <description>A coroutine, also known as a micro-thread, is a lightweight thread. coroutines can be understood as processes that collaborate with the caller to produce values provided by the caller. The advantage over threads is that context switching is cheaper and under the control of the user.
History of development Coroutines in Python have gone through three main phases. coroutines were first implemented in Python 2.5, morphed from generators and implemented with keywords like yield/send; yield from was introduced, allowing complex generators to be refactored into small nested generators; Python 3.</description>
    </item>
    
    <item>
      <title>Getting Started with Kubernetes - Networking Explained</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-networking/</link>
      <pubDate>Fri, 11 Mar 2022 14:22:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-networking/</guid>
      <description>Service is the core concept of the k8s networking part, and in k8s, Service is mainly responsible for four layers of load balancing. This article explains the network-related principles of k8s in terms of load balancing, extranet access, DNS service construction, and the Ingress seven-layer routing mechanism. Service Explained Service is the main mechanism used to implement the application to provide services to the outside world. As shown in the</description>
    </item>
    
    <item>
      <title>Kubernetes Security Mechanisms Explained</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-security-mechanisms/</link>
      <pubDate>Fri, 11 Mar 2022 14:01:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-security-mechanisms/</guid>
      <description>In Kubernetes, all access and changes to resources revolve around the APIServer. For example, kubectl commands and client-side HTTP RESTFUL requests are all done by calling the APIServer API, so this article focuses on what k8s does for cluster security.
First, the official Kubernetes documentation gives the diagram above. It describes the authentication, authorization, and access control mechanisms of the APIServer that users need to go through before they can access or change resources.</description>
    </item>
    
    <item>
      <title>Kubernetes Job and Cronjob</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-job-and-cronjob/</link>
      <pubDate>Fri, 11 Mar 2022 13:50:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-job-and-cronjob/</guid>
      <description>If resources such as Deployment and DaemonSet take on long, online compute for Kubernetes, then regular, short-term, and even one-time offline compute is what Job and CronJob take on.
Job A Job is actually one or more pods that are defined to execute a task, and when the pod exits after execution, the Job is done. So Job is also called Batch Job, i.e. compute business or offline business.
Job Usage The YAML definition of a Job is very similar to Deployment.</description>
    </item>
    
    <item>
      <title>RabbitMQ Consumption Model and Dead Letter Queues</title>
      <link>https://www.sobyte.net/post/2022-03/rabbitmq-queue/</link>
      <pubDate>Fri, 11 Mar 2022 13:37:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rabbitmq-queue/</guid>
      <description>RabbitMQ Model RabbitMQ is a producer/consumer model, where the producer produces messages to a queue and the consumer takes messages from the queue to consume, without interacting directly with each other. Let&amp;rsquo;s start by looking at the structure of the RabbitMQ model. In the diagram, we can see that the entire structure consists of a Producer, an Exchange, a Queue, and a Consumer. Among them, the Producer and the Consumer</description>
    </item>
    
    <item>
      <title>The OIDC protocol and its use in Kubernetes</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-oidc/</link>
      <pubDate>Fri, 11 Mar 2022 13:29:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-oidc/</guid>
      <description>Most of the authentication mechanisms in K8s are done with ServiceAccount. Although K8s has the concept of User, there is no resource that corresponds to a &amp;ldquo;person&amp;rdquo;, so it is still very difficult to do user management in K8s. The good thing is that K8s provides an alternative way for user management, which is to interface with the OIDC protocol. In this article, we&amp;rsquo;ll take a look at what the OIDC protocol is and how it is used in K8s.</description>
    </item>
    
    <item>
      <title>Kubernetes Service Discovery - coreDNS</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-coredns/</link>
      <pubDate>Fri, 11 Mar 2022 09:48:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-coredns/</guid>
      <description>Service discovery is an important feature of K8s, and there are two ways to do this: either by injecting the svc ClusterIP into the pod as an environment variable, or by using DNS, which has replaced kube dns as the built-in DNS server since version 1.13. In this article, we will briefly analyze coreDNS.
K8s DNS Policies There are four types of DNS policies for Pods in Kubernetes.
 Default: Pod inherits the DNS configuration on the host where it resides.</description>
    </item>
    
    <item>
      <title>Unified User Management for Kubernetes with KeyCloak</title>
      <link>https://www.sobyte.net/post/2022-03/kubernetes-keycloak/</link>
      <pubDate>Fri, 11 Mar 2022 09:37:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubernetes-keycloak/</guid>
      <description>As we all know, in the K8s permission management system, you can bind RoleBinding to ServiceAccount, User and Group to achieve permission assignment.
We often use ServiceAccount to restrict the permissions of a pod; for User and Group, there are no specific resources to correspond to them except for some special system groups, which is very unfriendly to the user management in traditional projects.
This article talks about how to unify user management in K8s clusters.</description>
    </item>
    
    <item>
      <title>Build and maintain operators using the Operator Framework toolkit</title>
      <link>https://www.sobyte.net/post/2022-03/operator-framework/</link>
      <pubDate>Fri, 11 Mar 2022 09:22:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/operator-framework/</guid>
      <description>Operator Framework The Operator Framework is a CoreOS open source toolkit for rapid development and maintenance of Operator, and contains three main projects. Operator SDK: Quickly build an Operator application without having to understand the complex Kubernetes API features. Operator Lifecycle Manager (OLM): helps install, update, and manage all operators (and their associated services) running across clusters Operator Metering: collects operator metric information and generates reports With these three sub-projects,</description>
    </item>
    
    <item>
      <title>Creating custom K8s AdmissionWebhooks with Kubebuilder</title>
      <link>https://www.sobyte.net/post/2022-03/creating-custom-k8s-admissionwebhooks/</link>
      <pubDate>Fri, 11 Mar 2022 09:09:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/creating-custom-k8s-admissionwebhooks/</guid>
      <description>Kubebuilder can build AdmissionWebhooks in addition to CRD APIs and their Controllers, and this article will analyze how Kubebuilder builds AdmissionWebhooks in detail.
AdmissionWebhooks for K8s First of all, it is important to know what AdmissionWebhooks is in K8s and what its purpose is.
Let&amp;rsquo;s start with the scenario. If we need to make configuration changes or checks on a pod before it is created, this part of the work would require the administrator to compile it into a binary file in ApiServer, which would be very annoying if the configuration changes were made in a custom form.</description>
    </item>
    
    <item>
      <title>Golang Common Concurrency Programming Tips</title>
      <link>https://www.sobyte.net/post/2022-03/golang-concurrency-programming-tips/</link>
      <pubDate>Fri, 11 Mar 2022 08:51:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-concurrency-programming-tips/</guid>
      <description>Golang was one of the first languages to incorporate the principles of CSP into its core and to introduce this style of concurrent programming to the general public.CSP refers to Communicating Sequential Processes, or communicating sequential processes, where each instruction needs to specify exactly whether it is an output variable (the case of reading a variable from a process), or a destination (in the case of sending input to a</description>
    </item>
    
    <item>
      <title>Deployment Controller Workflow</title>
      <link>https://www.sobyte.net/post/2022-03/deployment-controller-workflow/</link>
      <pubDate>Thu, 10 Mar 2022 14:18:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/deployment-controller-workflow/</guid>
      <description>This article is based on reading the source code of Kubernetes v1.16 and describes the workflow of Deployment Controller through flowcharts, but also contains related code for reference.
 In the previous article, &amp;ldquo;How Kubernetes Controller Manager Works&amp;rdquo;, we explained how the Controller Manager manages the Controller, and we know that the Controller only needs to implement the event handler and does not need to care about the upper logic.</description>
    </item>
    
    <item>
      <title>How Kubernetes Controller Manager works</title>
      <link>https://www.sobyte.net/post/2022-03/how-kubernetes-controller-manager-works/</link>
      <pubDate>Thu, 10 Mar 2022 13:51:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-kubernetes-controller-manager-works/</guid>
      <description>This article is based on reading the source code of Kubernetes v1.16. The article has some source code, but I will try to describe it clearly by matching pictures In the Kubernetes Master node, there are three important components: ApiServer, ControllerManager, and Scheduler, which are responsible for the management of the whole cluster together. In this article, we try to sort out the workflow and principle of ControllerManager. What is</description>
    </item>
    
    <item>
      <title>Kubernetes container-native workflow engine: Argo</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-container-native-argo/</link>
      <pubDate>Thu, 10 Mar 2022 13:40:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-container-native-argo/</guid>
      <description>This article is based on Argo v2.7.6, Kubernetes v1.18
 Argo is a workflow engine based on Kubernetes CRD implementation, providing container-native workflows for Kubernetes, i.e. each workflow node is running a task as a container.
Installation Since it is based on the Kubernetes CRD implementation, it is composed of CRD + Controller.
Installing Argo is as simple as creating an argo namespace and applying an official yaml.
1 2  kubectl create namespace argokubectl apply -n argo -f https://raw.</description>
    </item>
    
    <item>
      <title>Operating system memory virtualization</title>
      <link>https://www.sobyte.net/post/2022-03/memory-virtualization/</link>
      <pubDate>Thu, 10 Mar 2022 13:30:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/memory-virtualization/</guid>
      <description>The program itself doesn&amp;rsquo;t need to care where its data and code live, and memory appears to be contiguous and exclusive to the program. This is certainly not the case, and it is the operating system that is responsible for this - memory virtualization. This article describes how the operating system implements a virtual memory system.
Address Space The operating system provides an easy-to-use abstraction of physical memory: the address space.</description>
    </item>
    
    <item>
      <title>Operating system process scheduling algorithm</title>
      <link>https://www.sobyte.net/post/2022-03/process-scheduling-algorithm/</link>
      <pubDate>Thu, 10 Mar 2022 13:14:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/process-scheduling-algorithm/</guid>
      <description>This article summarizes the process scheduling algorithms of the operating system and analyzes the advantages and disadvantages, including the FIFO algorithm, the shortest task priority algorithm, the rotation algorithm, the multi-level feedback queue algorithm, the lottery scheduling algorithm, and the multi-processor scheduling algorithm. Only the principles of each algorithm are summarized, but not the specific implementation of Linux scheduling algorithms.
Scheduling Metrics Before looking at the process scheduling algorithm, let&amp;rsquo;s see what metrics are followed by the process scheduling algorithm.</description>
    </item>
    
    <item>
      <title>Quality of Service Management for Pods by Kubelet</title>
      <link>https://www.sobyte.net/post/2022-03/kubelet-quality-of-service-management-for-pods/</link>
      <pubDate>Thu, 10 Mar 2022 09:58:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubelet-quality-of-service-management-for-pods/</guid>
      <description>The previous article, Kubelet Pod Creation Workflow, explained how kubelet creates pods and how the components collaborate with each other. Based on the previous article, this article will explain how kubelet performs quality of service management for pods.
Pod QoS Kubernetes has a QoS type for each Pod, which is used to manage the quality of service for the Pod. There are three types, in decreasing order of priority.
 Guaranteed: Each container in a Pod must have a request and a limit, and the values must be the same.</description>
    </item>
    
    <item>
      <title>Kubelet pod creation workflow</title>
      <link>https://www.sobyte.net/post/2022-03/kubelet-pod-creation-workflow/</link>
      <pubDate>Thu, 10 Mar 2022 09:42:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubelet-pod-creation-workflow/</guid>
      <description>This article is based on reading the source code of Kubernetes v1.19.0-rc.3
 Kubelet, one of the four components of Kubernetes, maintains the entire lifecycle of a pod and is the last link in the pod creation process of Kubernetes. This article will introduce how Kubelet creates pods.
Architecture of Kubelet First look at a diagram of the Kubelet&amp;rsquo;s component architecture, as follows.
It can be seen that Kubelet is mainly divided into three layers: API layer, syncLoop layer, CRI and the following; API layer is well understood, that is, the part that provides the interface to the outside; syncLoop layer is the core working layer of Kubelet, the main work of Kubelet is centered around this syncLoop, that is, the control loop, run by producers and consumers; CRI provides the interface of container and mirror services, the container can be accessed as a CRI plugin when running.</description>
    </item>
    
    <item>
      <title>How the Kubernetes Network Plugin Works</title>
      <link>https://www.sobyte.net/post/2022-03/how-the-kubernetes-network-plugin-works/</link>
      <pubDate>Thu, 10 Mar 2022 09:26:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-the-kubernetes-network-plugin-works/</guid>
      <description>There are various network solutions for containers, and it is obviously impractical to adapt every network implementation supported, and CNI was invented to be compatible with multiple network solutions.CNI stands for Container Network Interface, which is a standard common interface to connect container management system and network plugins. In simple terms, container runtime provides network namespace for containers, network plug-in is responsible for inserting network interface into the network namespace</description>
    </item>
    
    <item>
      <title>How to Implement a Kubernetes Network Plugin</title>
      <link>https://www.sobyte.net/post/2022-03/implement-a-kubernetes-network-plugin/</link>
      <pubDate>Thu, 10 Mar 2022 09:07:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/implement-a-kubernetes-network-plugin/</guid>
      <description>There are more and more networking solutions for containers, and with each new solution, it is obviously unreasonable to adapt the networking solution to different container runtimes, and CNI is designed to solve this problem.
While maintaining a &amp;ldquo;home-level Kubernetes cluster&amp;rdquo; at home during holidays, I got the idea to write a network plugin, and developed Village Net based on cni/plugin.
Taking this network plugin as an example, this article focuses on how to implement a CNI plugin.</description>
    </item>
    
    <item>
      <title>A Brief Analysis of How CSI Works</title>
      <link>https://www.sobyte.net/post/2022-03/how-csi-works/</link>
      <pubDate>Thu, 10 Mar 2022 08:49:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-csi-works/</guid>
      <description>Recently, I have been doing CSI-related work, and as I have been developing it, I have come to believe that the details of CSI are quite tedious. By organizing the CSI workflow, I can deepen my understanding of CSI and share my knowledge of CSI with you.
I will introduce CSI through two articles, the first of which will focus on the basic components and workings of CSI, based on Kubernetes as the COs (Container Orchestration Systems) for CSI.</description>
    </item>
    
    <item>
      <title>An analysis of the Kubelet eviction mechanism</title>
      <link>https://www.sobyte.net/post/2022-03/kubelet-eviction-mechanism/</link>
      <pubDate>Wed, 09 Mar 2022 15:10:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kubelet-eviction-mechanism/</guid>
      <description>This article is based on reading the source code of Kubernetes v1.22.1
 Kubelet allows nodes to be evicted if they are under-resourced. I have recently studied Kubelet&amp;rsquo;s eviction mechanism and found a lot to learn from it, so I&amp;rsquo;ll share it with you.
Kubelet Configuration Kubelet&amp;rsquo;s eviction feature needs to be turned on in the configuration, and the threshold value for eviction needs to be configured.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  type KubeletConfiguration struct { .</description>
    </item>
    
    <item>
      <title>Rust&#39;s confusing references and borrowings</title>
      <link>https://www.sobyte.net/post/2022-03/rust-shit-ref-borrow/</link>
      <pubDate>Wed, 09 Mar 2022 14:51:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rust-shit-ref-borrow/</guid>
      <description>There are three principles of Rust Ownership to keep in mind.
 For each value, there is an owner. There can only be one owner for a value at a time. When the owner leaves the scope, the corresponding value is automatically dropped.  hello is a string allocated on the heap, and the owner is s, which, when passed as an argument to the function takes_ownership, moves ownership to some_string .</description>
    </item>
    
    <item>
      <title>Three principles of Rust ownership</title>
      <link>https://www.sobyte.net/post/2022-03/rust-ownership-three-princples/</link>
      <pubDate>Wed, 09 Mar 2022 14:40:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rust-ownership-three-princples/</guid>
      <description>The core concept of Rust is Ownership, a GC-enabled language that allows the runtime to sweep the heap at runtime and release unreferenced garbage objects, such as go. For languages like c/c++, you need to manage the allocation and release of memory yourself. Rust uses the concept of Ownership and appends various check rules to the compiler to implement memory management. Note that most of Rust&amp;rsquo;s work is done at</description>
    </item>
    
    <item>
      <title>How to troubleshoot problems with systemtap</title>
      <link>https://www.sobyte.net/post/2022-03/how-debug-with-systemtap/</link>
      <pubDate>Wed, 09 Mar 2022 14:16:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-debug-with-systemtap/</guid>
      <description>What is systemtap We generally debug our programs, and the logs printed by the business process are basically sufficient for our needs. If not, using strace, lsof, or perf is enough to see the bottleneck of performance. But for system programming, you can&amp;rsquo;t print logs like crazy, and many call stacks are in kernel space, so ordinary debugging means are stretched to the limit.
At this point systemtap comes in handy, it adds probe probes to kernel functions, aggregates statistics on kernel space function calls, and even intervenes in them.</description>
    </item>
    
    <item>
      <title>Rust actually allows the variable shadow</title>
      <link>https://www.sobyte.net/post/2022-03/rust-allow-variable-shadow/</link>
      <pubDate>Wed, 09 Mar 2022 14:06:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rust-allow-variable-shadow/</guid>
      <description>Rust has a reputation for having a steep learning curve and a rigorous and secure language. But recently, while studying The Book, I discovered that it allows variable shadowing .
If the ordinary shadowing is not enough, the same lexical scope allows different types of variables, using the same variable name .
What else can I say but shock? Let&amp;rsquo;s look at the case of rust, go.
Common usage 1 2 3 4 5 6 7 8 9  fn main(){letx=5;letx=x+1;letx=x*2;println!</description>
    </item>
    
    <item>
      <title>What is the Pause container</title>
      <link>https://www.sobyte.net/post/2022-03/what-is-pause-container/</link>
      <pubDate>Wed, 09 Mar 2022 10:23:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/what-is-pause-container/</guid>
      <description>We all know that the smallest unit of scheduling in k8s is the POD, and each POD has a so-called Infra container Pause, so what exactly is a Pause container? What does it look like? What does it do?
Analyze the source code From the official pause.c.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  #include &amp;lt;signal.</description>
    </item>
    
    <item>
      <title>Concurrency Safety for Go</title>
      <link>https://www.sobyte.net/post/2022-03/go-concurrency-safe/</link>
      <pubDate>Wed, 09 Mar 2022 09:39:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-concurrency-safe/</guid>
      <description>Concurrency safety is the most basic common sense, but also the most easily ignored premise, more test an engineer language fundamentals and code specification. Concurrent access to modify variables can lead to a variety of unpredictable results, the most serious is the program panic, such as the common go language map concurrent read/write panic. Let&amp;rsquo;s start with a few examples, the old cliché case, and</description>
    </item>
    
    <item>
      <title>The confusing socket udp connection problem</title>
      <link>https://www.sobyte.net/post/2022-03/golang-udp-connection-problem/</link>
      <pubDate>Wed, 09 Mar 2022 09:30:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/golang-udp-connection-problem/</guid>
      <description>The company&amp;rsquo;s internal golang middleware reported a UDP connection exception log, the problem is obvious, the service on the other side down. Restart it and it will be fine. But the question I&amp;rsquo;m wondering is how does udp detect when the other side is down? 1 2 3 4 5 6 7 err: write udp 172.16.44.62:62651-&amp;gt;172.16.0.46:29999: write: connection refused err: write udp 172.16.44.62:62651-&amp;gt;172.16.0.46:29999: write: connection refused err: write udp 172.16.44.62:62651-&amp;gt;172.16.0.46:29999:</description>
    </item>
    
    <item>
      <title>Go1.18 new features: efficient copy, strings, bytes standard library new Clone API</title>
      <link>https://www.sobyte.net/post/2022-03/go-string-bytes-clone/</link>
      <pubDate>Wed, 09 Mar 2022 09:13:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-string-bytes-clone/</guid>
      <description>Go1.18 will be released in a few weeks (March), and we have already updated several new version features, today we bring you a new optimization class that is related to strings and bytes standard library. Background Want to copy faster In everyday programming, bytes []byte are often copied. The following code needs to be written. 1 2 dup := make([]byte, len(data)) copy(dup, data) @Ilia Choly thinks this would be too</description>
    </item>
    
    <item>
      <title>Rust Lifetime</title>
      <link>https://www.sobyte.net/post/2022-03/rust-lifetime/</link>
      <pubDate>Tue, 08 Mar 2022 15:34:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rust-lifetime/</guid>
      <description>First of all what are lifetimes? Lifetimes define the valid range of a reference, in other words lifetimes are a tool used by the compiler to compare the lifetime of the owner and the borrower, in order to avoid dangling pointer as much as possible.
1 2 3 4 5 6 7 8 9 10 11 12 13  fn main(){{letr;{letx=5;r=&amp;amp;x;// ^^ borrowed value does not live long enough }// - `x` dropped here while still borrowed println!</description>
    </item>
    
    <item>
      <title>The Box Smart Pointer in Rust</title>
      <link>https://www.sobyte.net/post/2022-03/rust-box/</link>
      <pubDate>Tue, 08 Mar 2022 15:13:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rust-box/</guid>
      <description>Those familiar with c++ definitely know shared_ptr , unique_ptr , and Rust also has smart pointers Box , Rc , Arc , RefCell , etc. This article shares the underlying implementation of Box .
Box&amp;lt;T&amp;gt; allocates space on the heap, stores the T value, and returns the corresponding pointer. Also Box implements trait Deref dereference and Drop destructor to automatically free space when Box leaves the scope.
Getting Started Example Example from the rust book, without the print statement for demonstration purposes.</description>
    </item>
    
    <item>
      <title>Dissecting Smart Pointers Rc Weak and Arc</title>
      <link>https://www.sobyte.net/post/2022-03/smart-pointer-rc-weak-arc/</link>
      <pubDate>Tue, 08 Mar 2022 14:59:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/smart-pointer-rc-weak-arc/</guid>
      <description>We know that rust ownership has three principles: For each value, there is an owner. A value can only have one owner at a time. When the owner leaves the scope, the corresponding value is automatically dropped. But sometimes a value is shared by multiple variables. Also it cannot be solved by reference, because there is no way to determine which variable ended up last and there is no way</description>
    </item>
    
    <item>
      <title>Why Rust Needs Internal Variability</title>
      <link>https://www.sobyte.net/post/2022-03/rust-why-need-interior-mutability/</link>
      <pubDate>Tue, 08 Mar 2022 14:50:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rust-why-need-interior-mutability/</guid>
      <description>This article refers to rust book ch15 and adds its own understanding, interested parties can first look at the official documentation.
Rust has two ways to achieve mutability
 Inheritance variability: for example, if a struct is declared with let mut, then any field of the struct can be modified later. Internal mutability: use Cell RefCell to wrap a variable or field so that it can be modified even if the external variable is read-only  It seems that inheritance mutability is enough, so why do we need the so-called interior mutability internal mutability?</description>
    </item>
    
    <item>
      <title>Go Context Best Practices</title>
      <link>https://www.sobyte.net/post/2022-03/go-ctx-best-practice/</link>
      <pubDate>Tue, 08 Mar 2022 14:35:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-ctx-best-practice/</guid>
      <description>Usage Scenarios There are three main usage scenarios for Context
 Passing timeout information, which is most used. Passing signals, used for message notification, handling multi-process communication Passing data, commonly used in the framework layer trace-id, metadata  Let&amp;rsquo;s take an example of etcd watch to get a better understanding.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  func watch(ctx context.</description>
    </item>
    
    <item>
      <title>Android FFmpeg video decoding process and practical analysis</title>
      <link>https://www.sobyte.net/post/2022-03/android-ffmpeg/</link>
      <pubDate>Tue, 08 Mar 2022 09:31:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/android-ffmpeg/</guid>
      <description>This article firstly introduces the main process and basic principle of decoding video with FFmpeg as the topic; secondly, it also describes the simple applications related to FFmpeg video decoding, including how to play video in a certain timeline order based on the original FFmpeg video decoding, and how to add the logic of seek when playing video. Besides, the article focuses on the details that may be easily missed</description>
    </item>
    
    <item>
      <title>Jib builds Docker images efficiently</title>
      <link>https://www.sobyte.net/post/2022-03/jib-docker/</link>
      <pubDate>Tue, 08 Mar 2022 09:22:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/jib-docker/</guid>
      <description>1. Preface Jib is a class library developed by Google to build Docker and OCI images of Java applications directly, provided as Maven and Gradle plugins. The best part is that it can be built without the Docker daemon, i.e. you don&amp;rsquo;t have to install the docker daemon on your computer! Although Spring Boot 2.3.0.RELEASE has already been released with the ability to build images, I couldn&amp;rsquo;t resist trying Jib.</description>
    </item>
    
    <item>
      <title>The relationship between x86,x64,x86-64,amd64,arm instruction set architecture</title>
      <link>https://www.sobyte.net/post/2022-03/x86-x64-x86-64-amd64-arm/</link>
      <pubDate>Tue, 08 Mar 2022 09:14:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/x86-x64-x86-64-amd64-arm/</guid>
      <description>There is no such thing as x32. x86 and x64 refer to the instruction set architecture of the CPU.
Instruction set The instruction set can be understood as the hardware&amp;rsquo;s interface to the outside world. We run programs through the operating system scheduling, and the operating system then allows the hardware to compute.
If you let the hardware compute, such as some addition and multiplication, loops and so on, you need the interface provided by the hardware, that is, the instruction set.</description>
    </item>
    
    <item>
      <title>ref of component communication</title>
      <link>https://www.sobyte.net/post/2022-03/react-ref/</link>
      <pubDate>Tue, 08 Mar 2022 09:04:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/react-ref/</guid>
      <description>The official react documentation describes it this way. Refs provide a way to allow us to access DOM nodes or React elements created in the render method. I. A simple example Let&amp;rsquo;s look directly at an example of ref usage. Here is a function component that creates a ref using useRef. 1 2 3 4 5 6 7 8 9 const App = () =&amp;gt; { const myRef = useRef();</description>
    </item>
    
    <item>
      <title>The difference between useEffect and useLayoutEffect</title>
      <link>https://www.sobyte.net/post/2022-03/useeffect-and-uselayouteffect/</link>
      <pubDate>Tue, 08 Mar 2022 08:59:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/useeffect-and-uselayouteffect/</guid>
      <description>I. The execution process of useEffect and useLayoutEffect The first thing to note is that useLayoutEffect and useEffect are very similar and have the same function signature. The only difference is that useEffect is executed asynchronously, while useLayoutEffect is executed synchronously. When the function component is refreshed (rendered), the whole process of the component containing the useEffect runs as follows. component re-rendering is triggered (by changing the component state or</description>
    </item>
    
    <item>
      <title>TypeScript generic development practices from a set perspective</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-generic-perspect-of-set-thoery/</link>
      <pubDate>Mon, 07 Mar 2022 15:54:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-generic-perspect-of-set-thoery/</guid>
      <description>Some time ago I drilled into How to master advanced TypeScript patterns this article. This is an earlier blog post by Pierre-Antoine Mills, author of ts-toolbelt. The article raises a challenging topic: How can TS write type support for collinear functions? I did some practice with the original article, and then seemed to come to some knowledge about TS generics closer to the substance &amp;ndash; from the collection perspective. Based</description>
    </item>
    
    <item>
      <title>Using Mock and Interface for Golang Unit Testing</title>
      <link>https://www.sobyte.net/post/2022-03/use-mock-to-test/</link>
      <pubDate>Mon, 07 Mar 2022 15:46:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/use-mock-to-test/</guid>
      <description>In my work I often find that many engineers&#39; Golang unit tests are written in a problematic way, simply calling the code for output and including various IO operations, making it impossible to run the unit tests everywhere.
Golang Unit Testing with Mock and Interface This article explains how to do unit tests properly in Golang.
What is unit testing? Features of unit testing Unit testing is a very important part of quality assurance.</description>
    </item>
    
    <item>
      <title>The relationship between iptables and the Linux kernel</title>
      <link>https://www.sobyte.net/post/2022-03/relation-between-iptables-and-linux-kernal/</link>
      <pubDate>Mon, 07 Mar 2022 10:34:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/relation-between-iptables-and-linux-kernal/</guid>
      <description>Overview iptables is a basic firewall tool in Linux, and also a very common network workhorse, but iptables is really only an application layer, so how does iptables relate to the Linux kernel network stack, here I will give a brief introduction to this issue.
NetFilter framework The Netfilter framework is a framework provided by the Linux kernel network for applications to register various Handlers, allowing users to control parts of the Linux network through the Netfilter framework.</description>
    </item>
    
    <item>
      <title>Deploying magento2 with docker-compose</title>
      <link>https://www.sobyte.net/post/2022-03/docker-compose-magento2/</link>
      <pubDate>Mon, 07 Mar 2022 10:11:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/docker-compose-magento2/</guid>
      <description>Environment centos 7 2-core 8g docker 1.13.1 docker-compose 1.24.1 Versions of each container php:7.3-fpm-buster mysql:8.0 nginx:1.21 redis:6.2 frp using debian:10-slim as the base image build The specific version is 0.38.0 frp&amp;rsquo;s main role is to act as a proxy for xdebug elasticsearch:7.9 The magento version is 2.3.4 The following section assumes that docker and docker-compose are already installed. This is intended as a development environment, so the code is not</description>
    </item>
    
    <item>
      <title>Understanding of JS prototype chains</title>
      <link>https://www.sobyte.net/post/2022-03/js-prototype-chains/</link>
      <pubDate>Mon, 07 Mar 2022 10:00:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/js-prototype-chains/</guid>
      <description>Types in JS There are seven primitive types and Object in js undefined boolean number string bigint symbol null Primitive types number is a value in double-precision 64-bit binary format (-(253 -1) to 253 -1) based on the IEEE 754 standard. It does not give a specific type for integers. In addition to the ability to represent floating-point numbers, there are also signed values: +Infinity, -Infinity and NaN (Not-a-Number). bigint</description>
    </item>
    
    <item>
      <title>Automatically archiving argo workflow logs using kubectl</title>
      <link>https://www.sobyte.net/post/2022-03/archive-argo-workflow-log-by-kubectl/</link>
      <pubDate>Mon, 07 Mar 2022 09:46:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/archive-argo-workflow-log-by-kubectl/</guid>
      <description>The project uses argo-workflow as the workflow engine to orchestrate and run some hyperconverged cluster deployment related tasks, and the whole environment runs on a single node K3s. The main reason for choosing argo-workflow + K3s is to consume as few system resources as possible, since this environment will run on various laptops with different hardware configurations in the future 😂. After researching some common K8s deployment tools, we finally chose K3s, which consumes less system resources.</description>
    </item>
    
    <item>
      <title>A simple comparison of QDir and std::filesystem</title>
      <link>https://www.sobyte.net/post/2022-03/qdir-stdfilesystem/</link>
      <pubDate>Sun, 06 Mar 2022 17:19:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/qdir-stdfilesystem/</guid>
      <description>As a Qt developer, Qt provides me with a lot of useful infrastructure, such as the popular QString, QNetwork, etc. This is what the Qt platform provides me with, and I only need to develop on this platform. As a C++ developer, the C++ standard library is also the infrastructure I need to use, but the standard library provides less functionality than Qt, most notably the C++ std::string, which has</description>
    </item>
    
    <item>
      <title>Prometheus Monitoring Kubernetes Job Resource False Alarm Issue</title>
      <link>https://www.sobyte.net/post/2022-03/prometheus-monitor-k8s-job-trap/</link>
      <pubDate>Sun, 06 Mar 2022 17:12:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/prometheus-monitor-k8s-job-trap/</guid>
      <description>Someone mentioned a problem before, it is about Prometheus monitoring Job task false alarm problem, the general meaning of the CronJob control Job, the front of the execution failed, monitoring will trigger the alarm, after the solution to generate a new Job can be executed normally, but will still receive the alarm in front.
This is because we generally keep some history when executing Job tasks to facilitate troubleshooting, so if there is a failed Job before, even if it will become successful later, the previous Job will continue to exist, and the default alarm rule used by most direct kube-prometheus installation and deployment is kube_job_ status_failed &amp;gt; 0, which is obviously inaccurate.</description>
    </item>
    
    <item>
      <title>Introduction to EDNS Client Subnet Protocol</title>
      <link>https://www.sobyte.net/post/2022-03/edns-client-subnet/</link>
      <pubDate>Sun, 06 Mar 2022 17:06:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/edns-client-subnet/</guid>
      <description>DNS systems use plaintext UDP protocol to communicate by default, so the content of users&#39; queries can be easily monitored, and the resolution results returned by servers can be easily tampered with. To solve this problem, technologies such as DNS over HTTPS/TLS/QUIC have been introduced in the hope of transmitting DNS queries in an encrypted manner. However, with the use of public DoH recursive resolution servers, authoritative DNS servers can only get the address of the recursive resolution server, but not the user&amp;rsquo;s address.</description>
    </item>
    
    <item>
      <title>Run the Container using the init processs</title>
      <link>https://www.sobyte.net/post/2022-03/run-the-container-using-the-init-process/</link>
      <pubDate>Sun, 06 Mar 2022 16:58:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/run-the-container-using-the-init-process/</guid>
      <description>Anyone who has followed Bare Metal related projects will have seen how the boot process, how to quickly provision a physical server, etc. is implemented, usually with a LiveOS running to achieve certain actions. The Tinkerbell project uses Linuxkit as the LiveOS, and the Plunder project uses BOOTy as the LiveOS. a few days ago @thebsdbox took out a part of BOOTy and showed the main implementation as ginit, so we can better understand the details of the installation.</description>
    </item>
    
    <item>
      <title>Solve Gin Router Path Conflict</title>
      <link>https://www.sobyte.net/post/2022-03/solve-gin-router-path-conflict/</link>
      <pubDate>Sun, 06 Mar 2022 16:53:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/solve-gin-router-path-conflict/</guid>
      <description>When using the gin framework, if there are two such routes.
 GET /users/:id GET /users/info  gin will report an error: panic: &#39;info&#39; in new path &#39;/users/info&#39; conflicts with existing wildcard &#39;:id&#39; in existing prefix &#39;/users/:id&#39;
The reason is that the two routes have the same HTTP method (meaning GET/POST/PUT/DELETE, etc.) and request path prefix, and in the same route location, the first route is a wildcard (meaning :id of this form) parameter, and the second route is a normal string info, then a route conflict occurs.</description>
    </item>
    
    <item>
      <title>Go doesn&#39;t need a Java-style GC</title>
      <link>https://www.sobyte.net/post/2022-03/go-does-not-need-a-java-style-gc/</link>
      <pubDate>Sun, 06 Mar 2022 16:41:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/go-does-not-need-a-java-style-gc/</guid>
      <description>Modern languages like Go, Julia and Rust don&amp;rsquo;t need a garbage collector as complex as the one used by Java c#. But why is that? We first need to understand how garbage collectors work and how the various languages differ in the way they allocate memory. First, let&amp;rsquo;s look at why Java needs such a complex garbage collector. This article will cover many different garbage collector topics. Why Java relies</description>
    </item>
    
    <item>
      <title>Several ways to solve the MySQL database ONLY_FULL_GROUP_BY exception</title>
      <link>https://www.sobyte.net/post/2022-03/mysql-fix-only-full-group-by/</link>
      <pubDate>Sun, 06 Mar 2022 16:36:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/mysql-fix-only-full-group-by/</guid>
      <description>Using the employee example database as an example, the The test environment uses a single statement.
SELECT * FROM employees GROUP BY gender;
It works fine in the test environment, but it has problems online, reporting errors as follows.
1 2 3 4 5 6  com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column &amp;#39;mse.msc_k8s_cluster.id&amp;#39; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at sun.</description>
    </item>
    
    <item>
      <title>Are there any flaws with arrays in Java&#39;s type system?</title>
      <link>https://www.sobyte.net/post/2022-03/array-on-java-type-system/</link>
      <pubDate>Sun, 06 Mar 2022 16:30:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/array-on-java-type-system/</guid>
      <description>In February 2020, Wang Yin trolled the type system of Java, saying. One of the more advanced interview questions about a programmer&amp;rsquo;s understanding of the Java type system is this: 1 2 3 4 5 6 public static void f() { String[] a = new String[2]; Object[] b = a; a[0] = &amp;#34;hi&amp;#34;; b[1] = Integer.valueOf(42); } Which line in this code is wrong? Why? If some version of Java</description>
    </item>
    
    <item>
      <title>How to report errors via Kubernetes events</title>
      <link>https://www.sobyte.net/post/2022-03/error-reporting-with-kubernetes-events/</link>
      <pubDate>Sun, 06 Mar 2022 16:24:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/error-reporting-with-kubernetes-events/</guid>
      <description>There is a Kubernetes webhook maintained within the group that intercepts pod creation requests and makes some changes (e.g. adding environment variables, adding init-container, etc.). The business logic itself is simple, but it&amp;rsquo;s hard to handle if errors are generated in the process. Either you directly prevent the pod from being created, then there is a risk that the application will not start. Either ignore the business logic, then it</description>
    </item>
    
    <item>
      <title>Memory-based communication for gRPC calls</title>
      <link>https://www.sobyte.net/post/2022-03/grpc-in-memory/</link>
      <pubDate>Sun, 06 Mar 2022 16:16:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/grpc-in-memory/</guid>
      <description>Apache Dubbo has the injvm method of communication, which can avoid the latency caused by the network, and also does not occupy the local port, which is a more convenient way of RPC communication for testing and local verification. I recently saw containerd&amp;rsquo;s code and found that it has similar requirements. But using ip port communication, there may be port conflict; using unix socket, there may be path conflict. I</description>
    </item>
    
    <item>
      <title>Webpack Quick Start</title>
      <link>https://www.sobyte.net/post/2022-03/webpack-tutorial/</link>
      <pubDate>Sat, 05 Mar 2022 12:04:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/webpack-tutorial/</guid>
      <description>This tutorial is for webpack beginners. This is also some notes I put together for newbies as I learn webpack myself. I. What is webpack? As a javascript front-end developer, you must know about webpack and the various modules. webpack is a packaging tool that bundles (packages) various modules together. The supported modules are: CommonJS AMD CSS import Images url Es module webpack bundles all modules together and makes them</description>
    </item>
    
    <item>
      <title>The mystery of the React hook</title>
      <link>https://www.sobyte.net/post/2022-03/mistery-of-react-hook/</link>
      <pubDate>Sat, 05 Mar 2022 11:53:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/mistery-of-react-hook/</guid>
      <description>As we all know, React has two forms of components, class components and function components, and developers can use class components and function components to achieve the same purpose and build the exact same page. Since I came across React last August, I have been using function components because they are recommended by my company. I have to say that function components are much better than class components. You can</description>
    </item>
    
    <item>
      <title>Built-in Generics in TypeScript</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-builtin-generic/</link>
      <pubDate>Sat, 05 Mar 2022 11:44:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-builtin-generic/</guid>
      <description>*ypeScript provides some of the more useful generic types, but we often overlook them. In this section we&amp;rsquo;ll look at these generics together. Generic types Partial&amp;lt;Type&amp;gt; From a type, constructs a new type, where all properties of the new type are derived from the original type and all properties of the new type are optional. 1 2 3 4 5 6 interface Todo { title: string; description: string; } type</description>
    </item>
    
    <item>
      <title>Babel Getting Started Tutorial</title>
      <link>https://www.sobyte.net/post/2022-03/babel-tutorial/</link>
      <pubDate>Sat, 05 Mar 2022 11:36:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/babel-tutorial/</guid>
      <description>This tutorial is an introductory level tutorial for newcomers. The tutorial references the official documentation. It is assumed that you already have the necessary development environment such as node, npm (or yarn) installed. I. JavaScript&amp;rsquo;s Compiler Babel is a compiler for JavaScript. I don&amp;rsquo;t think the word compiler is very accurate to describe Babel, because JavaScript doesn&amp;rsquo;t need to be pre-compiled to run like C++ or C#, JavaScript is an</description>
    </item>
    
    <item>
      <title>Detailed explanation of the tsconfig.json file</title>
      <link>https://www.sobyte.net/post/2022-03/tsconfig/</link>
      <pubDate>Sat, 05 Mar 2022 11:17:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/tsconfig/</guid>
      <description>I personally like TypeScirpt, write code with Ts to be more comfortable than Js too much, can greatly improve the efficiency of writing code, reduce the workload of code maintenance. Because I have the foundation of C++ and C#, I can get started with Ts quickly. Although there is no difficulty in using it, but for a long time, did not go to understand the compilation process and configuration of</description>
    </item>
    
    <item>
      <title>In-depth understanding of TypeScript&#39;s module system</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-module-system/</link>
      <pubDate>Sat, 05 Mar 2022 11:10:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-module-system/</guid>
      <description>Before the advent of ES2015, JavaScript did not have a native module system (ES Module) and had to resort to third-party RequireJS and SystemJS to use the module functionality. A module is essentially a JS/TS file, similar to a sandbox environment, that uses import statements to introduce the APIs and values of other modules, and export statements to expose its own APIs and values. TypeScript natively supports the syntax of</description>
    </item>
    
    <item>
      <title>Using namespace to encapsulate data in TypeScript</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-namespace/</link>
      <pubDate>Sat, 05 Mar 2022 11:03:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-namespace/</guid>
      <description>I. namespace - namespace If you are familiar with C++, Java, C#, etc., namespace should not be new to you. namespace can be used to encapsulate a piece of code, and code outside namespace cannot directly access the code inside namespace. Namespaces are defined by the namespace keyword. The format is as follows. 1 2 3 namespace namespace_name { // 命名空间内部代码 } In</description>
    </item>
    
    <item>
      <title>The Complete Guide to TypeScirpt Type Declarations</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-declarations/</link>
      <pubDate>Sat, 05 Mar 2022 10:49:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-declarations/</guid>
      <description>A Type Declaration or Type Definition file is a TypeScript file with a .d.ts file extension. What is the difference between them and a normal .ts file? What are their characteristics? Next, let&amp;rsquo;s take a deeper look. I. The .d.ts files Type declaration files have the suffix .d.ts and contain only type-related code, not logical code. Their purpose is to provide type information to the developer, so they are only</description>
    </item>
    
    <item>
      <title>Comprehensive analysis of the JS this keyword</title>
      <link>https://www.sobyte.net/post/2022-03/javascript-this/</link>
      <pubDate>Sat, 05 Mar 2022 10:39:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/javascript-this/</guid>
      <description>The this problem is one of the most complex problems in JavaScript, and even experienced programmers can inadvertently fall into the this keyword pit. Whenever a function is defined, this is automatically defined inside the function (even if the this keyword is not used inside the function). Function call location Before understanding this, let&amp;rsquo;s understand function call location. The call position of a function is where the function is called,</description>
    </item>
    
    <item>
      <title>A brief introduction to Web Workers</title>
      <link>https://www.sobyte.net/post/2022-03/web-workers-simple-introduction/</link>
      <pubDate>Sat, 05 Mar 2022 10:30:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/web-workers-simple-introduction/</guid>
      <description>&amp;ldquo;JavaScript is single-threaded&amp;rdquo;, Js developers have always thought so. But today we are going to introduce multi-threaded programming in JavaScript, you heard me right, I am talking about Multi-Threaded Programming - Web Workers . I. Preface Web Workers is a feature of the browser (the host environment), not a standard feature of JavaScript, so what does it do? Suppose you click a button on a page and it triggers the</description>
    </item>
    
    <item>
      <title>C# read and write xml documents</title>
      <link>https://www.sobyte.net/post/2022-03/csharp-xml-read-write/</link>
      <pubDate>Fri, 04 Mar 2022 15:55:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/csharp-xml-read-write/</guid>
      <description>C# read and write xml documents mainly through XmlDocument, XmlReader and XmlWriter three classes to achieve. XmlReader only has read functionality. XmlWriter has only write functionality. XmlDocument has both Read and Write functionality. Read This article, read the xml document for the online xml document (non-local files, replaced by local documents can also be), you can use your browser to open this document address: http://www.ecb.int/stats/eurofxref/eurofxref-daily.xml to view the contents of</description>
    </item>
    
    <item>
      <title>How computers store floating point numbers - IEEE754</title>
      <link>https://www.sobyte.net/post/2022-03/ieee754/</link>
      <pubDate>Fri, 04 Mar 2022 15:43:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/ieee754/</guid>
      <description>Years ago when I was studying C++ at university, I learned that IEEE 754 is the most common way of representing floating point numbers in computers today. But since I work with it very little, I often forget the specific details of this standard, so I wrote this article to document it in detail.
How do you represent numbers? There are many ways to represent numbers. For example, the most common way we use when writing - fixing the position of the decimal point, placing a decimal point in the middle of several numbers to represent a decimal, or a whole number if there is no decimal point.</description>
    </item>
    
    <item>
      <title>package.json Guide</title>
      <link>https://www.sobyte.net/post/2022-03/package-json/</link>
      <pubDate>Fri, 04 Mar 2022 15:27:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/package-json/</guid>
      <description>Description The package.json file must be a JSON formatted file and not a JavaScript Object.
Most of the points that will be covered in this section are related to the configuration settings described in config.
name If you are publishing a package, name and version are the most important and essential fields. name and version must be able to be combined into a completely unique identifier. If the package generates an update, then the version field must also be updated to generate a new unique name-version identifier.</description>
    </item>
    
    <item>
      <title>Pulsar transaction implementation principle</title>
      <link>https://www.sobyte.net/post/2022-03/pulsar-transaction/</link>
      <pubDate>Fri, 04 Mar 2022 15:15:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pulsar-transaction/</guid>
      <description>Apache Pulsar is a multi-tenant, high-performance inter-service messaging solution that supports multi-tenancy, low latency, read/write separation, cross-territory replication, fast scaling, flexible fault tolerance, and other features. This article will briefly introduce some concepts and principles of Pulsar server-side message acknowledgement. Preface Before transactional messages were available, the highest level of messaging assurance supported in Pulsar was to ensure that a Producer&amp;rsquo;s messages were saved exactly once on a single partition</description>
    </item>
    
    <item>
      <title>CSS font-variation The charm of changeable fonts</title>
      <link>https://www.sobyte.net/post/2022-03/css-font-variation/</link>
      <pubDate>Fri, 04 Mar 2022 14:51:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/css-font-variation/</guid>
      <description>Today, I saw an interesting effect on CodePen - GSAP 3 ETC Variable Font Wave.
Preview Link: https://codepen.io/Chokcoco/pen/BamYMYg
It is implemented with the JS animation library GSAP. Take a look.
I wondered if I could use CSS to achieve the same effect. After trying it out, I managed to achieve the original effect using pure CSS.
The core of the above effect is the animation of the text, which changes from thinner and tighter to thicker and farther apart.</description>
    </item>
    
    <item>
      <title>Pkill command in Linux</title>
      <link>https://www.sobyte.net/post/2022-03/pkill-command-in-linux/</link>
      <pubDate>Fri, 04 Mar 2022 10:30:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pkill-command-in-linux/</guid>
      <description>This article describes the basics of the Linux pkill command.
pkill is a command-line program that can be sent to a running process based on a specified standard signal. A process can be specified by its full or partial name, the user running the process, or other attributes.
The pkill command is part of the procps (or procps-ng) package, which is pre-installed in almost all Linux distributions. pkill is a wrapper for the pgrep program, which prints a list of matching processes only.</description>
    </item>
    
    <item>
      <title>How to install Tomcat 9 on CentOS 8</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-install-tomcat-9-on-centos-8/</link>
      <pubDate>Fri, 04 Mar 2022 10:10:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-install-tomcat-9-on-centos-8/</guid>
      <description>Apache Tomcat is an open source implementation of Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket technologies. It is one of the most widely used application and web servers in the world today. Tomcat is easy to use and has a robust ecosystem.
This tutorial describes how to install Tomcat 9.0 on CentOS 8.
Install Java Tomcat 9 requires Java SE 8 or higher. We will install OpenJDK 11 , which is an open source implementation of the Java platform.</description>
    </item>
    
    <item>
      <title>How to install Pip on CentOS 8</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-install-pip-on-centos-8/</link>
      <pubDate>Fri, 04 Mar 2022 09:59:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-install-pip-on-centos-8/</guid>
      <description>Pip is a package management system that allows you to install, remove and manage packages written in Python. It can be used to install packages from the Python Package Index (PyPI) and other indexes.
In this tutorial, we will explain how to install pip for Python 2 and 3 on CentOS 8, and cover the basics of how to use pip to manage Python packages.
Installing pip on CentOS 8 As you know, there are two versions of Python under active development, Python 2 and Python 3.</description>
    </item>
    
    <item>
      <title>Creating menus with Bash Select</title>
      <link>https://www.sobyte.net/post/2022-03/bash-select/</link>
      <pubDate>Fri, 04 Mar 2022 09:54:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/bash-select/</guid>
      <description>In this tutorial, we will cover the basics of the select construct in Bash. The select construct allows you to generate menus.
Bash select constructs The select construct generates a menu from a list of items. It has almost the same syntax as the for loop.
1 2 3 4  select ITEM in [LIST] do [COMMANDS] done   [LIST] can be a series of strings separated by spaces, number ranges, command output, arrays, etc.</description>
    </item>
    
    <item>
      <title>High Risk! Kubernetes New Container Escape Vulnerability Warning!</title>
      <link>https://www.sobyte.net/post/2022-03/k8s-container-escape-vulnerability/</link>
      <pubDate>Fri, 04 Mar 2022 09:37:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/k8s-container-escape-vulnerability/</guid>
      <description>On January 18, 2022, Linux maintainers and vendors discovered a heap buffer overflow vulnerability in the legacy_parse_param function of the Linux kernel (5.1-rc1+) file system context function with the vulnerability ID number CVE-2022-0185, which is a high-risk vulnerability with a severity rating of is 7.8 . The vulnerability allows for out-of-bounds writes in kernel memory. Using this vulnerability, an unprivileged attacker could bypass the restrictions of any Linux namespace and</description>
    </item>
    
    <item>
      <title>Javascript Object Signing and Encryption</title>
      <link>https://www.sobyte.net/post/2022-03/jose/</link>
      <pubDate>Thu, 03 Mar 2022 15:48:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/jose/</guid>
      <description>The rise of mobile and the popularity of OAuth2 has led to JWT being a hot mess these past few years. Today we are going to introduce another specification set, JOSE, called Javascript Object Signing and Encryption, which has a lot to do with JWT.
JOSE Introduction JOSE is a Javascript object signing and encryption protocol designed to provide a method for securely transmitting declarations (claims, such as authorization information) between communicating parties, purposely built on top of JSON and BASE64 for easy use in Web applications.</description>
    </item>
    
    <item>
      <title>String builder in C# - StringBuilder</title>
      <link>https://www.sobyte.net/post/2022-03/csharp-stringbuilder/</link>
      <pubDate>Thu, 03 Mar 2022 15:29:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/csharp-stringbuilder/</guid>
      <description>In everyday development StringBuilder must be used by everyone, even a lot. After all, we all know the unwritten norm that StringBuilder&amp;rsquo;s performance is higher than direct string splicing when a large number of strings need to be constructed at high frequencies, because using + or += directly will generate a new String instance, because String objects are immutable objects, which means that each time the string This means that</description>
    </item>
    
    <item>
      <title>Python time processing standard library: time and datetime modules</title>
      <link>https://www.sobyte.net/post/2022-03/differences-bettween-time-and-datetime-in-python/</link>
      <pubDate>Thu, 03 Mar 2022 15:00:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/differences-bettween-time-and-datetime-in-python/</guid>
      <description>Python has a number of built-in APIs for manipulating time, which are distributed in standard libraries such as time and datetime, and their usage can be confusing.
The following article will introduce the main purpose, core objects, common methods, and uses of each module, and will end with an analysis and comparison, so if you already know these details, you can jump directly to the summary and comparison section at the end.</description>
    </item>
    
    <item>
      <title>Understanding descriptors in Python</title>
      <link>https://www.sobyte.net/post/2022-03/python-descriptor-in-detail/</link>
      <pubDate>Thu, 03 Mar 2022 14:43:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-descriptor-in-detail/</guid>
      <description>Descriptors are an advanced concept in Python and the basis for many of Python&amp;rsquo;s internal mechanisms, so this article will go into them in some depth. Definition of a descriptor The definition of a descriptor is simple; a Python object that implements any of the following methods is a descriptor. __get__(self, obj, type=None) __set__(self, obj, value) __delete__(self, obj) The meanings of the parameters of these methods are as follows. self</description>
    </item>
    
    <item>
      <title>A deeper understanding of the git cherry-pick operation</title>
      <link>https://www.sobyte.net/post/2022-03/git-cherry-pick-intro/</link>
      <pubDate>Thu, 03 Mar 2022 11:04:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/git-cherry-pick-intro/</guid>
      <description>In the previous articles on advanced Git usage, we&amp;rsquo;ve learned how Git works and how to use rebase, merge, checkout, reset, etc. Basically, you can use Git without fear, and you can comfortably modify your commit history without losing any You can change your commit history without losing anything. Today, we&amp;rsquo;re going to add the final piece to the puzzle and learn about the cherry-pick command, which is not used in many scenarios, but can work wonders.</description>
    </item>
    
    <item>
      <title>How to use docker buildx to build multi-architecture Go images</title>
      <link>https://www.sobyte.net/post/2022-03/building-multi-architecture-images-with-docker-buildx/</link>
      <pubDate>Thu, 03 Mar 2022 10:49:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/building-multi-architecture-images-with-docker-buildx/</guid>
      <description>Running applications on different operating systems and processor architectures is a common scenario, so it is a common practice to build separate distributions for different platforms. This is not easy to achieve when the platform we use to develop the application is different from the target platform for deployment. For example, developing an application on an x86 architecture and deploying it to a machine on an ARM platform usually requires preparing the ARM platform infrastructure for development and compilation.</description>
    </item>
    
    <item>
      <title>Git rebase Usage Details and How it Works</title>
      <link>https://www.sobyte.net/post/2022-03/git-rebase-intro/</link>
      <pubDate>Thu, 03 Mar 2022 10:27:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/git-rebase-intro/</guid>
      <description>I had no idea about the use of git rebase -i, but once I needed to merge multiple commits, I almost lost all my commits, but luckily I was able to recover them later. So let&amp;rsquo;s document the process of learning the rebase command. Understanding the Rebase Command The documentation for the git rebase command is Reapply commits on top of another base tip, which literally means reapply commits on</description>
    </item>
    
    <item>
      <title>A deeper understanding of git merge operations</title>
      <link>https://www.sobyte.net/post/2022-03/git-merge-intro/</link>
      <pubDate>Thu, 03 Mar 2022 09:55:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/git-merge-intro/</guid>
      <description>Merging is a very common operation in Git: you can merge changes between branches, or perform pull and push operations on remote branches.
However, the git merge command can be a bit daunting for newcomers, because you can get different results from running merge in different situations. This uncertainty about the results has kept me from actively using it for a long time, and I&amp;rsquo;ve relied on visual interfaces like GitHub&amp;rsquo;s Pull Request or GitLab&amp;rsquo;s Merge Request to merge manually.</description>
    </item>
    
    <item>
      <title>Metaclass in Python 3</title>
      <link>https://www.sobyte.net/post/2022-03/python-metaclass/</link>
      <pubDate>Thu, 03 Mar 2022 09:44:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-metaclass/</guid>
      <description>In the Python programming language, most classes are used to generate objects: when you call these classes, they return an Instance of the class to the caller. For example, if you call a Student class that defines the various actions required of a student, we get a new instance of Student, which seems very natural. One of the core ideas of the OOP language is inheritance, i.e. if I had</description>
    </item>
    
    <item>
      <title>HTTP Host Header Attack - Study Notes</title>
      <link>https://www.sobyte.net/post/2022-03/http-host-header-attack/</link>
      <pubDate>Wed, 02 Mar 2022 17:03:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/http-host-header-attack/</guid>
      <description>1. HTTP Host header attacks Starting with HTTP / 1.1, the HTTP Host header is a required request header. It specifies the domain name that the client wants to access. For example, when a user accesses https://example.net/web-security, their browser will compose a request containing the Host header, as follows. 1 2 GET /web-security HTTP/1.1 Host: example.net In some cases, such as when a request is forwarded by a proxy, the</description>
    </item>
    
    <item>
      <title>How to set up an ftp server on ubuntu 20.04 using vsftpd</title>
      <link>https://www.sobyte.net/post/2022-03/setup-ftp-server-with-vsftpd-on-ubuntu/</link>
      <pubDate>Wed, 02 Mar 2022 10:33:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/setup-ftp-server-with-vsftpd-on-ubuntu/</guid>
      <description>This article describes how to install and configure the FTP server you use to share files between devices on Ubuntu 20.04.
FTP (File Transfer Protocol) is the standard network protocol used to transfer files to a remote network. There are several open source FTP servers available for Linux. The most famous and widely used ones are pureftpd, Proftpd, VSFTPD. We will install VSFTPD (VSFTPD daemon), a stable, secure and fast FTP server.</description>
    </item>
    
    <item>
      <title>JavaScript Garbage Collection: Browser and Server</title>
      <link>https://www.sobyte.net/post/2022-03/javascript-gc-browser-vs-server/</link>
      <pubDate>Wed, 02 Mar 2022 10:22:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/javascript-gc-browser-vs-server/</guid>
      <description>We all know that garbage collection (GC) is important for modern application development. It depends on your programming language and many developers have little idea how it is done.
Garbage collection always releases memory that is no longer in use. The strategies and algorithms to achieve this vary from one language to another. For example, JavaScript does this in some interesting ways, depending on whether you&amp;rsquo;re on a browser or a Node.</description>
    </item>
    
    <item>
      <title>Decorators and metadata reflection API in TypeScript: from novice to expert</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-decorators-and-metadata-reflection-api/</link>
      <pubDate>Wed, 02 Mar 2022 10:09:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-decorators-and-metadata-reflection-api/</guid>
      <description>An in-depth understanding of the implementation of TypeScript&amp;rsquo;s modifiers, which make it possible for JavaScript to implement reflection and dependency injection. The tutorial is divided into four main parts Part 1: Method modifiers Part I: Property modifiers &amp;amp; class modifiers Part III: Parameter Modifiers &amp;amp; Modifier Factories Part IV: Type serialization &amp;amp; metadata reflection API In this article we will learn Why our JavaScript needs reflection The metadata reflection API</description>
    </item>
    
    <item>
      <title>How to compile Android WebRTC source code</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-compile-native-webrtc-library-from-source-for-android/</link>
      <pubDate>Wed, 02 Mar 2022 09:54:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-compile-native-webrtc-library-from-source-for-android/</guid>
      <description>WebRTC name comes from the abbreviation of Web Real-Time Communication, an API that supports real-time voice or video conversations in the browser. it was open-sourced on June 1, 2011 and included in the W3C standards with support from Google, Mozilla, Opera.
In this tutorial, I assume you are using Linux and understand webrtc and android development. android webrtc source code compilation is only supported under Linux. This includes how to install Chromium depot_tools development tool, check out Android webrtc source code using gclient, build webrtc .</description>
    </item>
    
    <item>
      <title>NGINX proxy gRPC requests</title>
      <link>https://www.sobyte.net/post/2022-03/nginx-grpc/</link>
      <pubDate>Wed, 02 Mar 2022 09:43:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/nginx-grpc/</guid>
      <description>My blog server has two ports open, one for serving HTTP requests and one for serving gRPC requests from clients. Later, after learning more about gRPC, I found out that the underlying transport layer protocol is actually based on HTTP/2. At the same time, I saw the official NGINX gRPC support. So I wanted to use NGINX to proxy gRPC requests so that I wouldn&amp;rsquo;t have to think about the</description>
    </item>
    
    <item>
      <title>How to install Python 3.8 on Debian 10</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-install-python-3-8-on-debian-10/</link>
      <pubDate>Tue, 01 Mar 2022 19:47:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-install-python-3-8-on-debian-10/</guid>
      <description>Python is one of the most widely used programming languages in the world. With its easy-to-learn syntax, Python is a popular choice for beginners and experienced developers alike. Python is quite a versatile programming language. It can be used to build all kinds of applications, from simple and complex machine learning algorithms.
Debian 10 includes Python version 3.7, which can be installed or updated using the apt tool.
At the time of writing, Python 3.</description>
    </item>
    
    <item>
      <title>Python range function</title>
      <link>https://www.sobyte.net/post/2022-03/python-range/</link>
      <pubDate>Tue, 01 Mar 2022 19:40:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-range/</guid>
      <description>The Python range type generates a sequence of integers by defining the start and end points of a range. It is typically used with a for loop to iterate over a sequence of numbers.
range() works differently in Python 2 and 3.
In Python 2, there are two functions that allow you to generate sequences of integers range and xrange. These functions are very similar, the main difference being that range returns a list and xrange returns an xrange object.</description>
    </item>
    
    <item>
      <title>How to exclude filtered output from Linux Grep</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-exclude-filtered-output-in-linux-grep/</link>
      <pubDate>Tue, 01 Mar 2022 19:31:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-exclude-filtered-output-in-linux-grep/</guid>
      <description>grep is a powerful command line tool for searching one or more input files for lines that match a regular expression and writing each matching line to standard output.
In this tutorial, we will show you how to use grep to filter the output and exclude . This includes excluding lines that don&amp;rsquo;t match, excluding directories and files, etc.
Exclude lines that do not match To print only the lines that do not match the search pattern, use the -v (or -invert-match) option.</description>
    </item>
    
    <item>
      <title>Solve kubeadm initialization exception: dial tcp 127.0.0.1:10248: connect: connection refused</title>
      <link>https://www.sobyte.net/post/2022-03/connect-connection-refused/</link>
      <pubDate>Tue, 01 Mar 2022 19:25:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/connect-connection-refused/</guid>
      <description>Kubernetes, often abbreviated as K8s, is an open-source system for automating the deployment, scaling, and management of containerized containerized applications in an open source system. The system was designed by Google and donated to the Cloud Native Computing Foundation (Linux Foundation). It is designed to provide a platform for automated deployment, scaling, and running application containers across host clusters. It supports a range of container tools, including Docker and others.</description>
    </item>
    
    <item>
      <title>How to install MongoDB on CentOS 8</title>
      <link>https://www.sobyte.net/post/2022-03/install-mongodb-on-centos-8/</link>
      <pubDate>Tue, 01 Mar 2022 10:22:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/install-mongodb-on-centos-8/</guid>
      <description>MongoDB is a free open source document database. It belongs to a family of databases called NoSQL, which is different from traditional table-based SQL databases such as MySQL and PostgreSQL.
In MongoDB, data is stored in flexible JSON-like documents, with fields varying with the document. It does not require a predefined schema and the data structure can change over time.
This tutorial describes how to install and configure MongoDB Community Edition on CentOS 8 server.</description>
    </item>
    
    <item>
      <title>Using namespaces to organize TypeScript code.</title>
      <link>https://www.sobyte.net/post/2022-03/organizing-typescript-code-using-namespaces/</link>
      <pubDate>Tue, 01 Mar 2022 10:12:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/organizing-typescript-code-using-namespaces/</guid>
      <description>With the increasing use of third-party libraries in software, we often encounter the problem of global namespaces being polluted, leading to name conflicts between components in the global namespace. As a result, we need to use namespaces to organize blocks of code in order to uniquely identify variables, objects, and classes.
In this article, we will discuss namespaces, when they are needed, and how they can be used to enhance the organization of TypeScript code.</description>
    </item>
    
    <item>
      <title>Some concepts of nginx</title>
      <link>https://www.sobyte.net/post/2022-03/nginx-concepts/</link>
      <pubDate>Tue, 01 Mar 2022 09:49:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/nginx-concepts/</guid>
      <description>Nginx is a web server that acts as a reverse proxy, load balancer, mail proxy and HTTP cache, and follows a master-slave architecture.
A complicated term and a confusing definition filled with big confusing words, right? Don&amp;rsquo;t worry, I can help you first understand the basics of the architecture and terminology in Nginx. Then, we&amp;rsquo;ll move on to installing and creating Nginx configurations.
To make things easy, just remember: Nginx is an amazing web server .</description>
    </item>
    
    <item>
      <title>Top 5 Typescript Dependency Injection Container</title>
      <link>https://www.sobyte.net/post/2022-03/typescript-dependency-injection-containers/</link>
      <pubDate>Tue, 01 Mar 2022 09:30:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/typescript-dependency-injection-containers/</guid>
      <description>The original JavaScript environment lacked a static type system and had little support for containerized dependency injection, making the code I wrote prone to obvious errors and nearly impossible to test.
TypeScript&amp;rsquo;s compile-time type system changes all that, allowing continuous development of complex projects. It has brought back design patterns such as dependency injection, proper typing and passing of dependencies during object construction, which promotes more structured programming and helps write tests without the need for patching.</description>
    </item>
    
    <item>
      <title>Find and Replace in Vim/Vi</title>
      <link>https://www.sobyte.net/post/2022-03/vim-find-replace/</link>
      <pubDate>Tue, 01 Mar 2022 09:18:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/vim-find-replace/</guid>
      <description>This article describes how to find and replace text in Vim/Vi.
Vim is the most popular command line text editor. It comes pre-installed on macOS and most Linux distributions. Finding and replacing text in Vim is very easy.
Basic Find and Replace In Vim, you can use the :substitute (:s) command to find and replace text.
To run commands in Vim, you must be in normal mode, which is the default mode when you start the editor.</description>
    </item>
    
    <item>
      <title>How to quickly locate Flutter APP memory leaks</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-detecting-memory-leaks-in-flutter-app/</link>
      <pubDate>Mon, 28 Feb 2022 10:28:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-detecting-memory-leaks-in-flutter-app/</guid>
      <description>When an APP grows with business, useless features pile up, the team of developers grows, and the code expands in a big way, despite a series of process restraints such as manual review, code specification, static lint check and so on, it cannot stop the collapsing universe from evolving into an unfathomable black hole. Among them, there is no greater headache than &amp;ldquo;memory leak&amp;rdquo;. What is a memory leak? It&amp;rsquo;s</description>
    </item>
    
    <item>
      <title>Flutter Raw Image Provider</title>
      <link>https://www.sobyte.net/post/2022-02/flutter-raw-image-provider/</link>
      <pubDate>Mon, 28 Feb 2022 10:23:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/flutter-raw-image-provider/</guid>
      <description>The Image Widget in Flutter has built-in support for files in the form of file, network, and memory. However, these only support regular compressed image files or binary data, such as jpg, png, webp files, etc. There is no support for raw rgba binary data. Raw binary data here refers to the array of bytes consisting of the color values of each pixel of an image. A picture has width x height pixel points, the color value of a pixel point is stored with 32bit, divided into 4 channels, each channel occupies 8bit, respectively, red, green, blue, transparency (RGBA), this array is the collection of color values of each pixel point, dart in general use Uint8List.</description>
    </item>
    
    <item>
      <title>The most common mistakes that beginners make when practicing Flutter</title>
      <link>https://www.sobyte.net/post/2022-02/the-most-often-errors-in-flutter/</link>
      <pubDate>Mon, 28 Feb 2022 10:03:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/the-most-often-errors-in-flutter/</guid>
      <description>Typical error one: Future that cannot be mastered Typical error message: NoSuchMethodError: The method &#39;markNeedsBuild&#39; was called on null. This error is often found in asynchronous task (Future) processing, such as a page requesting a web API data and refreshing the Widget State based on the data. This error occurs when the asynchronous task ends after the page has been popped, but does not check if the State is still</description>
    </item>
    
    <item>
      <title>Memcached Meta Commands</title>
      <link>https://www.sobyte.net/post/2022-02/memcached-meta-commands/</link>
      <pubDate>Mon, 28 Feb 2022 09:28:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/memcached-meta-commands/</guid>
      <description>Memcached is the oldest in-memory caching server. Because it doesn&amp;rsquo;t support as rich a data structure as Redis, Memcached is used less and less. But I think Memcached is a great example of the Unix philosophy of doing one thing at a time and doing it well. And Memcached is focused on the one thing that is memory caching. This is best demonstrated by the introduction of Meta Commands in Memcached in version 1.</description>
    </item>
    
    <item>
      <title>How to install Ubuntu on a Raspberry Pi</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-install-ubuntu-on-raspberry-pi/</link>
      <pubDate>Fri, 25 Feb 2022 16:00:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-install-ubuntu-on-raspberry-pi/</guid>
      <description>Raspberry Pi is the most popular single-board computer ever made. It can be used for a variety of purposes such as desktops, home media centers, smart Wi-Fi routers, automation systems, and gaming servers. The use cases are endless.
If your Raspberry Pi does NOT have an SD card with NOOBS pre-installed, you will need to manually install the OS on the SD card. You can run many different operating systems on your Raspberry Pi, including Windows 10 IoT, FreeBSD, and various Linux distributions such as Arch Linux and Raspbian .</description>
    </item>
    
    <item>
      <title>How to install and use FFmpeg on Debian 10</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-install-ffmpeg-on-debian-10/</link>
      <pubDate>Fri, 25 Feb 2022 15:51:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-install-ffmpeg-on-debian-10/</guid>
      <description>FFmpeg is a free open source toolset for working with multimedia files. It contains a set of shared audio and video libraries such as libavcodec, libavformat and libavutil. Using FFmpeg, you can convert between various video and audio formats, set sample rates, capture streaming audio/video and resize video.
This article describes how to install and use FFmpeg on Debian 10 Linux.
Installing FFmpeg on Debian The official Debian repository contains the FFmpeg package, which can be installed using the apt package manager.</description>
    </item>
    
    <item>
      <title>How to find and kill zombie processes in Linux</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-find-and-kill-zombie-processes-in-linux/</link>
      <pubDate>Fri, 25 Feb 2022 15:39:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-find-and-kill-zombie-processes-in-linux/</guid>
      <description>Before we get into the Zombie process, let me recall what a process is in Linux.
In short, a process is a program instance. It can be foreground (interactive process) or background (non-interactive or automatic process). It can be a parent process (the creator of other processes at runtime) or a child process (a process created by other processes).
In Linux, every process has a parent process, except for the first init (or systemd) process with a PID of 0.</description>
    </item>
    
    <item>
      <title>How to kill inactive SSH sessions</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-kill-inactive-ssh-sessions/</link>
      <pubDate>Fri, 25 Feb 2022 15:27:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-kill-inactive-ssh-sessions/</guid>
      <description>When you have been disconnected from the server several times, causing the ssh session to be inactive. You know this because when you use the &amp;quot; w&amp;quot; command, you will see the following &amp;hellip;&amp;hellip;
1 2 3 4  22:47:28 up 315 days, 21:09, 2 users, load average: 9.04, 8.17, 7.30 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT root pts/0 ipxxx-xxx-xxx-xxx 23:54 26:40 9.26s 0.86s -bash root pts/1 ipxxx-xxx-xxx-xxx 22:44 0.</description>
    </item>
    
    <item>
      <title>Alternatives to htop - btop</title>
      <link>https://www.sobyte.net/post/2022-02/btop/</link>
      <pubDate>Fri, 25 Feb 2022 15:20:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/btop/</guid>
      <description>Meet btop, an aesthetically pleasing system resource monitor that displays processor, memory, disk, network and process usage and statistics. btop is a lighter, faster version of C++, and is a continuation of bashtop and bpytop.
Over the years, the options available for command-line system monitoring tools have grown considerably. There are top, htop, glances, nmon, ytop, gtop, vtop and atop to name a few.
In Linux administration, it is important to monitor system performance and hardware resource usage in real time.</description>
    </item>
    
    <item>
      <title>The difference between free memory and available memory</title>
      <link>https://www.sobyte.net/post/2022-02/free-vs-available-memory-in-linux/</link>
      <pubDate>Fri, 25 Feb 2022 10:19:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/free-vs-available-memory-in-linux/</guid>
      <description>Sometimes we need to know exactly how our Linux system is using memory. In this article we will look at how to use the free command line program to see how memory is being used on a Linux system. We will clearly define the difference between free free memory and free memory on a Linux system.
Understanding free memory and available memory What is free memory and how is it different from available memory?</description>
    </item>
    
    <item>
      <title>The seq command in Linux</title>
      <link>https://www.sobyte.net/post/2022-02/seq-command-in-linux/</link>
      <pubDate>Fri, 25 Feb 2022 10:08:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/seq-command-in-linux/</guid>
      <description>The seq command is an abbreviation for sequence and is used to print a sequence of numbers in increasing or decreasing order. In other words, it prints a range of specified values. The numbers can be integers or real numbers with decimal points, or negative numbers. You can also specify the upper or lower limit of the sequence, etc.
In this tutorial, we will explain how to use the seq command and seq common command options, such as printing a sequence of numbers up to the upper limit, printing a specified value between the lower and upper digits, printing a sequence with custom increments, printing a sequence in decreasing or inverted order, printing a sequence with the same number of digits, printing a sequence in a specified format, printing a sequence using a specified separator, and finally we give you a practical application example for your reference.</description>
    </item>
    
    <item>
      <title>In-depth understanding of useState</title>
      <link>https://www.sobyte.net/post/2022-02/react-usestate/</link>
      <pubDate>Fri, 25 Feb 2022 09:54:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/react-usestate/</guid>
      <description>Why don&amp;rsquo;t function components before react 16 have state? As you know, function components did not have state before react 16, and component state could only be passed through props. Write two simple components, a class component and a function component. 1 2 3 4 5 6 7 8 9 10 11 12 13 const App = () =&amp;gt;&amp;lt;span&amp;gt;123&amp;lt;/span&amp;gt;; class App1 extends React.Component { constructor(props) { super(props); this.state = {</description>
    </item>
    
    <item>
      <title>Usage of Guava Cache</title>
      <link>https://www.sobyte.net/post/2022-02/guava-cache-usage/</link>
      <pubDate>Thu, 24 Feb 2022 19:19:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/guava-cache-usage/</guid>
      <description>Preface &amp;ldquo;Caching&amp;rdquo; has always been one of the most talked about technologies among programmers, such as Redis, Encache, and Guava Cache. It&amp;rsquo;s important to acknowledge that Redis distributed caching is the most popular caching technology today, both in terms of interviewing and frequency of use, but from my personal project experience, local caching is also a very common technology. There are many articles analyzing Redis caching, such as Redis avalanche,</description>
    </item>
    
    <item>
      <title>Linux Performance: Why you should add swap space</title>
      <link>https://www.sobyte.net/post/2022-02/why-you-should-add-swap-space/</link>
      <pubDate>Thu, 24 Feb 2022 10:20:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/why-you-should-add-swap-space/</guid>
      <description>We know that using Linux swap space instead of RAM (memory) can seriously degrade performance. So, one might ask, since I have enough available memory, wouldn&amp;rsquo;t it be better to remove the swap space? The short answer is no. Enabling swap space brings performance benefits, even if you have more than enough RAM.
Even with enough server memory installed, you will often find that you will use swap space after a long period of normal operation.</description>
    </item>
    
    <item>
      <title>How to find all the information about Linux commands like a pro</title>
      <link>https://www.sobyte.net/post/2022-02/finding-a-path-of-a-linux-command/</link>
      <pubDate>Thu, 24 Feb 2022 10:09:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/finding-a-path-of-a-linux-command/</guid>
      <description>One of the most common problems encountered by newcomers is how to find the Linux command path that was just installed on Linux using a package manager (e.g. the apt command). There are many developers from the Windows world. Many of them are first time Linux users. Some use Linux with WSL and some deal with cloud servers directly via ssh. Let&amp;rsquo;s look at some common commands to list or</description>
    </item>
    
    <item>
      <title>Difference between IPv4 and IPv6</title>
      <link>https://www.sobyte.net/post/2022-02/ipv4-and-ipv6/</link>
      <pubDate>Thu, 24 Feb 2022 09:46:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/ipv4-and-ipv6/</guid>
      <description>In today&amp;rsquo;s technological age, we have witnessed a huge leap in the use of Internet and networked devices. Every home has a laptop, smartphone, digital watch, IoT devices, home automation components and other devices connected to the home network or the Internet. Devices communicate with each other over a variety of network protocols, of which TCP and IP are the most commonly used. Each device connected to the network must have an IP address that identifies the device on the network.</description>
    </item>
    
    <item>
      <title>Linux System Programming -(pthread) Thread Creation and Usage</title>
      <link>https://www.sobyte.net/post/2022-02/linux-pthread/</link>
      <pubDate>Thu, 24 Feb 2022 09:34:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-pthread/</guid>
      <description>This article describes the basic use of threads on Linux. 1. Preface Difference between threads and processes (1) Process: It is the smallest unit of OS scheduling. ps, top, etc. commands can be used to view the details of processes under Linux. (2) Thread: It is the smallest unit of process scheduling, each process has a main thread. The main thing to do in the process is the thread. (3)</description>
    </item>
    
    <item>
      <title>Trickster Usage</title>
      <link>https://www.sobyte.net/post/2022-02/trickster/</link>
      <pubDate>Wed, 23 Feb 2022 10:20:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/trickster/</guid>
      <description>Introduction Trickster is comcast&amp;rsquo;s open source HTTP reverse proxy cache that speeds up TSDB (time series databases, such as Prometheus) queries. Purpose Use Trickster to proxy Prometheus in a k8s cluster to verify that Trickster can speed up Grafana queries. Note: Prometheus and Grafana are already deployed in the cluster Installation According to the official documentation, Trickster provides the following installation methods. Docker k8s Helm Source code installation For this</description>
    </item>
    
    <item>
      <title>Go Modules - checksum mismatch error resolution</title>
      <link>https://www.sobyte.net/post/2022-02/checksum-mismatch-error/</link>
      <pubDate>Wed, 23 Feb 2022 10:13:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/checksum-mismatch-error/</guid>
      <description>Problem Description After executing go clean -modcache locally, executing go mod download gives the following error.
1 2 3 4  verifying git.xxx.com/neirong/app-framework@v0.7.8/go.mod: checksum mismatch downloaded: h1:/8A+C1sjRPdK/06I7b2egOVjo8+ECKV3vJ3Cqz5vEzc= go.sum: h1:7HfHuMOcinPkTDMNEf6Otcy4+TBvDQ/+f2UO0N23l3o= SECURITY ERROR   If you encounter a checksum mismatch error, delete go.sum, execute go clean -modcache, and then execute go mod download. That&amp;rsquo;s what I did, and after that, no more errors were reported. When I commit the new go.sum file to GitLab, I get the same error when I run it to lint.</description>
    </item>
    
    <item>
      <title>Forced deletion of the k8s terminating state namespace</title>
      <link>https://www.sobyte.net/post/2022-02/force-delete-k8s-terminating-namespace/</link>
      <pubDate>Wed, 23 Feb 2022 10:07:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/force-delete-k8s-terminating-namespace/</guid>
      <description>When deleting a namespace, the delete operation is interrupted when it is not completely deleted, and the namespace is in the terminating state. One solution is to delete again with the --force option after the command, e.g.
1  kubectl delete ns &amp;lt;terminating-namespace&amp;gt; --force   But it often doesn&amp;rsquo;t work, so you need to use the interface to delete the namespace.
First, export the namespace information for the terminating state to a json file.</description>
    </item>
    
    <item>
      <title>Deploy Jenkins services using Docker</title>
      <link>https://www.sobyte.net/post/2022-02/deploy-jenkins/</link>
      <pubDate>Wed, 23 Feb 2022 09:41:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/deploy-jenkins/</guid>
      <description>This article documents the process of building a Jenkins service from scratch using Docker.
Before you start This article assumes that you already have some basic knowledge of Linux, command line operations, ssh, and other tools.
Installing Docker Docker offers unprecedented ease of deployment of services, and an introduction to it can be found at official website.
To install Docker, just follow the steps, here is the link to the official tutorial.</description>
    </item>
    
    <item>
      <title>GlusterFS Deployment Brief</title>
      <link>https://www.sobyte.net/post/2022-02/glusterfs/</link>
      <pubDate>Tue, 22 Feb 2022 10:16:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/glusterfs/</guid>
      <description>This article describes the process of deploying Gluster FS on Debian 10 (Buster) from an experimental point of view, trying to make the steps easy and able to be done quickly by one person. To achieve this, this article tries to use packages from the official Debian repo, avoiding compilation, and uses ansible to execute commands uniformly.
Before you start What is Gluster FS An excerpt from the official GlusterFS website.</description>
    </item>
    
    <item>
      <title>What is the Sigstore project?</title>
      <link>https://www.sobyte.net/post/2022-02/sigstore/</link>
      <pubDate>Tue, 22 Feb 2022 10:09:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/sigstore/</guid>
      <description>Sigstore is the latest project of Linux Foundation, which is a new model of software signature based on Certificate Transparency Log.
Sigstore solves the problem of keeping private keys caused by traditional PGP signatures, it has excellent openness and scalability, and is known as the Let&amp;rsquo;s Encrypt of software signatures.
TL;DR Briefly, what the Sigstore project implements is to record the information of each signature through the Certificate Transparency Log, and end users query the Log and verify it when they need to use it.</description>
    </item>
    
    <item>
      <title>Modern processor architecture</title>
      <link>https://www.sobyte.net/post/2022-02/modern-processor/</link>
      <pubDate>Tue, 22 Feb 2022 09:49:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/modern-processor/</guid>
      <description>A short, straightforward introduction to modern processor microarchitecture design.
 Today&amp;rsquo;s robots are very primitive, capable of understanding only a few simple instructions such as &amp;lsquo;go left&amp;rsquo;, &amp;lsquo;go right&amp;rsquo; and &amp;lsquo;build car&amp;rsquo;.
John Thomas Sladek
 Warning 1: This article is intended to be about serious science in informal and witty terms.
Warning 2: Long article! Estimated reading time is 36 minutes.
This article introduces some concepts about processor microarchitecture to junior computer science students and readers interested in modern processor architecture.</description>
    </item>
    
    <item>
      <title>A va_list error case</title>
      <link>https://www.sobyte.net/post/2022-02/c-va-list-pitfall/</link>
      <pubDate>Tue, 22 Feb 2022 09:41:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/c-va-list-pitfall/</guid>
      <description>I recently helped someone troubleshoot a bug and saw an interesting case. The following program will have Segmentation Fault, can you see the problem?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  #include &amp;lt;stdarg.h&amp;gt; struct Context { char *error_; }; void report_error(struct Context *ctx, const char *format, va_list args) { int len = vsnprintf(NULL, 0, format, args); // XX  free(ctx-&amp;gt;error_); ctx-&amp;gt;error_ = (char *)malloc(len + 1); if (ctx-&amp;gt;error_) { vsnprintf(ctx-&amp;gt;error_, len + 1, format, args); // XX  } }   va_list Introduction Variadic functions in C are implemented as va_list, va_start, va_arg and va_end defined by &amp;lt;stdarg.</description>
    </item>
    
    <item>
      <title>In-depth understanding of the Gradle Tooling API</title>
      <link>https://www.sobyte.net/post/2022-02/gradle-tooling-api/</link>
      <pubDate>Tue, 22 Feb 2022 09:13:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/gradle-tooling-api/</guid>
      <description>1. Introduction A build system is an automated tool for generating target products from source code, including libraries, executables, generated scripts, etc. Build systems generally provide platform-related executables that can be triggered externally by executing commands, such as GUN Make, Ant, CMake, Gradle, etc. Gradle is a flexible and powerful open source Gradle is a flexible and powerful open source build system that provides cross-platform executables for external execution of Gradle builds via commands in a command line window, such as .</description>
    </item>
    
    <item>
      <title>Analyzing Nginx logs with Filebeat and Elasticsearch</title>
      <link>https://www.sobyte.net/post/2022-02/elasticsearch-nginx/</link>
      <pubDate>Mon, 21 Feb 2022 10:05:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/elasticsearch-nginx/</guid>
      <description>This article documents the use of Filebeat, Kibana, and Elasticsearch to build a system for collecting and analyzing Nginx logs; Filebeat is responsible for delivering Nginx log data as a data source to Elasticsearch. As an introduction, we will first explain the relationship between the software: Elasticsearch is a distributed full-text search and data analysis engine based on RESTful style; Kibana is a web system for visualizing Elasticsearch data; and</description>
    </item>
    
    <item>
      <title>IOS NSURLProtocol Explained and Pitfalls of Use</title>
      <link>https://www.sobyte.net/post/2022-02/nsurlprotocol/</link>
      <pubDate>Mon, 21 Feb 2022 09:55:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nsurlprotocol/</guid>
      <description>If you want to intervene in network requests, a good choice is to use NSURLProtocol, a feature of the iOS URL Loading System that provides a convenient interface to allow developers to redefine the behavior of network requests, including modifying the request initiation and response actions. In iOS web development, if there is a need for something like. adding specific header or parameters to global requests. request redirection, MOCK request</description>
    </item>
    
    <item>
      <title>IOS Method Swizzling Usage Pitfalls</title>
      <link>https://www.sobyte.net/post/2022-02/method-swizzling/</link>
      <pubDate>Mon, 21 Feb 2022 09:46:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/method-swizzling/</guid>
      <description>While reading the source code of a team project, I found some flaws in the way Method Swizzling is written. This article is about what the correct way to write iOS Method Swizzling should look like. Here is an implementation of iOS Method Swizzling. 1 2 3 4 5 6 7 8 9 10 11 + (void)load { Class class = [self class]; SEL fromSelector = @selector(func); SEL toSelector =</description>
    </item>
    
    <item>
      <title>How to build your own react hooks</title>
      <link>https://www.sobyte.net/post/2022-02/self-react-hooks/</link>
      <pubDate>Mon, 21 Feb 2022 09:31:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/self-react-hooks/</guid>
      <description>With the new API for hooks added in React v16.8.0, it&amp;rsquo;s important to understand how to use it and be able to write a few custom hooks for our business. 1. One of the commonly used hooks There are several built-in hooks officially provided, let&amp;rsquo;s have a brief look at their usage. 1.1 useState: State hooks If we need to update the state of the page, we can put it</description>
    </item>
    
    <item>
      <title>Multiprocessing and daemons in nodejs</title>
      <link>https://www.sobyte.net/post/2022-02/node-multiprocessing/</link>
      <pubDate>Sun, 20 Feb 2022 15:08:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/node-multiprocessing/</guid>
      <description>node is single-threaded, how can our node project utilize the resources of a multi-core CPU while improving the stability of the node service? This article is divided into 4 main parts to explain. node&amp;rsquo;s single thread node multi-process creation multi-process communication multi-process maintenance 1. single thread of node A process is a dynamic execution of a program with certain independent functions on a dataset, an independent unit of resource allocation</description>
    </item>
    
    <item>
      <title>Hash and history routing in the browser</title>
      <link>https://www.sobyte.net/post/2022-02/hash-history-router/</link>
      <pubDate>Sun, 20 Feb 2022 15:01:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/hash-history-router/</guid>
      <description>When we use front-end rendering like Vue or React, there are usually two types of routing: hash routing and history routing. hash routing: listen to the hash changes in the url and render different content, this kind of routing does not send requests to the server and does not need server-side support. history routing: listens for changes in the path in the url and requires the support of both the</description>
    </item>
    
    <item>
      <title>The EventLoop mechanism in Js</title>
      <link>https://www.sobyte.net/post/2022-02/js-eventloop/</link>
      <pubDate>Sun, 20 Feb 2022 14:56:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/js-eventloop/</guid>
      <description>We know that js is single-threaded, so how does js handle asynchronous code? For example, the following code is how the output is performed. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 console.log(1); setTimeout(function() { console.log(2); }, 0); new Promise(function(resolve) { console.log(3); resolve(Date.now()); }).then(function() { console.log(4); }); console.log(5); setTimeout(function() { new Promise(function(resolve) { console.log(6); resolve(Date.now()); }).then(function() { console.log(7); });</description>
    </item>
    
    <item>
      <title>Exceptions and errors that cannot be caught by try-catch statements in js</title>
      <link>https://www.sobyte.net/post/2022-02/try-catch-cant-error/</link>
      <pubDate>Sun, 20 Feb 2022 13:13:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/try-catch-cant-error/</guid>
      <description>During development, our goal is 0error, 0warning. But there are many factors beyond our control, and to avoid errors in one piece of code that affect other modules or the overall code, we often use the try-catch module to actively catch some exceptions or errors. For example, if we get the parameters in the url and parse them in JSON, we need to wrap them in try-catch because we can&amp;rsquo;t</description>
    </item>
    
    <item>
      <title>Some tips to help you in react development</title>
      <link>https://www.sobyte.net/post/2022-02/react-use-tips/</link>
      <pubDate>Sun, 20 Feb 2022 12:58:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/react-use-tips/</guid>
      <description>I have been using react development for 1 year, so I can&amp;rsquo;t say I am very proficient, but in the process of using it, I did understand and summarize some tips that can speed up our subsequent development. 1. some tips in useState When we use react to develop function comppoent, we can&amp;rsquo;t help but see useState everywhere, so what are the pitfalls and things to watch out for in</description>
    </item>
    
    <item>
      <title>nextjs how not to show data of next_data</title>
      <link>https://www.sobyte.net/post/2022-02/nextjs-no-data/</link>
      <pubDate>Sun, 20 Feb 2022 12:50:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nextjs-no-data/</guid>
      <description>nextjs provides the getServerSideProps method (previously called getInitialProps method) to request data before rendering the page. However, the nextjs framework will pass the requested data to the front-end via a script tag in order to keep the front-end and back-end in sync. 1 &amp;lt;script id=&amp;#34;__NEXT_DATA__&amp;#34; type=&amp;#34;application/json&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; But sometimes, we don&amp;rsquo;t want to expose some raw data to the front-end page, such as some blog sites, news sites, etc., which basically</description>
    </item>
    
    <item>
      <title>Various ways to determine if an element exists in an array</title>
      <link>https://www.sobyte.net/post/2022-02/check-item-in-array/</link>
      <pubDate>Sun, 20 Feb 2022 11:12:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/check-item-in-array/</guid>
      <description>In js development, we often encounter the need to determine whether a certain element exists in an array. In fact, there are many ways to determine this, so let&amp;rsquo;s understand them one by one. Let&amp;rsquo;s define an array first. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 const arr = [ 13, false, &amp;#39;abcd&amp;#39;, undefined, 13, null, NaN, [1, 2], { a: 123</description>
    </item>
    
    <item>
      <title>Native methods for manipulating cookies - cookieStore</title>
      <link>https://www.sobyte.net/post/2022-02/cookiestore/</link>
      <pubDate>Sun, 20 Feb 2022 10:59:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/cookiestore/</guid>
      <description>We usually use document.cookie for operations such as adding, deleting, and checking cookies. Here we introduce a new method cookieStore. 1. How to manipulate cookies in general document.cookie gets all the cookie strings for the current domain. Each cookie is separated by a semicolon. 1 document.cookie; // &amp;#34;a=1; b=2; c=wenzi&amp;#34; To manipulate cookies, you are generally manipulating document.cookie. Here is a piece of code that I commonly use. 1 2</description>
    </item>
    
    <item>
      <title>In-depth understanding of Proxy in js </title>
      <link>https://www.sobyte.net/post/2022-02/js-proxy/</link>
      <pubDate>Sun, 20 Feb 2022 10:47:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/js-proxy/</guid>
      <description>Proxy is a syntax added to the es2015 standard specification, and it is likely that you have only heard of it but not used it - after all, Proxy features cannot be used easily given the compatibility issues. But now, with each browser&amp;rsquo;s update iteration, Proxy&amp;rsquo;s support is getting higher and higher. Vue3 has replaced Object.defineProperty with Proxy for responsiveness, and mobx has been using Proxy for proxying since version</description>
    </item>
    
    <item>
      <title>Use the http module in nodejs to implement a few super useful tools</title>
      <link>https://www.sobyte.net/post/2022-02/nodejs-http-tools/</link>
      <pubDate>Sun, 20 Feb 2022 10:36:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nodejs-http-tools/</guid>
      <description>nodejs makes it easy for us front-end developers to do some server-side operations seamlessly. Other back-end languages like php, golang, java, etc. require a certain amount of learning cost, while nodejs is customized for front-end developers. In nodejs, a native http module is provided, and we can use the http module to make a few common widgets that can greatly facilitate our work. 1. A simple HTTP service Building an</description>
    </item>
    
    <item>
      <title>Some efficient magic operators in JS</title>
      <link>https://www.sobyte.net/post/2022-02/js-magic-operators/</link>
      <pubDate>Sat, 19 Feb 2022 20:52:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/js-magic-operators/</guid>
      <description>Now JavaScript has added some operators that are easier and more efficient to manipulate without some additional processing. Nowadays, JavaScript releases a new version every year, and it adds some new operators that are more convenient and efficient to use. Today we&amp;rsquo;ll take a look at some of these efficient magic operators. 1. Optional Chain Operators Previously, when we wanted to use a property with a deeper structure, and we</description>
    </item>
    
    <item>
      <title>How to solve the problem that the security area of mobile is 0</title>
      <link>https://www.sobyte.net/post/2022-02/android-safe-area-zero/</link>
      <pubDate>Sat, 19 Feb 2022 20:45:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/android-safe-area-zero/</guid>
      <description>In some Android devices, the safe-area-inset-top property can be recognized, but there is no height, how to solve this kind of problem? From iPhone X, the area of bangs and the black bar at the bottom appeared, and Android systems usually imitate some designs of iPhone, and then there are more and more new models with the concept of safe-area now. If these are not considered at all, a situation</description>
    </item>
    
    <item>
      <title>Implement a React popup component with dynamic effects</title>
      <link>https://www.sobyte.net/post/2022-02/react-transition-modal/</link>
      <pubDate>Sat, 19 Feb 2022 20:36:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/react-transition-modal/</guid>
      <description>When we write some UI components, it is easy to implement them without considering dynamic effects, mainly the toggle of presence or absence (similar to the v-if property in Vue) or visibility (similar to the v-show property in Vue). 1. Pop-ups without motion In React, it can be implemented like this. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 interface ModalProps { open: boolean;</description>
    </item>
    
    <item>
      <title>How to use jest and lint-staged to detect only files that have been changed</title>
      <link>https://www.sobyte.net/post/2022-02/jest-and-lint-staged-detect/</link>
      <pubDate>Sat, 19 Feb 2022 20:28:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/jest-and-lint-staged-detect/</guid>
      <description>How do we run only the unit tests for files that have changed before git commit? As we move forward with EPC, unit testing is a necessary skill, and it&amp;rsquo;s important to run single tests before local Git commits, as you can&amp;rsquo;t put all the pressure of single tests on the pipeline. After all, it costs a lot of money to run a single test in the pipeline, and it</description>
    </item>
    
    <item>
      <title>How to get request parameters in the native http service of nodejs</title>
      <link>https://www.sobyte.net/post/2022-02/nodejs-http-getquery/</link>
      <pubDate>Sat, 19 Feb 2022 20:20:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nodejs-http-getquery/</guid>
      <description>How do you parse the parameters in the request URL in the native http service of nodejs? The official url.parse() method is no longer recommended, so what method should I use? In nodejs, the url.parse method was previously recommended for parsing parameters, but this method is no longer recommended, and now the recommended API is the WHATWG URL. Since all the methods found on the web are still the same</description>
    </item>
    
    <item>
      <title>The randomUUID method is supported on the web client</title>
      <link>https://www.sobyte.net/post/2022-02/js-crypto-randomuuid/</link>
      <pubDate>Sat, 19 Feb 2022 20:16:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/js-crypto-randomuuid/</guid>
      <description>Starting from Chome92 version, crypto module already supports randomUUID() method. 1. The old way In front-end web, we usually use timestamp or Math.random() when generating a uuid. For example, on stackoverflow, there is a famous code: How to create a GUID / UUID, which is generated by Math.random(). 1 2 3 4 5 6 7 8 9 function uuidv4() { return &amp;#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&amp;#39;.replace(/[xy]/g, function (c) { var r = (Math.random() *</description>
    </item>
    
    <item>
      <title>How to package NextJs separately by server-side or browser-side type</title>
      <link>https://www.sobyte.net/post/2022-02/nextjs-server-client-build/</link>
      <pubDate>Sat, 19 Feb 2022 20:04:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nextjs-server-client-build/</guid>
      <description>If some modules can only be used in the browser side , or only in the server side , how to refer to it in NextJs ? NextJs is an excellent react isomorphic framework that writes code once and can be used on both the server side and the browser side. This is because NextJs will package a copy on the server side and a copy on the browser side,</description>
    </item>
    
    <item>
      <title>iOS WKWebView detailed explanation and JS Bridge synchronization call problem</title>
      <link>https://www.sobyte.net/post/2022-02/ios-wkwebview/</link>
      <pubDate>Sat, 19 Feb 2022 12:42:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/ios-wkwebview/</guid>
      <description>WKWebView is the browser component used to replace UIWebView after iOS 8.0. Compared with UIWebView, WKWebView has higher performance, supports more HTML5 features and has more detailed control. This article briefly introduces the use of UIWebView and the synchronous interaction between JS and native APP. WKWebView 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    
    <item>
      <title>Implementation of jsonrpc2.0 in Go</title>
      <link>https://www.sobyte.net/post/2022-02/go-jsonrpc2.0/</link>
      <pubDate>Sat, 19 Feb 2022 12:22:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-jsonrpc2.0/</guid>
      <description>request Request can represent a request or notification from jsorpc2.0. 1 2 3 4 5 6 7 8 type Request struct { Method string `json:&amp;#34;method&amp;#34;` Params *json.RawMessage `json:&amp;#34;params,omitempty&amp;#34;` ID ID `json:&amp;#34;id&amp;#34;` Notif bool `json:&amp;#34;-&amp;#34;` Meta *json.RawMessage `json:&amp;#34;meta,omitempty&amp;#34;` } The Meta field is not specified in the jsonrpc spec, but is an aid to tracking context. The Notif field indicates whether it is a notification or not. The Params/Meta fields are</description>
    </item>
    
    <item>
      <title>Using async functions in Map traversal</title>
      <link>https://www.sobyte.net/post/2022-02/async-in-map/</link>
      <pubDate>Sat, 19 Feb 2022 12:16:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/async-in-map/</guid>
      <description>Sometimes it is necessary to block the code for a period of time using the Sleep function, which is routinely implemented and called in the following way. 1 2 3 4 5 6 7 8 // Sleep Function const sleep = (ms) =&amp;gt; new Promise((resolve) =&amp;gt; setTimeout(resolve, ms))( // Usage async () =&amp;gt; { await sleep(3000); } ); However, when used in Array.prototype.map, it behaves incorrectly, as follows. 1 2</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Standard Library Explanation - Unordered Associative Containers</title>
      <link>https://www.sobyte.net/post/2022-02/unordered-set-and-map/</link>
      <pubDate>Sat, 19 Feb 2022 12:02:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/unordered-set-and-map/</guid>
      <description>Starting with C++11, the standard library has been extended for associative containers to provide associative containers based on hash table implementations. A hash table will take up more memory than the stored elements in exchange for evenly spreading O(1) performance. Hash Tables There are many strategies for resolving conflicts, the standard library chooses to use the separate linking method, where conflicting elements are placed in one location and stored in</description>
    </item>
    
    <item>
      <title>std::move() and std::forward()</title>
      <link>https://www.sobyte.net/post/2022-02/move-and-forward/</link>
      <pubDate>Sat, 19 Feb 2022 11:52:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/move-and-forward/</guid>
      <description>Move Semantics Move semantics is a new concept introduced in C++11 for the case when an object is assigned to another object and is no longer used by itself. Instead of calling the copy constructor of the new object and then destroying the original object, with move semantics, the resources of the original object are &amp;ldquo;moved&amp;rdquo; to the new object, e.g. std::vector assigns a pointer to an array to the</description>
    </item>
    
    <item>
      <title>Type derivation in modern C&#43;&#43;</title>
      <link>https://www.sobyte.net/post/2022-02/type-deduction/</link>
      <pubDate>Sat, 19 Feb 2022 11:41:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/type-deduction/</guid>
      <description>Template Type Derivation The following is a common function template. 1 2 template&amp;lt;typename T&amp;gt; void func(ParamType p); When we call it as func(x), the compiler will automatically derive the types T and ParamType for us, and they may not be the same because ParamType may have a const or &amp;amp; reference modifier. Parameter type is a reference or pointer 1 2 template&amp;lt;typename T&amp;gt; void func(T&amp;amp; p); This case does not</description>
    </item>
    
    <item>
      <title>Nine years on, what has TLS 1.3 brought?</title>
      <link>https://www.sobyte.net/post/2022-02/tls-13/</link>
      <pubDate>Sat, 19 Feb 2022 11:33:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/tls-13/</guid>
      <description>Nine years after the release of TLS 1.2, and four long years of agreement on it, TLS 1.3 is now available, designed with the simple goal of making data transfers faster and more secure.
More secure TLS uses a hybrid encryption process, which means that symmetric encryption is used during communication and the key for that encryption is negotiated through asymmetric encryption. The MAC algorithm is used for integrity checking and the certificate system is used for authentication.</description>
    </item>
    
    <item>
      <title>What happens in a TLS handshake?</title>
      <link>https://www.sobyte.net/post/2022-02/tls-handshake/</link>
      <pubDate>Sat, 19 Feb 2022 11:17:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/tls-handshake/</guid>
      <description>With the popularity of HTTPS, the word TLS also appears more frequently, so what is TLS and how does TLS make HTTP transmission secure?
TLS (Transport Layer Security), formerly known as SSL (Secure Socket Layer), is located between TCP and the application layer. Compared to HTTP, HTTPS does not change the protocol itself, but adds a layer of TLS between TCP and HTTP for encryption to ensure information security.
For information transmitted in clear text, there are several risks</description>
    </item>
    
    <item>
      <title>Two tricks to improve the write efficiency of hard disk storage data</title>
      <link>https://www.sobyte.net/post/2022-02/improve-the-write-efficiency-of-hard-disk-storage-data/</link>
      <pubDate>Sat, 19 Feb 2022 11:09:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/improve-the-write-efficiency-of-hard-disk-storage-data/</guid>
      <description>There are many ways to store data today, and hard drives are the preferred choice for most users because of their price and data protection advantages. However, hard disks are several orders of magnitude slower than memory in terms of IO reads and writes, so why would you prefer hard disks?
The first thing that needs to be mentioned is that the main reason why operating a disk is slow is because of the time consuming read and write to the disk.</description>
    </item>
    
    <item>
      <title>Linux large file splitting and merging</title>
      <link>https://www.sobyte.net/post/2022-02/linux-large-file-splitting-merging/</link>
      <pubDate>Fri, 18 Feb 2022 21:49:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-large-file-splitting-merging/</guid>
      <description>1. Splitting files You can use the split command to split files, which supports both text and binary file splitting, and the cat command to merge files.
1.1 Text file splitting When splitting a text file, you can split it by file size or by number of lines of text.
Splitting by file size
When splitting a file by file size, you need to specify the split file size with the -C parameter.</description>
    </item>
    
    <item>
      <title>Talking about EventEmitter</title>
      <link>https://www.sobyte.net/post/2022-02/event-emitter/</link>
      <pubDate>Fri, 18 Feb 2022 21:36:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/event-emitter/</guid>
      <description>Scenario The following scenario exists: when the audio player is in different states such as loading resources, playing audio, finished playing, etc., it performs different actions (such as updating UI state) through some mechanism. That is, by listening to some objects and triggering different events when their state changes. The above scenario can be implemented through EventEmitter, which can correspond to at least two patterns: Observer pattern and Publish/Subscribe pattern.</description>
    </item>
    
    <item>
      <title>What is the significance of Suspense for React?</title>
      <link>https://www.sobyte.net/post/2022-02/suspense-react/</link>
      <pubDate>Fri, 18 Feb 2022 21:23:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/suspense-react/</guid>
      <description>Many people may not have used Suspense in their projects, but Suspense is a very important part of React&amp;rsquo;s future development. This article will explain the significance of Suspense for React. React&amp;rsquo;s iterative process React has gone through three major changes in its main features from v16 to v18. v16: Asynchronous Mode v17: Concurrent Mode v18: Concurrent Render (concurrent update) To understand the significance of these three changes, you need</description>
    </item>
    
    <item>
      <title>Mutex&lt;Rc&gt; Why can&#39;t I pass it between threads?</title>
      <link>https://www.sobyte.net/post/2022-02/rust-mutex-send/</link>
      <pubDate>Fri, 18 Feb 2022 10:12:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/rust-mutex-send/</guid>
      <description>I was recently confused by a compiler error while writing a multi-threaded program in Rust.
Problem In short, I have a structure with an internal Rc value, as follows.
1 2 3  struct A{val: Rc&amp;lt;u32&amp;gt;,}  Obviously, Rc is not thread-safe, so it is protected by a lock and passed between threads with Arc, so the following code is written.
1 2 3 4 5 6 7 8 9 10 11  fn main(){letmutex=Mutex::new(A{val: Rc::new(5)});lettarget=Arc::new(mutex);lett=thread::spawn(move||{target.</description>
    </item>
    
    <item>
      <title>Proxy for accessing host Windows in WSL2</title>
      <link>https://www.sobyte.net/post/2022-02/wsl2-proxy/</link>
      <pubDate>Fri, 18 Feb 2022 10:03:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/wsl2-proxy/</guid>
      <description>Since WSL2 is implemented as a virtual machine, the network is no longer shared with Windows like WSL1, but has become a new network segment, so it is more difficult to use the proxy of the host. Get the host IP in WSL WSL will have a different IP address every time it starts up, so you can&amp;rsquo;t set the proxy in a static way directly. WSL2 will write the</description>
    </item>
    
    <item>
      <title>After reading the average code written by Microsoft engineers, I realized I was still too young</title>
      <link>https://www.sobyte.net/post/2022-02/average-code/</link>
      <pubDate>Fri, 18 Feb 2022 09:44:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/average-code/</guid>
      <description>There&amp;rsquo;s a lot to be said for averaging unsigned integers by rounding? A recent article by Raymond Chen, a Microsoft engineer, has been a direct hit on the technology platform, sparking numerous discussions. Countless people clicked in with unbridled confidence: isn&amp;rsquo;t it just a simple elementary school programming problem of adding and dividing by two? 1 2 3 4 unsigned average(unsigned a, unsigned b) { return (a + b) /</description>
    </item>
    
    <item>
      <title>The History of Version Control with Go: It Started with SVN and Ended with Git</title>
      <link>https://www.sobyte.net/post/2022-02/go-version-contro/</link>
      <pubDate>Fri, 18 Feb 2022 09:29:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-version-contro/</guid>
      <description>Go development team technical leader Russ Cox (rsc) post describes the history of version control for Go. The reason is that every once in a while, someone always uses the following code to indicate that the first commit of Go was in 1972.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  % git log --reverse --stat commit 7d7c6a97f815e9279d08cfaea7d5efb5e90695a8 Author: Brian Kernighan &amp;lt;bwk&amp;gt; AuthorDate: Tue Jul 18 19:05:45 1972 -0500 Commit: Brian Kernighan &amp;lt;bwk&amp;gt; CommitDate: Tue Jul 18 19:05:45 1972 -0500 hello, world R=ken DELTA=7 (7 added, 0 deleted, 0 changed) src/pkg/debug/macho/testdata/hello.</description>
    </item>
    
    <item>
      <title>DNS Introduction</title>
      <link>https://www.sobyte.net/post/2022-02/dns-intro/</link>
      <pubDate>Thu, 17 Feb 2022 10:28:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/dns-intro/</guid>
      <description>We usually use domain names, such as taoshu.in, to access the Internet. But computers need to use IP addresses when they communicate. The core function of DNS is to save the mapping between domain names and IP addresses. Today, we will introduce how DNS works.
In DNS, the core concept is the domain name. A domain name is a way of organizing information hierarchically, somewhat similar to a computer&amp;rsquo;s folders. Take a Windws system for example, the path where user Demo&amp;rsquo;s desktop is located is C:\Users\Demo\Desktop.</description>
    </item>
    
    <item>
      <title>Some of my principles for designing system architecture</title>
      <link>https://www.sobyte.net/post/2022-02/principles-for-designing-system/</link>
      <pubDate>Thu, 17 Feb 2022 10:03:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/principles-for-designing-system/</guid>
      <description>After working for more than 20 years, I have seen many companies&#39; system architecture and many problems in the past 20 years. When I communicate and discuss with these companies, including implementation and program comparison, there are a lot of comparisons and compromises of various programs. Today, I would like to write this article to summarize my personal experience and ideas in the hope that more people can refer to and learn from them, and be able to make a better architecture.</description>
    </item>
    
    <item>
      <title>Go Programming Patterns - Pipeline</title>
      <link>https://www.sobyte.net/post/2022-02/go-pipline/</link>
      <pubDate>Thu, 17 Feb 2022 09:52:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-pipline/</guid>
      <description>Flow line work models are common in industry, dividing the workflow into multiple segments, each with the right number of personnel depending on the intensity of the work. A good assembly line design tries to balance the flow rate of each step to maximize productivity.
Go is a practical language, and the pipeline work model is very well integrated with Go.
pipeline A pipeline consists of multiple links, specifically in Go, where the links communicate with each other via channels and the same link task can be processed by multiple goroutines at the same time.</description>
    </item>
    
    <item>
      <title>Complete mastery of Go math/rand</title>
      <link>https://www.sobyte.net/post/2022-02/go-math-rand/</link>
      <pubDate>Thu, 17 Feb 2022 09:41:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-math-rand/</guid>
      <description>Go Rand is a feature often used in development, but there are some pitfalls in it. This article will completely break down Go math/rand and make it easy for you to use Go Rand. First of all, a question: Do you think rand will panic ? Source Code Analysis The math/rand source code is actually quite simple, with just two important functions. 1 2 3 4 5 6 7 8</description>
    </item>
    
    <item>
      <title>In-depth analysis of the Callable interface</title>
      <link>https://www.sobyte.net/post/2022-02/java-callable/</link>
      <pubDate>Wed, 16 Feb 2022 15:31:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/java-callable/</guid>
      <description>1. Introduction to the Callable interface The Callable interface is a new generic interface added in JDK1.5 and declared as a functional interface in JDK1.8 as follows.
1 2 3 4  @FunctionalInterface public interface Callable&amp;lt;V&amp;gt; { V call() throws Exception; }   In JDK 1.8, an interface with only one method declared is a functional interface. A functional interface can be modified with or without the @FunctionalInterface annotation. As long as an interface contains only one method, then the interface is a functional interface.</description>
    </item>
    
    <item>
      <title>How to use higher-order function programming to improve the simplicity of your code</title>
      <link>https://www.sobyte.net/post/2022-02/go-higher-order-function/</link>
      <pubDate>Wed, 16 Feb 2022 15:12:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-higher-order-function/</guid>
      <description>Functions are first-class citizens of Go language. This article adopts a high-order function approach to abstract the query conditions for querying DB using gorm, abstracting various complex combinations of queries for multiple tables into a unified method and a configuration class, improving the simplicity and elegance of the code, and at the same time can improve the efficiency of developers. Background There is a DB table, and the business needs</description>
    </item>
    
    <item>
      <title>Windows 10 WSL2 Experience</title>
      <link>https://www.sobyte.net/post/2022-02/windows10-wsl/</link>
      <pubDate>Wed, 16 Feb 2022 09:51:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/windows10-wsl/</guid>
      <description>1. Introduction to WSL Wikipedia. Windows Subsystem for Linux (English: Windows Subsystem for Linux, WSL for short) is a compatibility layer for being able to run Linux binary executables (ELF format) natively on Windows 10 and Windows Server 2019. This means that you can execute Linux programs on Windows with the help of WSL. For developers, this makes a lot of sense. High-level language development generally relies on a graphical</description>
    </item>
    
    <item>
      <title>Go1.18 new feature: deprecate strings.Title method</title>
      <link>https://www.sobyte.net/post/2022-02/go-deprecate-strings-title/</link>
      <pubDate>Wed, 16 Feb 2022 09:33:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-deprecate-strings-title/</guid>
      <description>Recently, while reading Go1.18 Release Notes, I found that the Title method of the strings, bytes standard library has been deprecated. Why is this?
Introduction Here is an example of the strings standard library. The strings.Title method does the following: maps all Unicode letters at the beginning of a word to its Unicode title case.
The example is as follows.
1 2 3 4 5 6 7 8 9 10  import ( &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; ) func main() { fmt.</description>
    </item>
    
    <item>
      <title>My opinion about Lisp</title>
      <link>https://www.sobyte.net/post/2022-02/my-opinion-about-lisp/</link>
      <pubDate>Wed, 16 Feb 2022 09:11:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/my-opinion-about-lisp/</guid>
      <description>Lisp is a computer programming language invented by John McCarthy in 1958. The name &amp;ldquo;Lisp&amp;rdquo; is an abbreviation for &amp;ldquo;List Processing&amp;rdquo;, which means table processing&amp;hellip; The above is probably the accepted authoritative introduction, and a lot of information on the Internet probably says so. From this information, we can see that Lisp is a computer programming language similar to C and Java, and it is a different language from the</description>
    </item>
    
    <item>
      <title>Elegant use of #include</title>
      <link>https://www.sobyte.net/post/2022-02/include/</link>
      <pubDate>Tue, 15 Feb 2022 10:38:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/include/</guid>
      <description>#include is not just for referencing header files. Proper use of #include can make the code more elegant.
 Usually we use #include to include header files, as follows.
1  #include &amp;lt;stdio.h&amp;gt;  Understand that the purpose of #include is to copy the specified file to the reference as is during the pre-compilation phase. There is actually some logic that can be handled elegantly using #include.
Referencing code blocks Suppose there is a C file that contains different blocks of code.</description>
    </item>
    
    <item>
      <title>How to get the thread ID correctly?</title>
      <link>https://www.sobyte.net/post/2022-02/thread-id/</link>
      <pubDate>Tue, 15 Feb 2022 10:31:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/thread-id/</guid>
      <description>How to get the correct thread ID, a seemingly simple question with a hidden catch. Since there are two thread models, user and kernel, there are two ways to get the thread ID. First of all, it is important to understand what POSIX is; a long time ago, when there was no Linux Kernel, Unix was the world of Unix, an open source system, and many developers did various customizations</description>
    </item>
    
    <item>
      <title>Android 12 - WMS Hierarchy &amp;&amp; DisplayAreaGroup Introduction</title>
      <link>https://www.sobyte.net/post/2022-02/android-12-wms-hierarchy/</link>
      <pubDate>Tue, 15 Feb 2022 09:54:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/android-12-wms-hierarchy/</guid>
      <description>1. Introduction In Android window management, all windows are organized in a tree data structure, and knowing the tree of WMS helps us understand the management and display of windows. At the same time, the hierarchy of WMS also determines the hierarchy of SurfaceFlinger, which determines its display rules. 2. WMS top-level hierarchy construction In Android 12, all window tree management is based on WindowContainer, each WindowContainer has a parent</description>
    </item>
    
    <item>
      <title>Android 12 - Letterbox mode</title>
      <link>https://www.sobyte.net/post/2022-02/android-12-letterbox/</link>
      <pubDate>Tue, 15 Feb 2022 09:42:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/android-12-letterbox/</guid>
      <description>1. Introduction As more and more large and folding screen devices appear, many applications do not have UI adaptations for devices of different sizes, when the application chooses to display in a specific aspect ratio (although Google does not recommend this, the official hope that developers can adapt the layout of different screen sizes ~), when the application&amp;rsquo;s aspect ratio and its container ratio is not compatible, it will be</description>
    </item>
    
    <item>
      <title>Android list scrolling optimization of OverScroller revealed</title>
      <link>https://www.sobyte.net/post/2022-02/android-over-scroller/</link>
      <pubDate>Tue, 15 Feb 2022 09:12:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/android-over-scroller/</guid>
      <description>1. Introduction OverScroller in Android is responsible for calculating the real-time sliding position for ListView, RecyclerView, ScrollView and other scrolling controls, and these position algorithms directly affect the experience of each scroll. As we all know, Android&amp;rsquo;s animation experience is ~far~ inferior to iOS, and even now that Android generally supports 120Hz high swipe, the experience is not very comfortable. The reason for this is no longer hardware performance limitations,</description>
    </item>
    
    <item>
      <title>Netty startup process analysis</title>
      <link>https://www.sobyte.net/post/2022-02/netty-startup-process/</link>
      <pubDate>Mon, 14 Feb 2022 11:10:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/netty-startup-process/</guid>
      <description>Typical Netty server side startup code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 public class MyServer { public static void main(String[] args) throws Exception{ EventLoopGroup bossGroup = new NioEventLoopGroup(1); EventLoopGroup workerGroup = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap();</description>
    </item>
    
    <item>
      <title>How to properly open Linux gui programs in SSH terminal</title>
      <link>https://www.sobyte.net/post/2022-02/how-ssh-terminal-open-linux-gui-program/</link>
      <pubDate>Mon, 14 Feb 2022 10:53:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-ssh-terminal-open-linux-gui-program/</guid>
      <description>Windows systems use mostly GUI programs, with a few command line programs (such as netstat). Linux, on the other hand, uses mostly command-line programs, but also has gui programs (such as jvisualvm). But sometimes opening a gui program in Linux will report an error, and sometimes there is no problem. This article explores what the X Window System is and how to properly open Linux gui programs in ssh terminal.</description>
    </item>
    
    <item>
      <title>Go1.18 New feature: TryLock that has been tossed many times</title>
      <link>https://www.sobyte.net/post/2022-02/go-try-lock/</link>
      <pubDate>Mon, 14 Feb 2022 10:31:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-try-lock/</guid>
      <description>Proposing new features definitely involves user scenarios. When the time comes to 2018, @deanveloper mentions a classic loading scenario: several very large files need to be loaded and I want a progress bar to show how close I am to completion.
He considered that this progress bar could be well implemented using TryLock, and the following is his sample code:
1 2 3 4 5 6 7 8 9 10 11 12 13  func (b *ProgressBar) Add(n int) { atomic.</description>
    </item>
    
    <item>
      <title>Raft protocol implementation details from JRaft</title>
      <link>https://www.sobyte.net/post/2022-02/jraft-raft/</link>
      <pubDate>Sun, 13 Feb 2022 11:55:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/jraft-raft/</guid>
      <description>Distributed Systems and the Consistency Problem The consistency problem is a core problem that needs to be solved in distributed systems. Distributed systems are generally composed of multiple nodes of equal status, and the interaction between the nodes is like several people getting together to discuss a problem. Let&amp;rsquo;s imagine a more specific scenario, such as three people discussing where to eat at noon, the first person said that a hot pot restaurant has just opened nearby, and I heard that the taste is very good; but the second person said, no, it takes too long to eat hot pot, or just drink some porridge; and the third person said, I just went to that porridge restaurant yesterday, it&amp;rsquo;s too bad, it&amp;rsquo;s better to go to McDonalds.</description>
    </item>
    
    <item>
      <title>Linux file system and file caching knowledge collation</title>
      <link>https://www.sobyte.net/post/2022-02/linux-file-system-and-file-caching/</link>
      <pubDate>Sun, 13 Feb 2022 11:45:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-file-system-and-file-caching/</guid>
      <description>File system of Linux Characteristics of the file system  The file system has to be strictly organized so that files can be stored in blocks. The file system should also have indexed areas to make it easy to find out where the multiple blocks of a file are stored. the file system should have a cache layer if there are files that are hot files and have been read and written to frequently in the recent past.</description>
    </item>
    
    <item>
      <title>Kubernetes Scheduling Framework and Extender Comparison and Details</title>
      <link>https://www.sobyte.net/post/2022-02/kubernetes-scheduling-framework-and-extender/</link>
      <pubDate>Sun, 13 Feb 2022 11:19:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/kubernetes-scheduling-framework-and-extender/</guid>
      <description>Kubernetes started out by providing only Extender. The Extender scheduler plugin, which enables non-intrusive extensions by deploying a web service, has several problems.
 The number of Extender extensions is limited: only &amp;ldquo;Filter&amp;rdquo; and &amp;ldquo;Prioritize&amp;rdquo; extensions are available during scheduling. The &amp;ldquo;Preempt&amp;rdquo; extension is called after running the default preemption mechanism. &amp;ldquo;Extender cannot be called at other points, e.g. not before running the predicate function. Performance issues: Each call to an extender involves JSON coding and decoding.</description>
    </item>
    
    <item>
      <title>Does the original TCP connection still exist after disconnecting the network cable?</title>
      <link>https://www.sobyte.net/post/2022-02/tcp-connection/</link>
      <pubDate>Sun, 13 Feb 2022 11:08:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/tcp-connection/</guid>
      <description>Today, let&amp;rsquo;s talk about an interesting question: Unplug the cable for a few seconds, then plug it back in, does the original TCP connection still exist?
Some people may say that if the cable is unplugged, it means the physical layer is disconnected, so the upper transport layer should also be disconnected, so the original TCP connection will not exist. Just like when we make a wired phone call, if one party&amp;rsquo;s phone line is unplugged, the call is completely disconnected.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; implementation for friendly handling of Json data</title>
      <link>https://www.sobyte.net/post/2022-02/cpp-json/</link>
      <pubDate>Sat, 12 Feb 2022 11:20:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/cpp-json/</guid>
      <description>Background C/C++ client needs to receive and send JSON format data to the backend to achieve communication and data interaction, but there is no ready-made interface for handling JSON format data in C++, so we can&amp;rsquo;t avoid splitting and splicing by directly referring to third-party libraries. Considering that there will be a lot of JSON data to be processed in this project, we can&amp;rsquo;t avoid the repetitive splitting and splicing.</description>
    </item>
    
    <item>
      <title>Buffer mapping mechanism in WebGPU</title>
      <link>https://www.sobyte.net/post/2022-02/webgpu-buffer-mapping/</link>
      <pubDate>Sat, 12 Feb 2022 11:14:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/webgpu-buffer-mapping/</guid>
      <description>1. What is buffer mapping Without giving a definition, simply put, after mapping (Mapping) a certain piece of video memory, it can be accessed by the CPU. After the Buffer (meaning video memory) of the three graphics APIs (D3D12, Vulkan, Metal) is mapped, the CPU will be able to access it, and at this point, note that the GPU can still access this piece of video memory. This leads to</description>
    </item>
    
    <item>
      <title>Implementing a thread pool using Rust</title>
      <link>https://www.sobyte.net/post/2022-02/rust-thread-pool/</link>
      <pubDate>Sat, 12 Feb 2022 11:06:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/rust-thread-pool/</guid>
      <description>How to implement a thread pool Thread pooling: a thread usage pattern. Too many threads introduce scheduling overhead, which in turn affects cache locality and overall performance. Instead, a thread pool maintains multiple threads waiting for a supervising manager to assign tasks that can be executed concurrently. This avoids the cost of creating and destroying threads while processing short time tasks. Thread pools not only ensure full utilization of the</description>
    </item>
    
    <item>
      <title>Linux Thread Local Storage</title>
      <link>https://www.sobyte.net/post/2022-02/linux-thread-local-storage/</link>
      <pubDate>Fri, 11 Feb 2022 10:55:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-thread-local-storage/</guid>
      <description>In C/C++ programs, global variables are shared by all threads by default, and developers need to deal with multi-threaded competition. There are cases where we need to make sure that one thread has an exclusive share of the data and that other threads cannot access it. A typical case is the errno global variable, which always stores the error code of the last call of the current thread, without thread</description>
    </item>
    
    <item>
      <title>How Java beans abstract and simplify</title>
      <link>https://www.sobyte.net/post/2022-02/simple-java-bean/</link>
      <pubDate>Fri, 11 Feb 2022 10:09:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/simple-java-bean/</guid>
      <description>Today in the packaging of third-party applications open interface, write a lot of return value class, many of these classes are similar in structure only individual field names are not the same. In order to separate the fields to copy a change is not to win, and the name is the most headache. Like the following two.
1 2 3 4 5 6 7 8 9 10 11  @EqualsAndHashCode(callSuper = true) @Data public class SimpleUserResponse extends WeComResponse { private List&amp;lt;SimpleUser&amp;gt; userlist; } @EqualsAndHashCode(callSuper = true) @Data public class UserDetailResponse extends WeComResponse { private List&amp;lt;UserDetail&amp;gt; userlist; }   Is it similar?</description>
    </item>
    
    <item>
      <title>Functional programming class library vavr</title>
      <link>https://www.sobyte.net/post/2022-02/java-vavr/</link>
      <pubDate>Fri, 11 Feb 2022 09:53:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/java-vavr/</guid>
      <description>Whenever a new version of the JDK is released, some people say &amp;ldquo;I won&amp;rsquo;t upgrade, I&amp;rsquo;ll keep using Java 8&amp;rdquo;, but many people at work are still not very good at using the new features of Java8, and these features often make Java less &amp;ldquo;bloated&amp;rdquo;. However, I personally think that the most representative of all the new features of Java8 must be functional programming. Some may say that this style</description>
    </item>
    
    <item>
      <title>Database synchronization tool Debezium</title>
      <link>https://www.sobyte.net/post/2022-02/debezium/</link>
      <pubDate>Fri, 11 Feb 2022 09:42:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/debezium/</guid>
      <description>The data in our database is always changing, and sometimes we want to listen to the changes in the database data and react according to the changes, such as updating the cache corresponding to the changed data, incrementally synchronizing to other data sources, detecting and auditing the data, and so on. And this technology is called Change Data Capture. For this technology we may know a well-known domestic framework Canal</description>
    </item>
    
    <item>
      <title>How to set up an Nginx server on Debian 10</title>
      <link>https://www.sobyte.net/post/2022-02/nginx-debian-10/</link>
      <pubDate>Thu, 10 Feb 2022 10:49:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nginx-debian-10/</guid>
      <description>server is an Nginx directive that defines domain-specific settings so that you can run multiple websites on a single server. For each site, you can set up the site document root (the directory containing the site files), create separate security policies, use different SSL certificates, and more.
This tutorial describes how to set up an Nginx server on Debian 10.
Prerequisites Make sure you meet the following prerequisites.
 A domain name pointing to your public server IP.</description>
    </item>
    
    <item>
      <title>The &#34;perfect&#34; solution to IPv6 and Gigabit bottlenecks with &#34;dual network cable&#34; bypass routing</title>
      <link>https://www.sobyte.net/post/2022-02/routeros-openwrt-transparent-router-dual-line-with-ipv6/</link>
      <pubDate>Thu, 10 Feb 2022 10:05:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/routeros-openwrt-transparent-router-dual-line-with-ipv6/</guid>
      <description>Bypass routing is a homelab common requirement, the main route with hard routing to ensure stability, such as using Mikrotik&amp;rsquo;s RouterOS router as the main route, bypass routing using OpenWrt as a soft route to achieve advanced features such as ad filtering and tunneling, these functions are often not hardware accelerated and need to consume a lot of CPU to complete, x86 high performance soft routing is a very suitable choice.</description>
    </item>
    
    <item>
      <title>Debugging Linux kernels with Qemu and GDB</title>
      <link>https://www.sobyte.net/post/2022-02/debug-linux-kernel-with-qemu-and-gdb/</link>
      <pubDate>Thu, 10 Feb 2022 09:46:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/debug-linux-kernel-with-qemu-and-gdb/</guid>
      <description>Using Qemu to debug the Linux kernel is a convenient way, so I recently did some practice and documented the general steps and some of the pitfalls. Environment Since I am at home on a long vacation, I only have a MBP with MacOS available, and it is easier to develop and debug Linux kernel in a Linux environment, so I created a virtual machine with Ubuntu 18.04 installed using</description>
    </item>
    
    <item>
      <title>Case sharing of JMH and Arthas positioning issues</title>
      <link>https://www.sobyte.net/post/2022-02/jmh-and-arthas/</link>
      <pubDate>Thu, 10 Feb 2022 09:21:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/jmh-and-arthas/</guid>
      <description>I would like to summarize what I&amp;rsquo;ve been using in my recent work, the testing tool JMH and the Java runtime monitoring tool Arthas, which have helped me in my actual work. So here&amp;rsquo;s how to use these tools. I also want to deepen my familiarity with these tools. For these two tools, I will first briefly introduce the general usage scenarios of these tools, and then I will use</description>
    </item>
    
    <item>
      <title>Communicating with C&#43;&#43; code in NodeJS</title>
      <link>https://www.sobyte.net/post/2022-02/communicate-with-cpp-code-in-node/</link>
      <pubDate>Wed, 09 Feb 2022 13:17:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/communicate-with-cpp-code-in-node/</guid>
      <description>I recently encountered a problem in my project where I needed to call C++ code in NodeJS, so here&amp;rsquo;s a quick summary.
The main options In NodeJS, there are two main options for communicating with code written in other languages.
 Using the AddOn technique, write an extension to NodeJS using C++ and then call the source code or dynamic libraries written in other languages in the code using the FFI (Foreign Function Interface) technique, which brings in dynamic libraries written in other languages directly in Node  A comparison of these two approaches shows that each has its own advantages and disadvantages.</description>
    </item>
    
    <item>
      <title>The underlying implementation of pointers and references in C&#43;&#43;</title>
      <link>https://www.sobyte.net/post/2022-02/cpp-pointers-references/</link>
      <pubDate>Wed, 09 Feb 2022 13:09:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/cpp-pointers-references/</guid>
      <description>References are an important feature introduced in C++ as opposed to C. They make the syntax much more concise in many places, but how are they actually implemented underneath? In Wikipedia, pointers are described as follows. In computer science, a pointer is a programming language object that stores the memory address of another value located in computer memory. A pointer references a location in memory, and obtaining the value stored</description>
    </item>
    
    <item>
      <title>Vue3 - Responsive Principle Explained</title>
      <link>https://www.sobyte.net/post/2022-02/vue3-responsive/</link>
      <pubDate>Wed, 09 Feb 2022 11:23:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/vue3-responsive/</guid>
      <description>Vue3.0 pre-alpha version was officially released on October 5, 2019, followed by more than 500 PRs and 1000 commits over the next few months, and finally Vue3.0 alpha.1 was released on January 4, 2020. the core code of Vue3.0 is basically complete, and the main work left so far is server-side rendering, which the Vue team is actively working on. The Vue team is also actively working on it. The</description>
    </item>
    
    <item>
      <title>Tips for using Bash History</title>
      <link>https://www.sobyte.net/post/2022-02/bash-history-tricks/</link>
      <pubDate>Tue, 08 Feb 2022 10:39:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/bash-history-tricks/</guid>
      <description>Bash is a common shell environment and most Linux distributions also come with Bash, so using history efficiently can save the time of manually typing repetitive commands. In this article, I share a few tips and configurations that I use myself.
Search This technique should be more or less known to everyone, that is, press Ctrl-R in the input screen to search, the returned result is the latest matching command, and then press enter to execute.</description>
    </item>
    
    <item>
      <title>Where did goexit come from?</title>
      <link>https://www.sobyte.net/post/2022-02/where-is-goexit-from/</link>
      <pubDate>Tue, 08 Feb 2022 10:08:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/where-is-goexit-from/</guid>
      <description>A colleague saw the puzzling goexit when debugging with dlv: what is the goexit function and why is it on top of go fun(){}()? It looks like an &amp;ldquo;exit&amp;rdquo; function, so why is it at the top?
In fact, if you have seen the pprof flame chart, you will often see the goexit function.
Let&amp;rsquo;s reproduce it with an example.
1 2 3 4 5 6 7 8 9 10 11  package main import &amp;#34;time&amp;#34; func main() { go func () { println(&amp;#34;hello world&amp;#34;) }() time.</description>
    </item>
    
    <item>
      <title>Getting Started with OpenTelemetry</title>
      <link>https://www.sobyte.net/post/2022-02/intro-opentelemetry/</link>
      <pubDate>Mon, 07 Feb 2022 13:19:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/intro-opentelemetry/</guid>
      <description>Previously, OpenTelemetry officially entered the Beta phase, which marked the formalization of the basic OpenTelemetry model to begin integrating OpenTelemetry into applications and client libraries to capture application-level metrics and distributed traces. Introduction to OpenTelemetry This section focuses on what OpenTelemetry is, or you can skip this section if you already know it. Observability is one of the very important metrics for software. the OpenTelemetry project provides a set of</description>
    </item>
    
    <item>
      <title>Comparison of NATS-Server (JetStream) and NATS Streaming Server</title>
      <link>https://www.sobyte.net/post/2022-02/nats-server-usage/</link>
      <pubDate>Mon, 07 Feb 2022 13:03:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nats-server-usage/</guid>
      <description>After I have complained countless times, NATS JetStream has finally ended its beta phase and entered the RC phase. Finally, I&amp;rsquo;ve just gotten an official reply that the official version will be released after a few issues are addressed. So on the occasion of this important NATS-Server feature release, let&amp;rsquo;s talk about the differences between the NATS product itself and the use of the new features, as well as more</description>
    </item>
    
    <item>
      <title>Running dapr in a non-container (cluster) environment</title>
      <link>https://www.sobyte.net/post/2022-02/running-dapr-without-container/</link>
      <pubDate>Mon, 07 Feb 2022 12:50:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/running-dapr-without-container/</guid>
      <description>dapr, which I have been following for some time, has been officially released in v1.0 (in fact, v1.0.1 was updated when this article was published), which means that dapr has entered a stable state to some extent and can be tried in practice. As a project I&amp;rsquo;ve been following, I tried it out in the first place and tried to introduce it into a real project, and this article is</description>
    </item>
    
    <item>
      <title>Raspberry Pi Clash Transparent Proxy (TProxy) </title>
      <link>https://www.sobyte.net/post/2022-02/clash-tproxy/</link>
      <pubDate>Mon, 07 Feb 2022 09:27:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/clash-tproxy/</guid>
      <description>I. Notes In this article, the intranet CIDR is 192.168.0.0/16, that is, all address segment rules and configurations are processed for the current intranet CIDR; clash fake-ip&amp;rsquo;s CIDR is 198.18.0.0/16, please do not write it wrongly as 192, it is 198. II. Installing Clash The transparent proxy method used in this article does not depend on TUN, so it does not matter if it is an enhanced version, please try</description>
    </item>
    
    <item>
      <title>Four Ways to Implement Timed Tasks in PostgreSQL</title>
      <link>https://www.sobyte.net/post/2022-02/postgresql-time-task/</link>
      <pubDate>Mon, 07 Feb 2022 09:10:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/postgresql-time-task/</guid>
      <description>Database timed tasks can be used to implement regular backups, statistics collection, data aggregation, data cleaning and optimization, etc. PostgreSQL does not provide built-in task scheduling features similar to Oracle, MySQL and Microsoft SQL Sever, so this article introduces you to 4 ways to implement timed tasks in PostgreSQL database. OS Timed Tasks Linux timed tasks (crontab) or Windows Task Scheduler provides us with a traditional way to implement timed</description>
    </item>
    
    <item>
      <title>Common Distributed Protocols and Lgorithms</title>
      <link>https://www.sobyte.net/post/2022-01/common-distributed-protocols-and-lgorithms/</link>
      <pubDate>Mon, 31 Jan 2022 13:26:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/common-distributed-protocols-and-lgorithms/</guid>
      <description>I will mainly list here the Consistent Hash algorithm, Gossip protocol, QuorumNWR algorithm, PBFT algorithm, PoW algorithm, ZAB protocol, and Paxos will be spoken separately. Consistent Hash Algorithm The Consistent Hash algorithm is designed to solve the migration cost of the Hash algorithm. Taking a 10-node cluster as an example, if you add nodes to the cluster, you need to migrate up to 90.91% of the data if you use</description>
    </item>
    
    <item>
      <title>Deploy a Kubernetes cluster</title>
      <link>https://www.sobyte.net/post/2022-01/kubernetes-deployemnt-using-kubeadm/</link>
      <pubDate>Sat, 29 Jan 2022 17:21:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kubernetes-deployemnt-using-kubeadm/</guid>
      <description>Native Kubernetes Cluster Installation Tool Kubernetes clusters on the cloud, basically all cloud vendors support one-click deployment. The main focus here is on local deployment, or baremetal deployment. The approach presented in this article is suitable for development testing, and there may still be issues with security, stability, long-term availability, and other solutions. kubernetes is a component-based system with a lot of flexibility in the installation process, and many components</description>
    </item>
    
    <item>
      <title>Kubernetes Microservices Best Practices</title>
      <link>https://www.sobyte.net/post/2022-01/kubernetes-best-practices/</link>
      <pubDate>Sat, 29 Jan 2022 16:56:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kubernetes-best-practices/</guid>
      <description>This article introduces a set of &amp;ldquo;Kubernetes configuration&amp;rdquo; that I have summarized as my personal &amp;ldquo;best practices&amp;rdquo; in the process of using Kubernetes. Most of the content has been tested in an online environment, but there are a few parts that have only been simulated in my head, so please refer to them with caution. A few notes before reading. This document is quite long and includes a lot of</description>
    </item>
    
    <item>
      <title>Understanding of non-addressability in Golang</title>
      <link>https://www.sobyte.net/post/2022-01/not-addressable-in-golang/</link>
      <pubDate>Sat, 29 Jan 2022 16:48:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/not-addressable-in-golang/</guid>
      <description>If you haven&amp;rsquo;t heard of Golang&amp;rsquo;s not addressable concept, it doesn&amp;rsquo;t matter, it literally means that you can&amp;rsquo;t get the address of a value. Let&amp;rsquo;s start with a simple example.
1 2 3 4 5 6 7 8  package main import &amp;#34;fmt&amp;#34; func main() { m := map[int]string{0: &amp;#34;hello&amp;#34;} fmt.Printf(&amp;#34;%p&amp;#34;, &amp;amp;m[0]) }   m is of type map[int]string and contains only one key-value pair. Printing the address of the value of this key-value pair directly compiles with the error: cannot take the address of m[0] , and cannot get the address of the value in map.</description>
    </item>
    
    <item>
      <title>pyroscope: an easy-to-use platform for continuous profiling</title>
      <link>https://www.sobyte.net/post/2022-01/pyroscope-a-continuous-profiling-platform/</link>
      <pubDate>Sat, 29 Jan 2022 16:16:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/pyroscope-a-continuous-profiling-platform/</guid>
      <description>Developers often need to track performance bottlenecks in applications in production environments and try to identify the root cause of the bottlenecks. To do this, they typically gather this information through logs. Unfortunately, this approach can be time-consuming and does not provide sufficiently detailed information about the underlying problem.
A modern and more advanced approach is to apply and use profiling techniques and tools that highlight the slowest application code and methods that consume most of the resources (such as CPU and memory).</description>
    </item>
    
    <item>
      <title>&#34;I Deleted Linux&#34;, Linus Releases Prank README Using GitHub Vulnerability</title>
      <link>https://www.sobyte.net/post/2022-01/linus-play-a-trick-of-github-vulnerability/</link>
      <pubDate>Thu, 27 Jan 2022 19:02:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linus-play-a-trick-of-github-vulnerability/</guid>
      <description>On January 25, Linus Torvalds submitted a prank README page to the Linux GitHub repository with a note called &amp;ldquo;delete linux because it sucks&amp;rdquo;.
 hey guys its me linus torvalds, author of the smash hit linux. yes its me you can look at the url of the repo and the thingy at the top of the files it proves its 100% me.
i deleted linux because i hate it now i think it sucks.</description>
    </item>
    
    <item>
      <title>Rebuild the ISO image using overlay2 or bind</title>
      <link>https://www.sobyte.net/post/2022-01/rebuild-iso-image/</link>
      <pubDate>Wed, 26 Jan 2022 13:02:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/rebuild-iso-image/</guid>
      <description>I was in charge of the PaaS container cloud platform for private deployment related work, so I often deal with some container images, and have some research on container images, and have written many blog articles before. Since I got a new job, I started to be responsible for &amp;ldquo;hyper-converged products&amp;rdquo; cluster deployment related work, so I will also come into contact with a lot of mirrors, but this mirror</description>
    </item>
    
    <item>
      <title>Detailed analysis of the source code of Go sync.Mutex</title>
      <link>https://www.sobyte.net/post/2022-01/go-mutex/</link>
      <pubDate>Wed, 26 Jan 2022 10:44:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-mutex/</guid>
      <description>Introduction to Mutex The Mutex structure contains two fields. Field state: indicates the current state of the mutex lock. Field sema: is a semaphore variable to control blocking hibernation and wake-up of waiting goroutines. 1 2 3 4 type Mutex struct { state int32 sema uint32 } In version 1.9 of Go, in order to solve the waiting goroutine may have been unable to obtain the lock, the hunger mode</description>
    </item>
    
    <item>
      <title>Detailed analysis of the source code of Go sync.Pool</title>
      <link>https://www.sobyte.net/post/2022-01/go-sync-pool/</link>
      <pubDate>Wed, 26 Jan 2022 10:21:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-sync-pool/</guid>
      <description>Introduction to Pool Go is known to be an automatic garbage collection programming language that uses a three-color concurrent tagging algorithm to tag objects and recycle them. If you want to develop a high-performance application using Go, you have to consider the performance impact of garbage collection. Because Go has a STW (stop-the-world) time during garbage collection, and it takes time to mark objects if there are too many. So</description>
    </item>
    
    <item>
      <title>Detailed analysis of the Channel source code in Go</title>
      <link>https://www.sobyte.net/post/2022-01/go-channel-source-code/</link>
      <pubDate>Tue, 25 Jan 2022 14:25:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-channel-source-code/</guid>
      <description>chan introduction 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import &amp;#34;fmt&amp;#34; func main() { c := make(chan int) go func() { c &amp;lt;- 1 // send to channel }() x := &amp;lt;-c // recv from channel fmt.Println(x) } We can view the assembly results like this. 1 2 3 4 go tool compile -N -l -S hello.go -N表示</description>
    </item>
    
    <item>
      <title>Thinking about memory alignment by WaitGroup in Go</title>
      <link>https://www.sobyte.net/post/2022-01/go-waitgroup-memory-alignment/</link>
      <pubDate>Tue, 25 Jan 2022 14:09:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-waitgroup-memory-alignment/</guid>
      <description>We all know how to use WaitGroup, but we also need to know how it is implemented, so that we can avoid the panic caused by incorrect use in the project as much as possible, and this article will also write about the memory alignment aspect to do a resolution, I hope you like it. WaitGroup Introduction WaitGroup provides three methods. 1 2 3 func (wg *WaitGroup) Add(delta int) func</description>
    </item>
    
    <item>
      <title>Explaining the Golang memory allocation implementation from source code</title>
      <link>https://www.sobyte.net/post/2022-01/go-memory-allocation/</link>
      <pubDate>Tue, 25 Jan 2022 10:52:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-memory-allocation/</guid>
      <description>Introduction The Go language&amp;rsquo;s memory allocator takes its cue from TCMalloc&amp;rsquo;s design for high-speed memory allocation. The core idea is to use a multi-level cache to sort objects by size and implement different allocation strategies by class. Information about TCMalloc can be found here: http://goog-perftools.sourceforge.net/doc/tcmalloc.html. If the object to be allocated is a small object (&amp;lt;= 32k), there is a lock-free cache of small objects in each thread that can</description>
    </item>
    
    <item>
      <title>Explaining the Golang I/O multiplexing netpoller model</title>
      <link>https://www.sobyte.net/post/2022-01/go-netpoller/</link>
      <pubDate>Tue, 25 Jan 2022 10:26:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-netpoller/</guid>
      <description>The Go source code directory structure and corresponding code files provide an insight into Go&amp;rsquo;s implementation of network I/O modes on different platforms. For example, it is based on epoll on Linux, kqueue on freeBSD, and iocp on Windows. Since our code is deployed on Linux, this article uses the epoll wrapper implementation as an example to explain the source code implementation of I/O multiplexing in Go. Introduction I/O multiplexing</description>
    </item>
    
    <item>
      <title>Implementation of the time wheel in the Golang</title>
      <link>https://www.sobyte.net/post/2022-01/go-timingwheel/</link>
      <pubDate>Mon, 24 Jan 2022 15:10:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-timingwheel/</guid>
      <description>Recently I had a requirement at work, which simply means that millions of timer tasks will be created in a short period of time, and the corresponding amounts will be added up when they are created to prevent overselling, and the data will need to be checked again after half an hour, and if the data does not match, the added amount will need to be subtracted back. This is</description>
    </item>
    
    <item>
      <title>Explaining the Golang dispatch loop source code implementation</title>
      <link>https://www.sobyte.net/post/2022-01/go-dispatch-loop/</link>
      <pubDate>Mon, 24 Jan 2022 14:39:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-dispatch-loop/</guid>
      <description>Overview When we think of &amp;ldquo;scheduling&amp;rdquo;, the first thing that comes to mind is the scheduling of processes and threads by the operating system. The operating system scheduler schedules multiple threads on the system to run on the physical CPU according to a certain algorithm. Although threads are relatively lightweight, they do have a large additional overhead when scheduling. Each thread takes up more than 1M of memory space, and</description>
    </item>
    
    <item>
      <title>Golang implementation of cuckoo filters</title>
      <link>https://www.sobyte.net/post/2022-01/go-cuckoo-filter/</link>
      <pubDate>Mon, 24 Jan 2022 11:56:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-cuckoo-filter/</guid>
      <description>Introduction In our work, if we encounter such things as web URL de-duplication, spam identification, or the determination of duplicate elements in a large collection, we usually think of saving all the elements in the collection and then determining them by comparison. If we use the best performance Hash table to make the determination, then as the number of elements in the collection increases, the storage space we need will</description>
    </item>
    
    <item>
      <title>The principle of timer implementation in Go and source code analysis</title>
      <link>https://www.sobyte.net/post/2022-01/go-timer-analysis/</link>
      <pubDate>Mon, 24 Jan 2022 11:41:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-timer-analysis/</guid>
      <description>Introduction Version 1.13 timers Go uses 64 minimal heaps until version 1.14. All timers created at runtime are added to the minimal heap, and timers created by each processor (P) are maintained by the corresponding minimal heap. The following is the source code for version 1.13 of runtime.time. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    
    <item>
      <title>Go language GC implementation principle and source code analysis</title>
      <link>https://www.sobyte.net/post/2022-01/go-gc/</link>
      <pubDate>Sun, 23 Jan 2022 16:02:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-gc/</guid>
      <description>20,000 words long article takes you from the source code to dissect the Go language GC implementation. Introduction Three-color marking method The three-color marking method divides the color of the object into three colors: black, gray, and white. Black: the object has been marked and all the properties under the object have been marked (the object required by the program). gray: the object has been marked, but the properties under</description>
    </item>
    
    <item>
      <title>Signal-based preemptive scheduling in Go dissected from source code</title>
      <link>https://www.sobyte.net/post/2022-01/go-scheduling/</link>
      <pubDate>Sun, 23 Jan 2022 12:15:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-scheduling/</guid>
      <description>Introduction Prior to 1.14 of Go, preemptive scheduling was collaborative and required self-initiated ceding of execution, but this could not handle edge cases that could not be preempted. Some of these problems were not solved until 1.14 by signal-based preemptive scheduling, such as for loops or garbage collection of long-running threads. Here is an example to verify the difference in preemption between 1.14 and 1.13. 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>What can we learn from TiDB?</title>
      <link>https://www.sobyte.net/post/2022-01/tidb/</link>
      <pubDate>Sun, 23 Jan 2022 11:34:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/tidb/</guid>
      <description>What is TiDB TiDB is an open source distributed relational database designed and developed by PingCAP, which is a converged distributed database product that supports both Online Transaction Processing and Online Analytical Processing (HTAP).
Five core features   One-click horizontal scaling or shrinking: On-demand online scaling or shrinking of compute and storage respectively, transparent to application operators and maintenance personnel during scaling or shrinking.
  Financial High Availability: Data replicas are synchronized with transaction logs via Multi-Raft protocol, and only commits when most transactions are written successfully, ensuring strong data consistency and not affecting data availability when a few replicas fail.</description>
    </item>
    
    <item>
      <title>How to compile and debug Go runtime source code</title>
      <link>https://www.sobyte.net/post/2022-01/go-runtime/</link>
      <pubDate>Sat, 22 Jan 2022 17:06:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-runtime/</guid>
      <description>Compile and modify Golang source code for debugging First download and compile I&amp;rsquo;m using a centos environment, so I need to install yum -y install gcc first. Then download the go source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 [root@localhost src]# git clone https://github.com/golang/go.git #进入到src 目录执</description>
    </item>
    
    <item>
      <title>An article to help you understand stack operations in Go</title>
      <link>https://www.sobyte.net/post/2022-01/go-stack/</link>
      <pubDate>Sat, 22 Jan 2022 16:39:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-stack/</guid>
      <description>This article will teach you how to understand Go&amp;rsquo;s plan9 assembly through stack operations. Knowledge points Linux process in memory layout Each process in a multitasking operating system runs in its own memory sandbox. In 32-bit mode, it is always 4GB of memory address space, and memory allocation is to allocate virtual memory to processes. When a process actually accesses a virtual memory address, the OS allocates a corresponding space</description>
    </item>
    
    <item>
      <title>Understanding Go function calls from the stack</title>
      <link>https://www.sobyte.net/post/2022-01/go-func-call/</link>
      <pubDate>Sat, 22 Jan 2022 13:38:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-func-call/</guid>
      <description>This time together, we will understand common function calls, struct method calls, and closure calls in depth assembly from the stack perspective. Preamble Function call types Functions in this article refer to any executable block of code in Go. As mentioned in Go 1.1 Function Calls, there are four types of functions in Go. top-level func method with value receiver method with pointer receiver func literal top-level func is what</description>
    </item>
    
    <item>
      <title>In-depth implementation of the Go language defer principle</title>
      <link>https://www.sobyte.net/post/2022-01/go-defer-principle/</link>
      <pubDate>Sat, 22 Jan 2022 13:15:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-defer-principle/</guid>
      <description>This article explains the rules for executing defer and introduces the defer type. It explains how defer function calls are done, mainly through heap allocation. Introduction defer execution rules The order of execution of multiple defers is &amp;ldquo;Last In First Out LIFO &amp;quot; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import ( &amp;#34;fmt&amp;#34; ) func main() { name := &amp;#34;Naveen&amp;#34; fmt.Printf(&amp;#34;Original</description>
    </item>
    
    <item>
      <title>Go language implementation of Snowflake algorithm</title>
      <link>https://www.sobyte.net/post/2022-01/go-snowflakeid/</link>
      <pubDate>Sat, 22 Jan 2022 13:06:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-snowflakeid/</guid>
      <description>Introduction Sometimes in business, it is necessary to use some unique ID to record the identification of one of our data. The most common ones are none other than the following: UUID, database self-incrementing primary key, Redis&#39; Incr command, and other methods to get a unique value. Below we talk about the advantages and disadvantages of each of them in order to introduce our distributed snowflake algorithm. UUID First is</description>
    </item>
    
    <item>
      <title>How to build a high-performance Go caching library</title>
      <link>https://www.sobyte.net/post/2022-01/high-performance-go-caching-library/</link>
      <pubDate>Sat, 22 Jan 2022 12:01:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/high-performance-go-caching-library/</guid>
      <description>I was looking at some excellent open source libraries when I saw an interesting cache library fastcache, in its introduction mainly has the following characteristics: read and write data to be fast, even under concurrency. maintain good performance even in a cache of several gigabytes, as well as minimize the number of GCs. the design should be as simple as possible. This article will examine how its kernel achieves such</description>
    </item>
    
    <item>
      <title>A deep dive into each of the high-performance JSON parsing libraries in Go</title>
      <link>https://www.sobyte.net/post/2022-01/go-json/</link>
      <pubDate>Sat, 22 Jan 2022 11:41:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-json/</guid>
      <description>In fact, I had no intention of looking at the performance of JSON libraries, but I recently did a pprof on my project and found from the flame chart below that more than half of the performance consumption in business logic processing is in the JSON parsing process, so this article came about. This article dives into the source code to analyze how the standard library in Go parses JSON,</description>
    </item>
    
    <item>
      <title>Design and implementation of zap, a high-performance Go logging library</title>
      <link>https://www.sobyte.net/post/2022-01/go-log-zap/</link>
      <pubDate>Sat, 22 Jan 2022 11:25:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-log-zap/</guid>
      <description>Recently I&amp;rsquo;ve been learning how to make code run more efficiently in development, and while browsing through various good logging designs, I came across a logging library called zap from uber that caught my attention, with its main feature of extreme performance and memory allocation optimizations. For me, I was originally using logrus as log output in my project, but when I saw the benchmark of zap, I felt that</description>
    </item>
    
    <item>
      <title>5 CSS mistakes to avoid</title>
      <link>https://www.sobyte.net/post/2022-01/css-mistakes/</link>
      <pubDate>Sat, 22 Jan 2022 11:02:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/css-mistakes/</guid>
      <description>As we know today, the CSS language is an essential part of the web. It gives us the ability to draw the way elements are presented on a screen, web page or other media. It is simple, powerful, and declarative. We can easily implement complex things like dark/light patterns. However, there are many misconceptions and misuses of it. These can turn CSS markup into complex unreadable and unscalable code. How</description>
    </item>
    
    <item>
      <title>Analysis of the Go language HTTP standard library</title>
      <link>https://www.sobyte.net/post/2022-01/go-http/</link>
      <pubDate>Fri, 21 Jan 2022 15:48:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-http/</guid>
      <description>This article looks at how the Go language HTTP standard library is implemented. The HTTP-based service standard model consists of two ends, a client (&amp;lsquo;Client&amp;rsquo;) and a server (&amp;lsquo;Server&amp;rsquo;). HTTP requests are sent from the client, and the server receives the request, processes it and returns the response to the client. So the job of the HTTP server is to accept requests from the client and return a response to</description>
    </item>
    
    <item>
      <title>Fasthttp: a Go framework ten times faster than net/http (server part)</title>
      <link>https://www.sobyte.net/post/2022-01/fasthttp-server/</link>
      <pubDate>Fri, 21 Jan 2022 15:27:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/fasthttp-server/</guid>
      <description>I found a Go framework that claims to be ten times faster than net/http - Fasthttp. Let&amp;rsquo;s take a look at what great design it has to offer and let&amp;rsquo;s dig in. A typical HTTP service should look like this: The standard model of a service built on HTTP consists of two ends, a client (&amp;lsquo;Client&amp;rsquo;) and a server (&amp;lsquo;Server&amp;rsquo;). HTTP requests are sent from the client, the server receives</description>
    </item>
    
    <item>
      <title>How does endless achieve a non-stop restart of Go programs?</title>
      <link>https://www.sobyte.net/post/2022-01/endless-restart/</link>
      <pubDate>Fri, 21 Jan 2022 14:35:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/endless-restart/</guid>
      <description>For a non-stop restart of a Go program we need to address two issues. the process restart does not need to close the listening port. pre-existing requests should be fully processed or timeout. We&amp;rsquo;ll see how endless does both of these things later. Basic concepts The following is a brief introduction to two knowledge points for the content that follows. Signal handling Go signal notification works by sending the os.Signal</description>
    </item>
    
    <item>
      <title>Using Failpoint to inject faults in Go</title>
      <link>https://www.sobyte.net/post/2022-01/go-failpoint/</link>
      <pubDate>Fri, 21 Jan 2022 14:04:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-failpoint/</guid>
      <description>When I was looking at the TiDB source code recently, I found it very interesting that failpoint is used for fault injection. It uses code generation and code AST tree parsing and replacement to implement failpoint, I will also try to parse it to learn how to parse the AST tree to generate code. I will also try to parse it and learn how to parse the AST tree to</description>
    </item>
    
    <item>
      <title>Exploring Go-YCSB for database benchmarking</title>
      <link>https://www.sobyte.net/post/2022-01/go-ycsb/</link>
      <pubDate>Fri, 21 Jan 2022 13:12:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-ycsb/</guid>
      <description>Recently we have been doing a technical selection of databases and inevitably we need to do a benchmark test of the databases so that we can compare the performance of different databases across the board. Cloud Serving Benchmark (YCSB) is a tool developed by Yahoo for basic testing of cloud services. Redis, etc. As a go developer, we used the Go YCSB developed by pingcap for benchmarking purposes. Installation First</description>
    </item>
    
    <item>
      <title>Exploring what are the pitfalls of panic &amp; recover in Go source code?</title>
      <link>https://www.sobyte.net/post/2022-01/go-source-code-panic-and-recover/</link>
      <pubDate>Fri, 21 Jan 2022 10:06:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-source-code-panic-and-recover/</guid>
      <description>Preface The reason for writing this article is that a colleague at work recently wrote a Goroutine directly using the Go keyword, and then had a null pointer problem that caused the whole program to go down because there was no recover. The code looks like this. 1 2 3 4 5 6 7 8 9 10 11 12 13 func main() { defer func() { if err := recover();</description>
    </item>
    
    <item>
      <title>Golang Simple Architecture in Action</title>
      <link>https://www.sobyte.net/post/2022-01/go-simple-architecture/</link>
      <pubDate>Fri, 21 Jan 2022 09:16:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-simple-architecture/</guid>
      <description>Since golang does not have a uniform coding pattern like java, we, like the rest of the team, used some of the theory presented in the article Go Package Oriented Design and Architecture Layering and then combined it with our previous project experience to define the packge. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ├── cmd/</description>
    </item>
    
    <item>
      <title>C&#43;&#43; std::thread join() and deconstruct function</title>
      <link>https://www.sobyte.net/post/2022-01/cpp-std-thread-destruct-before-join/</link>
      <pubDate>Thu, 20 Jan 2022 11:22:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cpp-std-thread-destruct-before-join/</guid>
      <description>During a debugging session a few days ago, I noticed that the Stack Trace printed by the program was not quite what I expected. After much research, I found a problematic piece of code. Can you see what the problem is?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  #include &amp;lt;chrono&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;thread&amp;gt; int subtask1(int x) { std::this_thread::sleep_for(std::chrono::milliseconds(1000)); return x; } int subtask2(int x) { std::this_thread::sleep_for(std::chrono::milliseconds(500)); return x; } int run(int a, int b) { int result1; std::thread t([&amp;amp;]() { result1 = subtask1(a); }); int result2 = subtask2(b); if (result2 &amp;lt; 0) { return -2; } t.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; threading: how to use promise, future, packaged_task and async</title>
      <link>https://www.sobyte.net/post/2022-01/cpp-threading/</link>
      <pubDate>Thu, 20 Jan 2022 11:08:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cpp-threading/</guid>
      <description>Today I would like to introduce the C++ threaded high-level APIs: std::promise, std::future, std::packaged_task and std::async. The content of this article can be condensed into the following diagram.
where std::promise and std::future are synchronisation channels between threads. The std::packed_task class template is an adapter for a function or a function object. It wraps the return value of a function in std::future, allowing us to easily execute any function with std::thread. The std::async function is equivalent to the sum of std::packaged_task and std::thread.</description>
    </item>
    
    <item>
      <title>Usage of std::any in C&#43;&#43; 17</title>
      <link>https://www.sobyte.net/post/2022-01/cpp-17-std-any-usage/</link>
      <pubDate>Thu, 20 Jan 2022 10:53:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cpp-17-std-any-usage/</guid>
      <description>This article introduces the new std::any class in C++ 17. It can store all values that are &amp;ldquo;Copy Constructible&amp;rdquo;. In the following we will first introduce the basic usage of std::any, and then describe the practical use of it.
Usage The use of the std::any class is broken down as follows.
 Constructed objects Assigning operators any_cast function has_value member function reset member function emplace member function type member function  Constructed objects The std::any category is defined in the &amp;lt;any&amp;gt; header file.</description>
    </item>
    
    <item>
      <title>Using Perf for program hotspot analysis</title>
      <link>https://www.sobyte.net/post/2022-01/use-perf/</link>
      <pubDate>Thu, 20 Jan 2022 10:46:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/use-perf/</guid>
      <description>Perf is a performance analysis tool that has been added to the kernel since Linux 2.6.31 (2009). It uses kernel runtime staking to detect the running of programs and can provide quite rich information, enough to find performance bottlenecks and optimisation priorities in the running of programs. Installation On some systems there may be a full Perf pre-installed, but on the Debian Buster (10) I am using, only the user</description>
    </item>
    
    <item>
      <title>Implementation of the Linux kernel CFS scheduler</title>
      <link>https://www.sobyte.net/post/2022-01/linux-cfs/</link>
      <pubDate>Thu, 20 Jan 2022 10:39:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-cfs/</guid>
      <description>This article provides an easy and quick introduction to the principles and implementation of the CFS scheduler, a fully fair class scheduling class in the Linux kernel.
Principle The core principle of the CFS (Completely Fair Scheduler) is simple: each process is given as &amp;ldquo;fair&amp;rdquo; a runtime as possible. So the process that has run the least in the past is chosen to run each time. Of course, as a scheduler, it has to meet much more than that, and a number of features such as Linux&amp;rsquo;s preemptive processes and support for priorities in the Completely Fair class fair_sched_class make the design of CFS much more complex than simply picking the least amount of runtime.</description>
    </item>
    
    <item>
      <title>New in Go 1.18: Multi-Module workspace mode</title>
      <link>https://www.sobyte.net/post/2022-01/go-multi-module/</link>
      <pubDate>Thu, 20 Jan 2022 10:15:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-multi-module/</guid>
      <description>Go&amp;rsquo;s dependency management, or Go Module, has been around for some years now, and has been the subject of much criticism and refinement. Go 1.18 will introduce a new feature, Multi-Module Workspaces, to support multiple workspaces for modules, which will solve a number of problems. Background When working with Go projects on a daily basis, there are 2 classic problems that are particularly tedious. They are as follows. relying on</description>
    </item>
    
    <item>
      <title>Shortcomings of the Jetpack-LiveData component and strategies for dealing with them</title>
      <link>https://www.sobyte.net/post/2022-01/jetpack/</link>
      <pubDate>Wed, 19 Jan 2022 15:55:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/jetpack/</guid>
      <description>Preface In order to solve the problem of confusing architecture design that has existed since Android-App development, Google has launched the Jetpack-MVVM series of solutions. As the core of the whole solution - LiveData, with its lifecycle security, memory security and other advantages, and even gradually replace EventBus, RxJava as the trend of Android side state distribution components. The mall app team has encountered some difficulties in the process of</description>
    </item>
    
    <item>
      <title>Kubernetes HPA Controlled Elastic Scaling based on Prometheus Custom Metrics</title>
      <link>https://www.sobyte.net/post/2022-01/k8s-hpa-prometheus/</link>
      <pubDate>Wed, 19 Jan 2022 15:37:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/k8s-hpa-prometheus/</guid>
      <description>There are three main types of elastic scaling in Kubernetes: HPA, VPA, and CA. Here we will focus on Pod Horizontal Scaling HPA.
With the release of Kubernetes v1.23, the HPA API came to a stable version autoscaling/v2:
 Scaling based on custom metrics Scaling based on multiple metrics Configurable scaling behaviour  From the initial v1 version of HPA, which only supported CPU and memory utilisation scaling, to the later support for custom metrics and aggregation layer APIs, to v1.</description>
    </item>
    
    <item>
      <title>App Deep Linking and Delayed Deep Linking</title>
      <link>https://www.sobyte.net/post/2022-01/deep-link-deferred-deeplink/</link>
      <pubDate>Wed, 19 Jan 2022 13:18:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/deep-link-deferred-deeplink/</guid>
      <description>APP Wakeup and Scene Restoration In App launch promotion, waking up users is a common operation strategy. To get users active again and convert their behavior, the path of users must be restored from the scene to find the mystery of user growth from the root. In this era of advertising, I believe most users have encountered a similar scenario when using an app: when using an information app, they</description>
    </item>
    
    <item>
      <title>string and []byte conversion problem in golang</title>
      <link>https://www.sobyte.net/post/2022-01/go-string-bytes/</link>
      <pubDate>Wed, 19 Jan 2022 10:41:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-string-bytes/</guid>
      <description>Let&amp;rsquo;s look at the problematic code, similar string and []byte conversion code is very common on the web.
1 2 3 4 5 6 7 8  func StringToSliceByte(s string) []byte { l := len(s) return *(*[]byte)(unsafe.Pointer(&amp;amp;reflect.SliceHeader{ Data: (*(*reflect.StringHeader)(unsafe.Pointer(&amp;amp;s))).Data, Len: l, Cap: l, })) }   The reason why people don&amp;rsquo;t want to convert a string to a []byte directly via []byte(string) is because that would involve a memory copy, whereas a type conversion via unsafe.</description>
    </item>
    
    <item>
      <title>Notes on the use of Golang&#39;s defer keyword</title>
      <link>https://www.sobyte.net/post/2022-01/defer-keyword-in-golang/</link>
      <pubDate>Wed, 19 Jan 2022 10:30:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/defer-keyword-in-golang/</guid>
      <description>Golang provides the defer keyword to perform cleanup before a function exits. We won&amp;rsquo;t go into the basics of how to use it. Here&amp;rsquo;s a summary of some things to keep in mind. defer execution order 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import &amp;#34;fmt&amp;#34; func TestFunc() { defer func() { fmt.Println(&amp;#34;A&amp;#34;) }() defer</description>
    </item>
    
    <item>
      <title>Git: Failed sending HTTP2 data solution</title>
      <link>https://www.sobyte.net/post/2022-01/git-failed-sending-http2-data/</link>
      <pubDate>Wed, 19 Jan 2022 10:25:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/git-failed-sending-http2-data/</guid>
      <description>In recent times I&amp;rsquo;ve noticed strange errors in Git Clone on my Debian machine, and after a bit of Googling I&amp;rsquo;ve finally discovered that it&amp;rsquo;s a bug in the libcurl3-gnutls library.
2021-10-01 Update: Buster-backports has not yet fixed this issue, but Bullseye has incorporated a new version that does.
2021-06-19 Update: The fix is still not incorporated into backports, and the problem seems to be due to a problem with the TLSv1.</description>
    </item>
    
    <item>
      <title>Linux kernel page replacement algorithms</title>
      <link>https://www.sobyte.net/post/2022-01/linux-multi-lru/</link>
      <pubDate>Wed, 19 Jan 2022 10:13:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-multi-lru/</guid>
      <description>Previously, Yu Zhao from Google submitted a Patch to the Linux kernel that modified the page swap algorithm in the kernel memory management module, proposing a multi-level LRU. This article takes you through the advantages of the page swap algorithm and multi-level LRU.
What are pages and page replacement We know that memory paging mechanisms are used on almost all modern operating systems and processors. In some embedded operating systems and in special cases where processor resources are tight and there is no need to consider inter-process safety, or even the concept of threads, memory paging is not necessary.</description>
    </item>
    
    <item>
      <title>CPython performance to be improved by 5x? faster-python project PEP 659 source code interpretation</title>
      <link>https://www.sobyte.net/post/2022-01/faster-python/</link>
      <pubDate>Tue, 18 Jan 2022 14:36:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/faster-python/</guid>
      <description>Earlier in 2021, Python author Guido van Rossum was rehired by Microsoft to continue work on CPython, and they have proposed a faster-cpython project to improve the performance of CPython by a factor of 5 over 4 years. The whole project is open on GitHub&amp;rsquo;s faster-cpython group, and some of the ideas have been implemented and verified through Activity.
In this article, we will read and analyse the source code of one of the project&amp;rsquo;s key proposals, PEP 659, and learn how to optimise virtual machine performance at the bytecode level.</description>
    </item>
    
    <item>
      <title>Understanding python asynchronous programming and simple implementation of asyncio</title>
      <link>https://www.sobyte.net/post/2022-01/python-asyncio/</link>
      <pubDate>Tue, 18 Jan 2022 13:59:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/python-asyncio/</guid>
      <description>Asynchronous programming Before we start to explain asynchronous programming, let&amp;rsquo;s first understand a few related concepts. Blocking The state in which a program is hung when it has not been given the computational resources it needs. A program is said to be blocking on an operation if it cannot do anything else on its own while waiting for that operation to complete. Common forms of blocking are: network I/O blocking,</description>
    </item>
    
    <item>
      <title>Three new concepts related to interfaces since Go 1.18</title>
      <link>https://www.sobyte.net/post/2022-01/three-new-concepts-of-go-interface-since-1-18/</link>
      <pubDate>Tue, 18 Jan 2022 13:48:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/three-new-concepts-of-go-interface-since-1-18/</guid>
      <description>The meaning of Go&amp;rsquo;s interfaces has changed since Go 1.18, and there are three new concepts related to Go interfaces that many people are not aware of: type set, specific type and structural type. type set The type set is called a type set and is a new concept added to Go 1.18 for those who follow Go generics. Unlike Java, which requires a class to be defined explicitly to</description>
    </item>
    
    <item>
      <title>Time Wheel for Timed Tasks</title>
      <link>https://www.sobyte.net/post/2022-01/timingwheel/</link>
      <pubDate>Tue, 18 Jan 2022 13:37:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/timingwheel/</guid>
      <description>Basics of Timed Tasks First of all, let&amp;rsquo;s understand what is a timer task? Timers have very many scenarios, which you should encounter frequently in your normal work, such as generating monthly statistical reports, financial reconciliation, membership points settlement, email push, etc., are all scenarios of timer usage. Timers generally have three forms of performance: execution at a fixed period, execution after a certain delay, and execution at a specified</description>
    </item>
    
    <item>
      <title>The shebang line of linux shell programming</title>
      <link>https://www.sobyte.net/post/2022-01/the-shebang-line-of-linux-shell-programming/</link>
      <pubDate>Tue, 18 Jan 2022 13:28:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/the-shebang-line-of-linux-shell-programming/</guid>
      <description>You will often encounter shell scripts starting with #! /bin/bash, #! is called a shebang or hashbang. shebang plays an important role in shell scripting, especially when dealing with different types of shells.
In this tutorial we will explain what shebang is, how it plays a role in shell scripting. And how to specify an interpreter for shell scripts. We will use the two shells, bash and zsh, for comparison. All shell programming tutorials can be used in many Linux distributions such as Ubuntu, Debian, Fedora, Redhat, CentOS, Suse, Arch, Gentoo etc.</description>
    </item>
    
    <item>
      <title>3 ways to check the Linux kernel version from the command line</title>
      <link>https://www.sobyte.net/post/2022-01/3-ways-how-to-check-the-linux-kernel-version-in-the-command-line/</link>
      <pubDate>Tue, 18 Jan 2022 13:20:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/3-ways-how-to-check-the-linux-kernel-version-in-the-command-line/</guid>
      <description>When you are debugging drivers like you do, you may want to know which Linux kernel version your system is using? Here are three ways to check the kernel version in the Linux terminal.
I am using Ubuntu at the time of writing this article, but these commands are generic and can be used on Fedora, Debian, CentOS, SUSE Linux or any other Linux distribution.
Using the uname command to find the Linux kernel version uname is a Linux command used to get information about your system.</description>
    </item>
    
    <item>
      <title>read,source,mapfile commands and shell programming</title>
      <link>https://www.sobyte.net/post/2022-01/read-source-mapfileming-shell/</link>
      <pubDate>Tue, 18 Jan 2022 13:13:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/read-source-mapfileming-shell/</guid>
      <description>Bash is a fairly powerful programming language and easy to get to grips with. Here are some little-known but useful bash commands that will help make the shell scripts you write clearer and easier to maintain. After all, it&amp;rsquo;s almost always the shell you see when you open a terminal.
There are some powerful commands in Bash that you may not be aware of, even if you are fairly proficient in the language.</description>
    </item>
    
    <item>
      <title>Postfix &amp; Dovecot Build Your Own Mailbox Service</title>
      <link>https://www.sobyte.net/post/2022-01/mail-server/</link>
      <pubDate>Tue, 18 Jan 2022 13:01:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/mail-server/</guid>
      <description>example.com hostname password in this article please change to your own configuration environment CentOS 7 postfix dovecot mariadb opendkim nginx Installation of essential software 1 2 3 4 yum -y update &amp;amp;&amp;amp; \ yum -y install epel-release &amp;amp;&amp;amp; \ yum -y update &amp;amp;&amp;amp; \ yum -y install dovecot dovecot-mysql mariadb-server nginx opendkim python2-certbot-nginx nginx Modify the hosts file 1 2 127.0.0.1 localhost.localdomain localhost 你的公网ip hostname.example.com</description>
    </item>
    
    <item>
      <title>Linux kernel 2021: Linus Torvalds most prolific, commit count down to 73.7k</title>
      <link>https://www.sobyte.net/post/2022-01/linux-kernel-2021-highlights/</link>
      <pubDate>Mon, 17 Jan 2022 13:44:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-kernel-2021-highlights/</guid>
      <description>2021 saw the consolidation of a number of kernel improvements, the introduction of new hardware support and much more. But while the year looks good for movement in the Linux kernel, the actual number of commits and lines is lower than ever.
The tech site phoronix has summarized the relevant 2021 Git development statistics. As of December 31, 2021, when running GitStats on the Linux kernel source tree, the repository had received 1,060,172 commits from about 243,000 different authors.</description>
    </item>
    
    <item>
      <title>Implementing VIP functionality with Raft</title>
      <link>https://www.sobyte.net/post/2022-01/raft-vip/</link>
      <pubDate>Mon, 17 Jan 2022 13:33:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/raft-vip/</guid>
      <description>Background When deploying an application that is highly available, we usually place a HAProxy in front of the application so that when any one Server fails, the HAProxy will automatically switch over, but HAProxy also has a single point of failure, so we need more than one HAProxy to ensure that the business is not interrupted, and this time we need another software to work with: Keepalived. Keepalived is only</description>
    </item>
    
    <item>
      <title>K8s drain command source code reading</title>
      <link>https://www.sobyte.net/post/2022-01/k8s-drain/</link>
      <pubDate>Mon, 17 Jan 2022 13:24:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/k8s-drain/</guid>
      <description>Background I&amp;rsquo;ve written a previous article [&amp;ldquo;Kubernetes in Action - Smooth Node Removal&amp;rdquo;]) about how to remove nodes from a K8s cluster, and today I&amp;rsquo;ll take a look at what the kubectl drain command does and how it does it. kubectl K8s uses cobra as a command line builder (I don&amp;rsquo;t find cobra very useful and the documentation is unclear.) The actual processing logic is in pkg/kubectl/cmd/cmd.go, with a unified</description>
    </item>
    
    <item>
      <title>How fsck works</title>
      <link>https://www.sobyte.net/post/2022-01/how-fsck-works/</link>
      <pubDate>Mon, 17 Jan 2022 13:14:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/how-fsck-works/</guid>
      <description>Background We usually encounter a lot of file system anomalies after a system crash. We usually fix them with the fsck tool, today we will learn what fsck does and how it does it.
Workload example Suppose there is a workload that appends a single block of data to an existing file. The append is done by opening the file, calling lseek() to move the file offset to the end of the file, and then issuing a single 4KB write to the file before closing it.</description>
    </item>
    
    <item>
      <title>Explanation of basic file system concepts and common operations</title>
      <link>https://www.sobyte.net/post/2022-01/file-system/</link>
      <pubDate>Mon, 17 Jan 2022 13:05:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/file-system/</guid>
      <description>Background A friend asked me a while ago what the difference between deleting a file and formatting it, and recently I happened to be reading the book &amp;ldquo;Unix Linux Programming Practice Tutorial&amp;rdquo;, chapter 4 of which is about the file system.
The internal structure of the Unix file system From the user&amp;rsquo;s point of view, the files on a Unix system form a directory tree, each directory can contain files or other directories.</description>
    </item>
    
    <item>
      <title>Several ways to communicate across tabs in the browser</title>
      <link>https://www.sobyte.net/post/2022-01/across-tabs-in-the-browser/</link>
      <pubDate>Mon, 17 Jan 2022 11:07:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/across-tabs-in-the-browser/</guid>
      <description>The need for cross-tab communication is common in scenarios where there is a lot of content to browse or manipulate (e.g. blogs or CMS systems) and data consistency needs to be maintained. Most of these scenarios can be solved by bringing in a back-end service to keep the data consistent across multiple tabs by polling and so on. This article describes a pure front-end solution for cross-tab communication without introducing</description>
    </item>
    
    <item>
      <title>Myths about useCallback</title>
      <link>https://www.sobyte.net/post/2022-01/use-callback-misunderstanding/</link>
      <pubDate>Mon, 17 Jan 2022 10:39:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/use-callback-misunderstanding/</guid>
      <description>useCallback takes a callback function and an array of dependencies as arguments, and returns the cached callback function if each item in the dependency array remains the same.
Since useCallback can cache functions, wouldn&amp;rsquo;t all functions in the Function component be wrapped in useCallback for the purpose of React application optimization? Don&amp;rsquo;t worry, let&amp;rsquo;s take a look at two examples and decide which one is better, App1 or App2?
1 2 3 4 5 6 7 8 9 10  const App1 = () =&amp;gt; { const [value, setValue] = useState(&amp;#39;&amp;#39;); const onValueChange = useCallback( (event: React.</description>
    </item>
    
    <item>
      <title>Explaining &#34;this&#34; in JavaScript from a new perspective</title>
      <link>https://www.sobyte.net/post/2022-01/a-different-way-of-understanding-this-in-javascript/</link>
      <pubDate>Mon, 17 Jan 2022 09:35:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/a-different-way-of-understanding-this-in-javascript/</guid>
      <description>This article attempts to explain how the this keyword works in JavaScript from a new perspective: we assume that arrow functions are real functions, and that ordinary functions are just a special language construct. I think this explanation makes this better understood, so try it out. 1. Two kinds of functions This article focuses on two different kinds of functions. Normal functions: function () {} The arrow function: () =&amp;gt;</description>
    </item>
    
    <item>
      <title>Using graphql in ts </title>
      <link>https://www.sobyte.net/post/2022-01/ts-graphql/</link>
      <pubDate>Sun, 16 Jan 2022 20:43:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/ts-graphql/</guid>
      <description>Scenarios graphql provides consistent api architecture metadata on the front and back ends, while speeding up the performance of web-backend interactions through request merging and on-demand fetching.
Use with ts Basic idea
 scan all gql strings in the code get the graphql strings in the code and generate type definitions use these type definitions  Steps to use  Here is a demonstration using github api@v4
 Get the back-end metadata</description>
    </item>
    
    <item>
      <title>Directly point to the source code when referencing dependencies in monorepo</title>
      <link>https://www.sobyte.net/post/2022-01/monorepo/</link>
      <pubDate>Sun, 16 Jan 2022 20:28:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/monorepo/</guid>
      <description>In a monorepo project, we may have dozens of lib modules, and lib modules that need to be published outside of monorepo must be packaged as js, with main/module pointing to the packaged js file so that everyone can use it. For example, a simple lib module like the following lib-a src README.md package.json tsconfig.json The package.json may point directly to the source code when the original release is not</description>
    </item>
    
    <item>
      <title>React principle - lane priority and diff update</title>
      <link>https://www.sobyte.net/post/2022-01/react-lane/</link>
      <pubDate>Sun, 16 Jan 2022 20:14:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/react-lane/</guid>
      <description>The model for handling priorities in React 16 is ExpirationTime, which uses a length of time to describe the priority of a task. React 17, on the other hand, uses the Lane model to handle task priorities, which is able to cover more boundary conditions by assigning different priorities to a bit and manipulating the priorities through 31-bit bitwise operations. In short: a binary number is used to represent the</description>
    </item>
    
    <item>
      <title>Understanding Kotlin Suspend Functions</title>
      <link>https://www.sobyte.net/post/2022-01/understanding-kotlin-suspend-functions/</link>
      <pubDate>Sat, 15 Jan 2022 13:18:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/understanding-kotlin-suspend-functions/</guid>
      <description>suspend is a callback Understanding suspend doesn&amp;rsquo;t really require getting hung up on what the magic &amp;ldquo;hang&amp;rdquo; means or how threads are switched. In fact, behind suspend is a very familiar callback. Suppose postItem consists of three asynchronous subtasks with dependencies: requestToken, createPost and processPost, all of which are callback-based APIs. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 三个</description>
    </item>
    
    <item>
      <title>Talking about the Context and Scope of Kotlin Coroutine</title>
      <link>https://www.sobyte.net/post/2022-01/kotlin-coroutine-context-scope/</link>
      <pubDate>Sat, 15 Jan 2022 13:01:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kotlin-coroutine-context-scope/</guid>
      <description>Intro Opening a Kotlin Coroutine requires calling the launch or async methods on the CoroutineScope. These extension methods defined on the CoroutineScope are called coroutine builder. 1 2 3 lifecycleScope.launch(Dispatchers.IO) { delay(1000) } In addition to the suspend block, additional parameters can be passed to the coroutine builder. For example, the above Dispatchers.IO specifies that the Coroutine block of launch is dispatched to the IO thread pool for execution. Signature</description>
    </item>
    
    <item>
      <title>Why can&#39;t I use String.prototype.trim in a JS map?</title>
      <link>https://www.sobyte.net/post/2022-01/why-js-map-trim-do-not-work-together/</link>
      <pubDate>Sat, 15 Jan 2022 12:56:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/why-js-map-trim-do-not-work-together/</guid>
      <description>Suppose we have an array of strings [&#39; some &#39;, &#39; strings &#39;] and we need to clear the whitespace before and after the strings, the first thought is. 1 [&amp;#39; some &amp;#39;, &amp;#39; strings &amp;#39;].map(s =&amp;gt; s.trim()) For further optimization, consider removing the wrapped function from the map and using String.prototype.trim directly. however, the problem arises. 1 2 3 [&amp;#39; some &amp;#39;, &amp;#39; strings &amp;#39;].map(String.prototype.trim) // TypeError: String.prototye.trim called</description>
    </item>
    
    <item>
      <title>Getting Started with Kotlin Flow</title>
      <link>https://www.sobyte.net/post/2022-01/kotlin-flow-introduction/</link>
      <pubDate>Sat, 15 Jan 2022 12:33:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kotlin-flow-introduction/</guid>
      <description>Starting with Sequence Sequence is a Lazy List implementation provided by Kotlin. For example, the following Fibonacci list is implemented using Sequence. 1 2 3 4 5 6 7 8 9 10 val fibonacci = sequence { var terms = Pair(0L, 1L) while (true) { 🏹 yield(terms.first) terms = Pair( terms.second, terms.first + terms.second ) } } The terminal operator We use an infinite loop in the Sequence builder block</description>
    </item>
    
    <item>
      <title>Kotlin Coroutine and Retrofit</title>
      <link>https://www.sobyte.net/post/2022-01/kotlin-coroutine-retrofit/</link>
      <pubDate>Sat, 15 Jan 2022 12:11:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kotlin-coroutine-retrofit/</guid>
      <description>Retrofit 2.6.0 supports defining interfaces with Kotlin suspend functions. This article describes how to create the most comfortable coroutine experience by customizing the Retrofit Call Adapter and Converter. Call Adapter: custom request execution logic, including thread switching, etc. Converter: Customize the deserialization logic, how to convert the bytes obtained from the request into objects. Spoiler for the final result. 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>Marshal serialization of numeric types such as int64 safely in Go</title>
      <link>https://www.sobyte.net/post/2022-01/golang-json/</link>
      <pubDate>Sat, 15 Jan 2022 11:58:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-json/</guid>
      <description>Javascript&amp;rsquo;s base type (POD) and JSON actually have only one numeric type: Number. Number is usually represented by the 64-bit floating-point standard in IEEE-754 in mainstream browser implementations (i.e., double-precision floating-point), which represents valid numbers in the range \(-(2^{53} - 1)\) ~ \(2^{53} - 1\) . While 64-bit data types are often used in Go language, e.g., int64/uint64, such values are not safe to use in Javascript.
If you look at the JSON specification document, there is no limit to the number of bits, and any large value can be placed in JSON.</description>
    </item>
    
    <item>
      <title>Run the sshd service inside the container</title>
      <link>https://www.sobyte.net/post/2022-01/container-sshd/</link>
      <pubDate>Sat, 15 Jan 2022 11:48:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/container-sshd/</guid>
      <description>I want to share data with different friends, but I don&amp;rsquo;t really want to create new users on my system. Because in most Linux distributions, the default umask is 022, which means that other users can access my home directory and read files at will, which means no privacy and no security. If my friend&amp;rsquo;s account/password is accidentally leaked, it will also endanger all the data in my system, I</description>
    </item>
    
    <item>
      <title>A little research on the connection reuse problem caused by unread http.Response.Body</title>
      <link>https://www.sobyte.net/post/2022-01/golang-http-response-body/</link>
      <pubDate>Sat, 15 Jan 2022 11:40:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-http-response-body/</guid>
      <description>In the source code of Golang&amp;rsquo;s HTTP library, the description of http.Response.Body is as follows. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // Body represents the response body. // // The response body is streamed on demand as the Body field // is read. If the network connection fails or the server // terminates the response, Body.Read</description>
    </item>
    
    <item>
      <title>Simply defer file.Close() is probably a misuse</title>
      <link>https://www.sobyte.net/post/2022-01/golang-defer-file-close/</link>
      <pubDate>Sat, 15 Jan 2022 11:30:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-defer-file-close/</guid>
      <description>The use of defer statements in Go can be considered as a language style or habit. But while convenience is convenient, being able to use the defer statement to delay closing/cleaning files without errors is not so easy to guarantee. Writing files and closing them For example, in the code related to Go language file operations, you can see code like the following everywhere. 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title> The impact of CURL caching on downloading streaming data</title>
      <link>https://www.sobyte.net/post/2022-01/curl-stream-buffer/</link>
      <pubDate>Sat, 15 Jan 2022 11:23:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/curl-stream-buffer/</guid>
      <description>When accessing a gRPC streaming interface (converted to HTTP) with cURL before, a very strange phenomenon occurred.
 when directly cuRL, always the full content is displayed and the connection does not break, because it is a streaming interface, which is exactly the expected behavior. And when cURL | ... or cURL &amp;gt; file, the full content is never available, and it doesn&amp;rsquo;t work no matter how long you wait.  Why is this?</description>
    </item>
    
    <item>
      <title>Some minor issues with LIKE fuzzy lookups in MySQL</title>
      <link>https://www.sobyte.net/post/2022-01/mysql-like/</link>
      <pubDate>Fri, 14 Jan 2022 13:48:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/mysql-like/</guid>
      <description>Today, a colleague found a bug in MySQL regarding fuzzy lookups, which is quite embarrassing to say the least. When I saw the problem, I didn&amp;rsquo;t even know what I had written wrong.
The problem was that I meant to find rows in the database starting with abc_, but I ended up with a statement that looked like the following
1  SELECT*FROMusers_tabWHEREnameLIKE&amp;#39;abc_%&amp;#39;;  Can you find the desired results this way?</description>
    </item>
    
    <item>
      <title> A problem with time and time zone resolution in Go</title>
      <link>https://www.sobyte.net/post/2022-01/golang-time/</link>
      <pubDate>Fri, 14 Jan 2022 13:37:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-time/</guid>
      <description>Almost all examples of time resolution in Go take the full time including the date, and the official example is no exception. But few people have used the following code as an example to explain the behavior until the day the user makes a mistake.
Background of the problem Trying to get the user to enter a readable time as input from the terminal, but I find that I am parsing the input incorrectly.</description>
    </item>
    
    <item>
      <title>Using the Tokyo Cabinet Key/Value Database in Golang</title>
      <link>https://www.sobyte.net/post/2022-01/golang-tokyo-cabinet/</link>
      <pubDate>Fri, 14 Jan 2022 13:23:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-tokyo-cabinet/</guid>
      <description>Tokyo Cabinet is an early KV database developed in C. It also supports a wide range of data structures, mainly for its fast read and write performance at certain levels of data volume.
Tokyo Cabinet data structure.
Here is a simple read/write comparison with goleveldb and boltdb, using Tokyo Cabinet&amp;rsquo;s Hash data structure.
10 data tests 1 2 3 4 5 6 7 8 9 10 11 12 13 14  % go test -bench &amp;#34;Benchmark*&amp;#34; -benchmem -benchtime 10s kvLst len 20 db size 7847B 0MB goos: darwin goarch: amd64 pkg: tk cpu: Intel(R) Core(TM) i7-4870HQ CPU @ 2.</description>
    </item>
    
    <item>
      <title>Docker install mysql</title>
      <link>https://www.sobyte.net/post/2022-01/docker-mysql/</link>
      <pubDate>Fri, 14 Jan 2022 13:02:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/docker-mysql/</guid>
      <description>MySQL is the world&amp;rsquo;s most popular open source database. With its reliability, ease of use and performance, MySQL has become the database of choice for web applications. 1. Check the available MySQL versions mirror of mysql Alternatively, you can search for available versions by docker search mysql. 2. Pull the mysql image 1 2 3 4 5 6 docker pull mysql:latest 或者拉取其他版本 docker</description>
    </item>
    
    <item>
      <title>Big Data Basics: HIVE</title>
      <link>https://www.sobyte.net/post/2022-01/hive/</link>
      <pubDate>Fri, 14 Jan 2022 10:35:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/hive/</guid>
      <description>Hive Introduction Hive, implemented by Facebook and open source, is a data warehouse tool based on Hadoop. It maps structured data into a database table and provides HQL (Hive SQL) queries. The underlying data is stored on HDFS, and Hive essentially converts SQL statements into MapReduce tasks to run, making it easy for users unfamiliar with MapReduce to process and compute structured data on HDFS using HQL, suitable for offline</description>
    </item>
    
    <item>
      <title>Building Android interfaces for any screen size</title>
      <link>https://www.sobyte.net/post/2022-01/android-interfaces-for-any-screen-size/</link>
      <pubDate>Fri, 14 Jan 2022 10:04:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/android-interfaces-for-any-screen-size/</guid>
      <description>With around 100 million new tablet devices activated in the last 12 months and Chrome OS activations up by 92%, it is the fastest growing desktop platform. This means that with more than 250 million large screen devices running Android on tablets, foldable devices and Chrome OS devices, and the number of foldable devices in use growing by more than 250% year-on-year, the &amp;lsquo;big screen&amp;rsquo; is becoming an important and</description>
    </item>
    
    <item>
      <title>What should I do if my Linux process is stuck?</title>
      <link>https://www.sobyte.net/post/2022-01/linux-process-stuck/</link>
      <pubDate>Fri, 14 Jan 2022 09:53:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-process-stuck/</guid>
      <description>When we are using Linux, if there is a problem with network or disk I/O, we may find that the process is stuck, even if we use kill -9, we cannot kill the process, and many common debugging tools such as strace, pstack, etc. are not working.
At this point, we use ps to view the list of processes and see that the status of the stuck process is shown as D.</description>
    </item>
    
    <item>
      <title>Promise or Async/Await?</title>
      <link>https://www.sobyte.net/post/2022-01/promise-async-await/</link>
      <pubDate>Fri, 14 Jan 2022 09:14:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/promise-async-await/</guid>
      <description>1. Preface So far in front-end development, asynchronous problems have experienced the despair of Callback Hell, the normative melee of Promise/Deffered, the invincibility of Generator, and now the acceptance of Async/Await by the public, in which Promise and Async/Await are still active in code. Their perceptions and evaluations have been reversed many times, and they have their own fans, creating a love-hate relationship that continues to this day, and the</description>
    </item>
    
    <item>
      <title>How is the Go timer scheduled?</title>
      <link>https://www.sobyte.net/post/2022-01/go-timer/</link>
      <pubDate>Thu, 13 Jan 2022 15:21:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-timer/</guid>
      <description>This article breaks down the Go timer. Timers are an important part of both business and infrastructure development, which shows how important they are. Whether we initialise a timer with NewTimer, timer.After, or timer.AfterFun, the timer is eventually added to a global timer heap, which is managed by Go runtime. The global timer heap has also undergone three major upgrades. Before Go 1.9, all timers were maintained by a globally</description>
    </item>
    
    <item>
      <title>High Performance C&#43;&#43; HTTP Client Principles and Implementation</title>
      <link>https://www.sobyte.net/post/2022-01/cpp-http-client/</link>
      <pubDate>Thu, 13 Jan 2022 15:05:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cpp-http-client/</guid>
      <description>1. What is Http Client The Http protocol, a common language across the Internet, and the Http Client, arguably the most basic method we need to get data from the Internet world, is essentially a URL to a webpage conversion process. And with the basic Http Client functionality, paired with the rules and policies we want, everything from content retrieval down to data analysis can be implemented.
Today we&amp;rsquo;re giving you a high-performance Http client in C++, and it&amp;rsquo;s easy!</description>
    </item>
    
    <item>
      <title>Redis Large Cluster Scaling Performance Optimization in Practice</title>
      <link>https://www.sobyte.net/post/2022-01/redis-cluster/</link>
      <pubDate>Thu, 13 Jan 2022 14:12:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/redis-cluster/</guid>
      <description>1. Background In existing network environments, some businesses using Redis clusters often need to expand their node capacity as business volume increases. I have previously learnt that some of my operations and maintenance colleagues have experienced a decrease in performance after scaling a Redis cluster with a relatively large number of nodes, as evidenced by a significant increase in access latency. Some businesses are sensitive to Redis cluster access latency,</description>
    </item>
    
    <item>
      <title>Everything you need to know about Promise</title>
      <link>https://www.sobyte.net/post/2022-01/promise/</link>
      <pubDate>Thu, 13 Jan 2022 13:35:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/promise/</guid>
      <description>Promise is one of the best APIs for asynchronous operations in JavaScript. As a JavaScript developer, you need to be proficient in Promise. This article will summarise this knowledge, starting with a review of how JavaScript has handled asynchronous operations in the past? Then we&amp;rsquo;ll go into detail about the Promises object and its associated methods. Let&amp;rsquo;s start with a look at JavaScript asynchronous concepts. Asynchronous What is asynchronous? A</description>
    </item>
    
    <item>
      <title>TCP/IP protocol optimisation for large websites</title>
      <link>https://www.sobyte.net/post/2022-01/tcp-ip-optimisation-websites/</link>
      <pubDate>Thu, 13 Jan 2022 13:14:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/tcp-ip-optimisation-websites/</guid>
      <description>As a site with millions or tens of millions of DAUs, it is not only necessary to optimize the web application and database, but also the TCP/IP protocol layer.
In my work, I have used the following basic optimisation approaches.
Increasing the maximum number of connections In Linux, all network connections are made via file descriptors, so the number of file descriptors a process can open determines the maximum number of connections it can create.</description>
    </item>
    
    <item>
      <title>Systemd common operations and configuration</title>
      <link>https://www.sobyte.net/post/2022-01/systemd/</link>
      <pubDate>Thu, 13 Jan 2022 13:00:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/systemd/</guid>
      <description>Most Linux distributions are now managed by systemd, which is becoming more and more complex, but there are only so many common operations, so today I will talk about my own common operations and configuration. Operation daemon-reload When adding a new service to a system, it is common to keep changing the test.service configuration file. After changing the configuration file, it is usually necessary to run systemctl daemon-reload to re-add</description>
    </item>
    
    <item>
      <title>6 methods of communication between Svelte components</title>
      <link>https://www.sobyte.net/post/2022-01/svelte-communication/</link>
      <pubDate>Thu, 13 Jan 2022 10:38:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/svelte-communication/</guid>
      <description>The main challenge in designing user interfaces using components is managing the application state on different components. Svelte provides a powerful capability to enable data passing between components.
 &amp;ldquo;Great communication begins with connection.&amp;rdquo;
— Oprah Winfrey
Note: Oprah Gail Winfrey (born 29 January 1954) is an American television talk show host, producer, investor, philanthropist and actress, one of the most influential African-American celebrities in the United States, and one of the top 100 people of Time.</description>
    </item>
    
    <item>
      <title>Building more modern app widgets in Android 12</title>
      <link>https://www.sobyte.net/post/2022-01/android-12-widgets/</link>
      <pubDate>Thu, 13 Jan 2022 10:08:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/android-12-widgets/</guid>
      <description>Widgets have been an important part of Android since 2008 and are an important aspect of customising the home screen. You can think of a widget as an &amp;lsquo;at-a-glance&amp;rsquo; view of the app, giving the user a glimpse of the app&amp;rsquo;s data and core functionality without having to open the app from the home screen. But the AppWidget API has remained largely unchanged since the launch of Android, with only</description>
    </item>
    
    <item>
      <title>Analysis and resolution of memory cgroup leaks</title>
      <link>https://www.sobyte.net/post/2022-01/memory-cgroup/</link>
      <pubDate>Thu, 13 Jan 2022 09:44:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/memory-cgroup/</guid>
      <description>Memory cgroup leaks are a common problem in K8s (Kubernetes) clusters, resulting in nodes being stretched for memory resources, or nodes becoming unresponsive and having to restart the server to recover. Most developers use regular drop cache or disable kernel kmem accounting to circumvent this problem. This paper analyses the root cause of memory cgroup leaks and provides a solution to fix the problem at the kernel level, based on a practical example from the NetEase Digital Sail kernel team.</description>
    </item>
    
    <item>
      <title>Ubuntu lowers the hardware barrier even further - support for running on a Raspberry Pi 4 with 2GB of RAM</title>
      <link>https://www.sobyte.net/post/2022-01/running-ubuntu-desktop-on-a-2gb-raspberry-pi-4/</link>
      <pubDate>Thu, 13 Jan 2022 09:22:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/running-ubuntu-desktop-on-a-2gb-raspberry-pi-4/</guid>
      <description>Ubuntu already supports the 4GB and 8GB memory versions of the Raspberry Pi 4 Model B (supported since Ubuntu 20.10). Now the Ubuntu team plans to lower the hardware barrier for Ubuntu even further by making the upcoming Ubuntu 22.04 LTS version to run on a Raspberry Pi 4 with only 2GB RAM.
However, getting a full Linux system like Ubuntu to run properly on a hardware device with too little memory can be difficult, so how does Ubuntu do it?</description>
    </item>
    
    <item>
      <title>Website URL design is not simple</title>
      <link>https://www.sobyte.net/post/2022-01/url-design/</link>
      <pubDate>Wed, 12 Jan 2022 16:44:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/url-design/</guid>
      <description>URIs and URLs and URNs URLs are familiar, the other two terms are more unfamiliar. URIs, URLs and URNs are standard ways to identify, locate and name resources on the Internet. invented by Tim Berners-Lee in 1989, the World Wide Web (WWW) is considered a globally interconnected collection of physical and abstract resources -It provides information entities on demand - accessible via the Internet. The actual resources range from documents to people, while the abstract resources include database queries.</description>
    </item>
    
    <item>
      <title>A detailed explanation of email port numbers</title>
      <link>https://www.sobyte.net/post/2022-01/email-ports/</link>
      <pubDate>Wed, 12 Jan 2022 13:53:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/email-ports/</guid>
      <description>E-mail (E-mail) is one of the oldest protocols on the Internet, but it is also the most widely used communication protocol today. For historical reasons, e-mail uses many different protocols and each protocol uses a different TCP port, which greatly increases the difficulty of setting up e-mail and is very unfriendly to users who do not know computer expertise. Today, we will introduce the relevant protocols and ports systematically, and try to clear the obstacles for novice users.</description>
    </item>
    
    <item>
      <title>CPS transformations for Kotlin Coroutine</title>
      <link>https://www.sobyte.net/post/2022-01/kotlin-coroutine-cps/</link>
      <pubDate>Wed, 12 Jan 2022 13:27:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kotlin-coroutine-cps/</guid>
      <description>Most implementations of coroutines are based on some kind of runtime yield primitive. However, kotlin does not have this kind of lower-level support, and still implements coroutines based on CPS transformations on jvm, which does not have yield instruction support.
It&amp;rsquo;s actually quite impressive, and I&amp;rsquo;d like to know how it&amp;rsquo;s done.
CPS Transformation CPS stands for Continuation Passing Style, which is basically code that looks like this.
1 2 3 4 5  function auth(token, resourceName) { let userId = loginUser(token) let ok = checkPermission(userId, resourceName) return ok ?</description>
    </item>
    
    <item>
      <title>ZGC Notes: Colored Pointers</title>
      <link>https://www.sobyte.net/post/2022-01/notes-zgc/</link>
      <pubDate>Wed, 12 Jan 2022 13:20:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/notes-zgc/</guid>
      <description>ZGC is a new generation of garbage collector introduced from jdk11, the expected stopping time is less than 10ms, and the stopping time is independent of heap size, and it can support tb-level heap.
As a fan of go, isn&amp;rsquo;t go&amp;rsquo;s GC already pretty good? The Initial Mark has a little STW, and the usual gc pause is less than ms? In fact, the effect of go GC is still far from the promise of ZGC, not when it comes to large heaps.</description>
    </item>
    
    <item>
      <title>badger transaction process</title>
      <link>https://www.sobyte.net/post/2022-01/badger-tx/</link>
      <pubDate>Wed, 12 Jan 2022 13:11:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/badger-tx/</guid>
      <description>badger is dgraph&amp;rsquo;s open source LSMTree KV engine, which has KV separation, transaction, concurrent merge and other enhancements compared to leveldb, and is a more production-level storage engine in the go ecosystem. Here is a look at its transaction implementation. badger implements Serializable Snapshot isolation level (SSI) for optimistic concurrency-controlled transactions. Compared to Snapshot isolation level (SI), SSI tracks read operations in a transaction in addition to write operations for</description>
    </item>
    
    <item>
      <title>Rocksdb transactions</title>
      <link>https://www.sobyte.net/post/2022-01/rocksdb-tx/</link>
      <pubDate>Wed, 12 Jan 2022 10:30:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/rocksdb-tx/</guid>
      <description>rocksdb supports both PessimisticTransactionDB and OptimisticTransactionDB concurrency control modes, both of which seem to be external wrappers for DB objects, doing concurrency control outside of the storage, allowing applications to do transactional KV read and write capabilities per BEGIN, COMMIT, ROLLBACK APIs. rocksdb originally has the ability to write WriteBatch atomically, and the transaction does things on the basis of WriteBatch, where writes within the transaction are temporarily stored in</description>
    </item>
    
    <item>
      <title>cockroachdb two-stage commit process</title>
      <link>https://www.sobyte.net/post/2022-01/crdb-txn/</link>
      <pubDate>Wed, 12 Jan 2022 10:10:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/crdb-txn/</guid>
      <description>Previously, I only knew a little bit about percolator, and my impression of it is that it can implement transaction capability on top of a common distributed KV storage, but the overhead of 2PC + raft process is considerable. A few days ago, I heard that cockroachdb has made some engineering optimizations compared to percolator, so I&amp;rsquo;d like to learn how to implement this part.
The same as percolator, crdb also implements multi-line transaction management according to decentralized transaction manager.</description>
    </item>
    
    <item>
      <title>Go Generic Programming: Specialization Support</title>
      <link>https://www.sobyte.net/post/2022-01/go-generic-supports-specialization-no/</link>
      <pubDate>Wed, 12 Jan 2022 10:01:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-generic-supports-specialization-no/</guid>
      <description>Some programming languages such as C++ and Rust support generic specialization, does Go generic support it? Specialization is an extension of the generic function code. For example, for a generic function, its implementation is the same for all types (type sets) that satisfy the generic argument. If we want to do a special implementation of the function for one of these type sets, some languages that support generic specialization can</description>
    </item>
    
    <item>
      <title>Auto-tuning GOGC - optimizes GO&#39;s GC CPU usage</title>
      <link>https://www.sobyte.net/post/2022-01/dynamic-gogc/</link>
      <pubDate>Wed, 12 Jan 2022 09:44:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/dynamic-gogc/</guid>
      <description>Uber recently posted an article that focuses on dynamically tuning GOGC on core services to reduce the mark phase CPU usage of GC. Basically, it is effective, low-risk, scalable and semi-automated.
Uber&amp;rsquo;s current service scale is about a few thousand microservices, based on the scheduling infrastructure on the cloud for deployment. Most of the services are written by GO, and the author of this article is doing Maps Production Engineering, a group that has helped some Java systems to adjust GC parameters before (this should be the starting point for them to help Go to do optimization and think about how to adjust parameters).</description>
    </item>
    
    <item>
      <title>Gunicorn Signal Processing</title>
      <link>https://www.sobyte.net/post/2022-01/gunicorn-signal-processing/</link>
      <pubDate>Tue, 11 Jan 2022 14:11:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/gunicorn-signal-processing/</guid>
      <description>I recently used Gunicorn&amp;rsquo;s Graceful Shutdown feature in a project, so I read the code to learn about Gunicorn&amp;rsquo;s signal processing. Master Gunicorn starts with. 1 2 3 WSGIApplication(&amp;#34;%(prog)s[OPTIONS] [APP_MODULE]&amp;#34;).run() BaseApplication().run() Arbiter(self).run() The main control logic of the Master is implemented in Arbiter, including the signal handling and main loop logic. A call to Arbiter().run() will eventually lead to a call to Arbiter.init_signals(), where the signal functions defined in the</description>
    </item>
    
    <item>
      <title>Linux audit buffer configuration</title>
      <link>https://www.sobyte.net/post/2022-01/linux-audit-buffer/</link>
      <pubDate>Tue, 11 Jan 2022 14:00:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-audit-buffer/</guid>
      <description>Recently, I encountered a case where a host was in a hung state, and the IPMI console of the host at that time showed the log: audit: backlog limit exceeded, and for some reasons, the NMI signal was not sent in time to trigger the kernel core dump, so I could only troubleshoot according to the existing information, and recorded the following audit buffer related configuration learning.
Audit The Linux kernel introduced audit in 2.</description>
    </item>
    
    <item>
      <title>DHCP lease life cycle</title>
      <link>https://www.sobyte.net/post/2022-01/dhcp-lease-life-cycle/</link>
      <pubDate>Tue, 11 Jan 2022 13:52:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/dhcp-lease-life-cycle/</guid>
      <description>Yesterday, I was working with a colleague to troubleshoot a problem with a VM IP change, so I just wanted to organize the DHCP lease life cycle and the change process.
DHCP lease lifecycle  Allocation: A client starts with no valid lease, and therefore no DHCP-assigned address. It acquires a lease through an allocation process. Reallocation: If a client already has an address from an existing lease, then when it reboots or starts up after shutdown, it contacts the DHCP server that granted it the lease to confirm the lease and obtain operational parameters.</description>
    </item>
    
    <item>
      <title>CentOS execution of grub2-mkconfig causes disk to be read-only</title>
      <link>https://www.sobyte.net/post/2022-01/centos-grub2-mkconfig/</link>
      <pubDate>Tue, 11 Jan 2022 13:45:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/centos-grub2-mkconfig/</guid>
      <description>I recently encountered a failure where a disk partition was found to become read-only during a cluster software upgrade, causing the storage application to recognize the disk as unavailable. Investigation revealed that the cluster upgrade process regenerates the GRUB configuration file for each node, which causes the disk partition to become read-only during the execution of grub2-mkconfig. Document the flow of the grub2-mkconfig command execution until the real disk read-only command is issued.</description>
    </item>
    
    <item>
      <title>Flink Window Mechanism</title>
      <link>https://www.sobyte.net/post/2022-01/flink-window/</link>
      <pubDate>Tue, 11 Jan 2022 13:18:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/flink-window/</guid>
      <description>Windows is the core of processing wireless data streams, it splits the streams into buckets of finite size and performs various calculations on them.
 The structure of a windowed Flink program is usually as follows, with both grouped streams (keyed streams) and non-keyed streams (non-keyed streams). The difference between the two is that the grouped streams call the keyBy(...)  method in grouped streams and windowAll(...)  instead of the window(.</description>
    </item>
    
    <item>
      <title>Golang Common Design Patterns - Option Pattern</title>
      <link>https://www.sobyte.net/post/2022-01/golang-patterns/</link>
      <pubDate>Tue, 11 Jan 2022 11:09:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-patterns/</guid>
      <description>As any developer familiar with Python knows, Python has default parameters that allow us to optionally override certain default parameters as needed when instantiating an object to determine how to instantiate the object. This feature is great for elegantly simplifying code when an object has multiple default arguments.
The Go language does not syntactically support default parameters, so in order to create objects both by default parameters and by passing custom parameters, we need to use some programming tricks to achieve this.</description>
    </item>
    
    <item>
      <title>Build and debug openjdk 11 on win10</title>
      <link>https://www.sobyte.net/post/2022-01/build-jdk/</link>
      <pubDate>Tue, 11 Jan 2022 10:31:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/build-jdk/</guid>
      <description>A long time ago, I wanted to compile the source code of java on windows, and recently I have been trying, and I have tried many methods and encountered many problems.
Finally, I compile the process of difficulties and solutions encountered in the record, I hope to help those who come later.
Download source code The source code of Openjdk 11 is stored on the URL https://hg.openjdk.java.net/jdk-updates/jdk11u/ and can be downloaded by clicking on the zip button on the left to download the source code zip file at the following address: https://hg.</description>
    </item>
    
    <item>
      <title>Node.js dynamic table large file download practice</title>
      <link>https://www.sobyte.net/post/2022-01/node-download/</link>
      <pubDate>Tue, 11 Jan 2022 09:23:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/node-download/</guid>
      <description>Recently optimized the performance bottleneck of the dynamic form file download interface written by several newcomers, it feels very necessary to summarize an article as a document to throw a brick to promote learning together to write a more professional code. Simple Download The simplest case is when a file already exists on the file system on the server, and the client requests a download, the file is read directly</description>
    </item>
    
    <item>
      <title>FlutterFragment use of Flutter mixed development</title>
      <link>https://www.sobyte.net/post/2022-01/flutter/</link>
      <pubDate>Mon, 10 Jan 2022 15:18:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/flutter/</guid>
      <description>We know that there are two main ways to integrate Flutter with native Android. One is to create a flutter module, and then rely on it as a native module; the other is to package the flutter module into aar, and then rely on the aar package in the native project, which is officially recommended. aar way to access. 1. Android native engineering In Android native development, there are usually</description>
    </item>
    
    <item>
      <title>Simple Binary Encoding</title>
      <link>https://www.sobyte.net/post/2022-01/sbe/</link>
      <pubDate>Mon, 10 Jan 2022 15:08:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/sbe/</guid>
      <description>I. Preface In this article, let&amp;rsquo;s learn the SBE(Simple Binary Encoding) transfer protocol, which is the same as protobuf, which is a binary transport protocol with higher performance than protobuf, inspired by fast binary variant of FIX fix-simple-binary-encoding), and was originally intended for use in financial-grade, low-latency trading systems. SBE is also widely used as a data transfer medium in the open source software Aeron. II. Design Principles 2.1 Copy-Free</description>
    </item>
    
    <item>
      <title>Control the number of concurrent goroutines</title>
      <link>https://www.sobyte.net/post/2022-01/hpg-concurrency-control/</link>
      <pubDate>Mon, 10 Jan 2022 14:52:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/hpg-concurrency-control/</guid>
      <description>Concurrency overload causes program crashes Let&amp;rsquo;s start by looking at a very simple example. 1 2 3 4 5 6 7 8 9 10 11 12 func main() { var wg sync.WaitGroup for i := 0; i &amp;lt; math.MaxInt32; i++ { wg.Add(1) go func(i int) { defer wg.Done() fmt.Println(i) time.Sleep(time.Second) }(i) } wg.Wait() } This example implements concurrency of math.MaxInt32 concurrently, about 2^31 = 200 million, with each concurrently doing</description>
    </item>
    
    <item>
      <title>C programming implementation of memory management functions with out-of-bounds checking</title>
      <link>https://www.sobyte.net/post/2022-01/memory-overrun-detection/</link>
      <pubDate>Mon, 10 Jan 2022 13:37:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/memory-overrun-detection/</guid>
      <description>The C language is highly efficient, flexible, feature-rich and portable, and is highly sought after in programming, especially in system software development. Its efficient flexibility is largely due to its ability to provide low-end control over memory by pointing to it, but at the cost of programmers having to handle memory access details with extra care to avoid operational errors such as memory leaks and buffer overflows.
 Writing in C or C++ is like running a chain saw with all the safety guards removed.</description>
    </item>
    
    <item>
      <title>Build your own home NAS and streaming server using Raspberry Pi</title>
      <link>https://www.sobyte.net/post/2022-01/rpi-nas-plex/</link>
      <pubDate>Mon, 10 Jan 2022 12:55:21 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/rpi-nas-plex/</guid>
      <description>Network Attached Storage (NAS) provides file-level data access to heterogeneous network users over a computer network. As hard drive prices continue to drop, NAS devices have made their way into the homes of the masses. Leading SMB and home NAS market brands such as Synology range in price from $300 on the low end to $700 on the high end. But if you are a Raspberry Pi player, you can build a very good home NAS and streaming service at about half the cost of the lowest price.</description>
    </item>
    
    <item>
      <title>IPv6 Dynamic Address Allocation Mechanism Explained</title>
      <link>https://www.sobyte.net/post/2022-01/ipv6-addressing/</link>
      <pubDate>Mon, 10 Jan 2022 10:43:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/ipv6-addressing/</guid>
      <description>IPv6 supports multiple addresses, making address assignment more flexible and convenient. Unlike IPv4, which relied solely on the DHCP protocol for address assignment, IPv6 incorporates a native stateless address autoconfiguration (Sateless Address Autoconfiguration, abbreviated SLAAC) protocol. SLAAC can either work alone to provide IPv6 addresses to hosts, or it can work with DHCPv6 to generate new assignment schemes. Here is a comprehensive analysis of the dynamic address allocation mechanism for IPv6.</description>
    </item>
    
    <item>
      <title>AddressSanitizer - A tool for programmers to detect memory access errors</title>
      <link>https://www.sobyte.net/post/2022-01/asan-intro/</link>
      <pubDate>Mon, 10 Jan 2022 10:08:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/asan-intro/</guid>
      <description>Memory access errors are the most common software errors that often cause program crashes. The AddressSanitizer tool, developed by Google engineers in 2012, has become the first choice of C/C++ programmers for its wide coverage, high efficiency and low overhead. Here is a brief introduction to its principle and usage.
Tools Overview The C/C++ language allows programmers to have low-end control over memory, and this direct memory management has made it possible to write efficient application software.</description>
    </item>
    
    <item>
      <title>Analysis of IPv4 and IPv6 packet header checksum algorithm</title>
      <link>https://www.sobyte.net/post/2022-01/analyze-ipv4-ipv6-checksum/</link>
      <pubDate>Mon, 10 Jan 2022 09:53:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/analyze-ipv4-ipv6-checksum/</guid>
      <description>Regarding the checksum algorithm of the IP packet header, it is simply the one&amp;rsquo;s complement operation of 16-bit accumulation, but how to realize it, many data are not detailed. TCP and UDP datagram headers also use the same checksum algorithm, but the data involved in the operation is different from the IP header. In addition, IPv6&amp;rsquo;s operation of checksums is slightly different from IPv4. Therefore, it is necessary to analyze</description>
    </item>
    
    <item>
      <title>Golang bytes performance comparison of two functions Compare, Equal</title>
      <link>https://www.sobyte.net/post/2022-01/go-bytes-compare-equal/</link>
      <pubDate>Mon, 10 Jan 2022 09:12:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-bytes-compare-equal/</guid>
      <description>The bytes library in Go has two useful byte comparison functions: Compare, Equal
bytes.Compare Compare is a comparison of the size of two [][]bytes, returning the value
 0 : a == b -1 : a &amp;lt; b +1 : a &amp;gt; b  bytes.Equal Equal directly determines whether the two are equal, a simple task, and definitely faster than Compare
Performance comparison 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  var bs1 = [][]byte{ []byte(&amp;#34;12a7.</description>
    </item>
    
    <item>
      <title>Two efficient methods for generating combinations of Golang Slice and performance comparison</title>
      <link>https://www.sobyte.net/post/2022-01/go-slice/</link>
      <pubDate>Mon, 10 Jan 2022 09:00:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-slice/</guid>
      <description>There are various ways to implement the Go language to generate a Slice with a specified number of combinations, here are two with better performance.
The first two are specified to take the combination length, the first one is faster, the second one has simple code and slightly worse performance, and the third one is a full combination.
The algorithm of the first one is implemented by Python&amp;rsquo;s itertools algorithm and is really fast.</description>
    </item>
    
    <item>
      <title>Electron application multiple open indexedDB open exception problem analysis and solution</title>
      <link>https://www.sobyte.net/post/2022-01/multiple-electron-instances-indexeddb-domexception/</link>
      <pubDate>Sun, 09 Jan 2022 11:36:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/multiple-electron-instances-indexeddb-domexception/</guid>
      <description>Multiple application instances in electron will have indexedDB multiple open exceptions due to session sharing. Roughly, you will encounter an error like the following. 1 DOMException: Internal error opening backing store for indexedDB.open. When indexedDB is used in an application, this is a problem that will definitely be faced and needs to be solved. If it is not necessary, you can detect and disable multiple application sessions at startup. If</description>
    </item>
    
    <item>
      <title>Node ORM framework Prisma Quick Start</title>
      <link>https://www.sobyte.net/post/2022-01/prisma-introduction/</link>
      <pubDate>Sun, 09 Jan 2022 11:16:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/prisma-introduction/</guid>
      <description>Introduction Prisma is an open source, next-generation ORM that contains the following components. Prisma Client : auto-generated, type-safe query builder for Node.js and TypeScript Prisma Migrate : data migration system Prisma Studio : Graphical interface for querying and editing data in the database The Prisma client can be used in any Node.js or TypeScript backend application (including Serverless applications and microservices). It can be a REST API, a GraphQL API,</description>
    </item>
    
    <item>
      <title>Go generic programming: interface is no longer the interface</title>
      <link>https://www.sobyte.net/post/2022-01/the-interface-is-not-that-interface-in-go-1-18/</link>
      <pubDate>Sun, 09 Jan 2022 11:08:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/the-interface-is-not-that-interface-in-go-1-18/</guid>
      <description>Since Go 1.18 supported generics, the meaning of the Go interface has changed radically, and is used as a type constraint for generics in addition to the set of methods it previously represented. interface is no longer the simple interface it once was. In Go 1.17.x and previous versions, interface was defined as follows An interface type specifies a method set called its interface. A variable of interface type can</description>
    </item>
    
    <item>
      <title>Using vue hooks in react</title>
      <link>https://www.sobyte.net/post/2022-01/react-vue-hooks/</link>
      <pubDate>Sun, 09 Jan 2022 10:54:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/react-vue-hooks/</guid>
      <description>You may see the title and wonder: why do this? react hooks is a useful invention that reorganizes the paradigm of writing and thinking about code, using smaller abstractions to split state and functions by function rather than centralizing them into a single state or lifecycle. But react hooks suffers from the notion of state dependencies, and worse: it relies on manual management - despite the official eslint rules provided</description>
    </item>
    
    <item>
      <title>Compile and install GCC12</title>
      <link>https://www.sobyte.net/post/2022-01/compile_install_latest_gcc/</link>
      <pubDate>Sun, 09 Jan 2022 10:48:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/compile_install_latest_gcc/</guid>
      <description>Because I want to use C++20 standard, I need to use GCC12, but the default compiler of Ubuntu20 is GCC9, so I have to compile and install a GCC trunk by myself. I didn&amp;rsquo;t expect to have so many problems doing something that sounds so simple, so I&amp;rsquo;ll write a little bit of text to document it. Download source code 1 git clone https://github.com/gcc-mirror/gcc.git Configure dependencies 1 sudo apt install</description>
    </item>
    
    <item>
      <title>Implementing the FAT32 file system with Rust</title>
      <link>https://www.sobyte.net/post/2022-01/rust-fat32/</link>
      <pubDate>Sun, 09 Jan 2022 10:37:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/rust-fat32/</guid>
      <description>FAT file system knowledge overview A file is, in fact, data. Data is represented in the computer as 0/1, and the most basic unit is the bit. 8 bit = 1 Byte, 1024 Byte = 1 KB, 1024 KB = 1 MB, and so on. The content of a file is also a combination of several 01 strings. When reading/writing a file, we call the functions read()/write() in the kernel,</description>
    </item>
    
    <item>
      <title>io_uring Reading Notes</title>
      <link>https://www.sobyte.net/post/2022-01/io-uring/</link>
      <pubDate>Sun, 09 Jan 2022 10:26:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/io-uring/</guid>
      <description>io_uring in a nutshell There are two important operations for asynchronous requests for io_uring: committing the request, and completing the submitted request. For IO event submission, the application is the producer and the kernel is the consumer, while for completion events, the kernel is the producer and the application is the consumer. Therefore, we need a pair of rings to provide a high-performance channel for communication between the kernel and</description>
    </item>
    
    <item>
      <title>RISC -V N Extensions</title>
      <link>https://www.sobyte.net/post/2022-01/risc-v-n-extensions/</link>
      <pubDate>Sun, 09 Jan 2022 10:20:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/risc-v-n-extensions/</guid>
      <description>Added CSRs User status register (ustatus) 1 2 3 4 5 6  UXLEN-1 5 4 3 1 0 ┌────────┬──────┬──────┬─────┐ │ WPRI │ UPIE │ WPRI │ UIE │ └────────┴──────┴──────┴─────┘ UXLEN-5 1 3 1   ustatus is a UXLEN bit-long read/write register that records and controls the current operating status of the hardware thread.
User-state interrupts are disabled when the user-state interrupt enable bit UIE is zero. In order to provide atomicity to the user-state fall-in handler, the value in UIE is copied to UPIE when a user-state interrupt occurs, and UIE is set to zero.</description>
    </item>
    
    <item>
      <title>KPTI mechanism in xv6-riscv</title>
      <link>https://www.sobyte.net/post/2022-01/xv6-riscv-kpti/</link>
      <pubDate>Sun, 09 Jan 2022 10:17:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/xv6-riscv-kpti/</guid>
      <description>KPTI in a Nutshell The KPTI (Kernel Page Table Isolation) mechanism was originally designed to mitigate KASLR bypass and CPU-side channel attacks.
In the KPTI mechanism, the isolation of memory in kernel state space from user state space has been further enhanced.
 The page table in the kernel state includes the page table of user-space memory and the page table of kernel-space memory. The page table in the user state includes only the page table of user space memory and the page table of kernel space memory as necessary, such as the memory used for handling system calls, interrupts, and other information.</description>
    </item>
    
    <item>
      <title>WebSocket, HTTP/2 and gRPC</title>
      <link>https://www.sobyte.net/post/2022-01/websocket-http2-and-grpc/</link>
      <pubDate>Sun, 09 Jan 2022 10:09:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/websocket-http2-and-grpc/</guid>
      <description>I. WebSocket WebSocket is a two-way communication protocol that uses the HTTP/1.1 protocol in the handshake phase (HTTP/2 is not supported at this time). The handshake process is as follows. First the client initiates a special HTTP request to the server with the following message header. 1 2 3 4 5 6 7 8 GET /chat HTTP/1.1 // 请求行 Host: server.example.com Upgrade: websocket // required Connection: Upgrade //</description>
    </item>
    
    <item>
      <title>OpenSUSE Usage Guide</title>
      <link>https://www.sobyte.net/post/2022-01/opensuse-instruction/</link>
      <pubDate>Sun, 09 Jan 2022 10:00:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/opensuse-instruction/</guid>
      <description>openSUSE is an RPM-based distribution, which is in line with RHEL/CentOS. But its official package manager is a proprietary zypper, which works quite well, and the software is quite new. I recently switched from Manjaro to openSUSE and found that the KDE desktop is indeed smoother than Manjaro and the community source OBS experience is more comfortable than AUR. Especially for containers/Kubernetes, the source is richer than AUR and is</description>
    </item>
    
    <item>
      <title>QEMU-KVM Virtualization Environment Construction and Use</title>
      <link>https://www.sobyte.net/post/2022-01/qemu-kvm-usage/</link>
      <pubDate>Sat, 08 Jan 2022 15:47:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/qemu-kvm-usage/</guid>
      <description>QEMU/KVM Virtualization QEMU/KVM is currently the most popular virtualization technology. It is based on the kvm module provided by the Linux kernel, with a streamlined structure, low performance loss, and is open source and free (compared to the paid vmware), so it has become the preferred virtualization solution for most enterprises. The current virtualization solutions of major cloud vendors are basically using KVM technology for new server instances. Even AWS,</description>
    </item>
    
    <item>
      <title>Introduction, installation and use of the secrets management tool Vault</title>
      <link>https://www.sobyte.net/post/2022-01/expirence-of-vault/</link>
      <pubDate>Sat, 08 Jan 2022 15:22:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/expirence-of-vault/</guid>
      <description>Vault is a secrets management, encryption-as-a-service and privilege management tool from hashicorp. Its features are briefly described as follows. secrets management: support for saving various custom information, automatic generation of various types of keys, vault automatically generated keys can also be automatically rotated (rotate) authentication: support access to major cloud vendors&#39; account systems (such as the Aliyun RAM sub-account system) or LDAP, etc. for authentication, without creating additional account systems.</description>
    </item>
    
    <item>
      <title>Installation, usage and personal experience with Argo Workflows, the cloud-native pipeline</title>
      <link>https://www.sobyte.net/post/2022-01/expirence-of-argo-workflow/</link>
      <pubDate>Sat, 08 Jan 2022 14:56:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/expirence-of-argo-workflow/</guid>
      <description>Note: This article is not an introductory tutorial, to learn Argo Workflows please go to the official documentation Argo Documentation Argo Workflows is a cloud-native workflow engine that focuses on orchestrating parallel tasks. It has the following features. defines workflows using Kubernetes Custom Resources (CR), where each step in a workflow is a container. model multi-step workflows as a series of tasks, or use directed acyclic graphs (DAGs) to describe</description>
    </item>
    
    <item>
      <title>The Swiss Army knife of Linux networking tools - socat &amp; netcat</title>
      <link>https://www.sobyte.net/post/2022-01/socat-netcat/</link>
      <pubDate>Sat, 08 Jan 2022 14:27:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/socat-netcat/</guid>
      <description>The commands in this article were tested on macOS Big Sur and Opensuse Tumbleweed socat &amp;amp; netcat netcat (network cat) is a long-established network toolkit, known as the Swiss Army knife of TCP/IP. All major Linux distributions have the openbsd version of netcat installed by default, and its command line name is nc . And socat (socket cat), which is officially described as &amp;quot;netcat++&amp;quot; (extended design, new implementation), is a</description>
    </item>
    
    <item>
      <title>Virtual Network Interface in Linux</title>
      <link>https://www.sobyte.net/post/2022-01/linux-virtual-network-interfaces/</link>
      <pubDate>Sat, 08 Jan 2022 14:07:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-virtual-network-interfaces/</guid>
      <description>Note: Any network configuration created or modified with the ip command in this article is not persistent and disappears upon host reboot. Linux has powerful virtual networking capabilities, which are the basis for virtual networks such as openstack networks, docker container networks, and kubernetes networks. Here are the most common types of virtual network interfaces for Linux: TUN/TAP, bridge, veth, ipvlan/macvlan, vlan, and vxlan/geneve. I. tun/tap Virtual Network Interface tun/tap</description>
    </item>
    
    <item>
      <title>Iptables And Docker Container Network Analysis</title>
      <link>https://www.sobyte.net/post/2022-01/iptables-and-container-networks/</link>
      <pubDate>Sat, 08 Jan 2022 13:49:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/iptables-and-container-networks/</guid>
      <description>This article is only for ipv4 networks This article first introduces the basic concept and common commands of iptables, and then analyzes how docker/podman is a standalone container network implemented with iptables and Linux virtual network interface. iptables iptables provides packet filtering, NAT and other packet handling capabilities. iptables is most used in firewall and NAT scenarios. Both iptables and the new nftables are based on netfilter and are subprojects</description>
    </item>
    
    <item>
      <title>Rust Ownership and Borrowing</title>
      <link>https://www.sobyte.net/post/2022-01/rust-ownership-and-borrowing/</link>
      <pubDate>Sat, 08 Jan 2022 13:36:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/rust-ownership-and-borrowing/</guid>
      <description>Study notes, benchmarking cpp to understand the concept of rust ownership and borrowing, and mentioning the more specific slice (DST) by the way Ownership Each value in rust has an owner variable and can only have one owner at the same time. When the value&amp;rsquo;s owner variable goes out of scope, the value&amp;rsquo;s memory is freed. The following code String has moved ownership from s1 to s2 and a Move</description>
    </item>
    
    <item>
      <title>Go Reflection: Chunking slices to a specified size</title>
      <link>https://www.sobyte.net/post/2022-01/slice-chunking-in-go/</link>
      <pubDate>Sat, 08 Jan 2022 13:31:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/slice-chunking-in-go/</guid>
      <description>In the process of writing code, sometimes we need to do some bulk queries/operations, which often involve chunking a large array or slice.
For example, if we have an array of ids and we want to request an interface to query information based on the ids, the interface supports batch queries, but the maximum number of queries per query is 100. the best practice is to take up to 100 ids from the array each time and do a batch query until the array is traversed.</description>
    </item>
    
    <item>
      <title>Android/iOS determine whether to use a proxy or VPN</title>
      <link>https://www.sobyte.net/post/2022-01/android-ios-proxy-vpn/</link>
      <pubDate>Sat, 08 Jan 2022 13:23:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/android-ios-proxy-vpn/</guid>
      <description>For the black industry of APP, we mentioned that some users will bypass the wind control strategy by changing IP. A more convenient way to change IP is to use proxy IP or VPN. In testing APP security is required to make a judgment on whether to use the code and VPN. The following is a compilation of some codes for reference. Android determine whether to use proxy IP 1</description>
    </item>
    
    <item>
      <title>Prevent HTTPS from exposing the domain name bound on the server</title>
      <link>https://www.sobyte.net/post/2022-01/prevent-https-from-exposing-the-domain-name-bound-on-the-server/</link>
      <pubDate>Sat, 08 Jan 2022 13:14:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/prevent-https-from-exposing-the-domain-name-bound-on-the-server/</guid>
      <description>When we use CDN services such as CloudFlare, in addition to the function of saving traffic and speeding up access, an important function is to prevent exposing the real IP of the website, but if your NGINX is not properly configured, direct access to the server&amp;rsquo;s IP using the HTTPS protocol will expose a certificate pointing to a domain name on the server, which will be scanned by some Some services that scan the entire network for IP addresses get the correspondence between the domain name and the IP.</description>
    </item>
    
    <item>
      <title>Big Data Fundamentals: Hadoop</title>
      <link>https://www.sobyte.net/post/2022-01/hadoop/</link>
      <pubDate>Sat, 08 Jan 2022 10:41:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/hadoop/</guid>
      <description>This first article was organized in 2014, in this 7~8 years time, Hadoop has changed a lot, but the most core content has not changed so much, the article at that time still has some reference significance. Once again, we will re-do the organization.
An overview of Hadoop Hadoop, a distributed system infrastructure, was developed by the Apache Foundation. Users can develop distributed programs without understanding the underlying details of distribution.</description>
    </item>
    
    <item>
      <title>Big Data Foundation: Google GFS</title>
      <link>https://www.sobyte.net/post/2022-01/google-gfs/</link>
      <pubDate>Fri, 07 Jan 2022 17:30:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/google-gfs/</guid>
      <description>Introduction to the GFS system Google File System (abbreviated as GFS or GoogleFS), a proprietary distributed file system developed by Google Inc.
It differs from traditional file systems in that it is.
 Distributed - provides a high degree of horizontal scalability Networked using a large number of inexpensive common machines - allows for single machine failure No Random Write - does not allow arbitrary changes to existing files  Google did not release the software part of the system as open source software.</description>
    </item>
    
    <item>
      <title>Understanding the Embedding Features of the go Language</title>
      <link>https://www.sobyte.net/post/2022-01/type-embedding-in-go/</link>
      <pubDate>Fri, 07 Jan 2022 14:28:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/type-embedding-in-go/</guid>
      <description>The Go language has no classes, so there is no inheritance, so you can only combine various functions by embedding features (for convenience, we will call them embedding). The simplest is the interface embedding interface, for example, we have defined Reader and Writer interfaces. 1 2 3 4 5 6 7 type Reader interface { Read(p []byte) (n int, err error) } type Writer interface { Write(p []byte) (n int,</description>
    </item>
    
    <item>
      <title>Go is a better PHP</title>
      <link>https://www.sobyte.net/post/2022-01/go-is-better-php/</link>
      <pubDate>Fri, 07 Jan 2022 14:17:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-is-better-php/</guid>
      <description>Many php programmers switch to go because of the current environment. Today I bring you a new perspective - &amp;ldquo;go is a better php&amp;rdquo;.
It starts with the article PHP showing its maturity in release 7.4. The article says that PHP is maturing from version 7.4 and lists the following advantages of PHP.
Complete object-oriented programming support, mainly including
 namespace to handle naming conflicts interface separates implementation from interface traits code mixin support type system restricts the types of function parameters, return values, and class members  A comprehensive dependency management system, which is mainly implemented by composer.</description>
    </item>
    
    <item>
      <title>Introduction to DNS SVCB/HTTPS records</title>
      <link>https://www.sobyte.net/post/2022-01/dns-svcb-https/</link>
      <pubDate>Fri, 07 Jan 2022 11:03:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/dns-svcb-https/</guid>
      <description>The IETF is introducing a new type of record for DNS called SVCB/HTTPS. this SVCB/HTTPS record can solve some very important problems and I have been following the advancement of the standard. Today I&amp;rsquo;ll give you an introduction.
1987 CNAME records The DNS system first supported CNAME records in 1987 (RFC 1034), which means canonical name in Chinese. For example, we can set the a.example.com record type to CNAME and its value to b.</description>
    </item>
    
    <item>
      <title>Analysis of efficiency issues of TCP-based VPNs</title>
      <link>https://www.sobyte.net/post/2022-01/vpn-over-tcp/</link>
      <pubDate>Fri, 07 Jan 2022 10:44:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vpn-over-tcp/</guid>
      <description>I have recently been working on the implementation of the AnyConnect protocol and service, an enterprise virtual private network (VPN) system developed by Cisco, and one of its core selling points is the UDP-based DTLS channel. In this article, we&amp;rsquo;ll analyze why UDP is used to transport VPN data.
VPNs work at the network layer, and all that is transmitted over the VPN tunnel is IP packets, which are unreliable. To achieve reliable transmission, we need to use TCP protocol.</description>
    </item>
    
    <item>
      <title>About iptables release port invalid issue</title>
      <link>https://www.sobyte.net/post/2022-01/iptables-rule-order/</link>
      <pubDate>Fri, 07 Jan 2022 10:39:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/iptables-rule-order/</guid>
      <description>I recently wanted to run a VPN service on my router and needed to open the port to the outside world. After adding the rule, it didn&amp;rsquo;t work. After searching the Internet, it turns out that the problem is caused by the priority of iptbles rules. Today to give you an analysis.
Suppose we want to open port 80 of tcp to the public, we can add rules like this.</description>
    </item>
    
    <item>
      <title>Linux LAN transfer of large files</title>
      <link>https://www.sobyte.net/post/2022-01/transfer-big-file/</link>
      <pubDate>Fri, 07 Jan 2022 10:35:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/transfer-big-file/</guid>
      <description>Today I need to copy a large file (about 20G) to my router&amp;rsquo;s hard drive. Usually people think of using the scp command. scp is short for ssh copy. I tried it and the speed is only 5M or so. It took almost an hour to finish copying, which was unbearable. So I looked into how to speed up the transfer speed.
So why is it slow? The main reason is that ssh encrypts 🔐 the communication content, the sender has to encrypt and the receiver has to decrypt.</description>
    </item>
    
    <item>
      <title>Concurrency safety for Go language maps</title>
      <link>https://www.sobyte.net/post/2022-01/go-map-concurrent-misue/</link>
      <pubDate>Fri, 07 Jan 2022 10:26:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-map-concurrent-misue/</guid>
      <description>It is well known that Go&amp;rsquo;s map is not a concurrency-safe data structure. If more than one goroutine reads and writes the same map, an error is reported. I&amp;rsquo;m ashamed to say that I always thought this error could be caught with recover. Until yesterday, a colleague raised this question and sent me a demo code. Today, I took the time to study the knowledge, organize it and share it with you.</description>
    </item>
    
    <item>
      <title>Go language implementation of text to image</title>
      <link>https://www.sobyte.net/post/2022-01/go-text-image/</link>
      <pubDate>Fri, 07 Jan 2022 10:08:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-text-image/</guid>
      <description>I recently needed to convert a large section of text into a picture. After checking the web, I found the project hqbobo/text2pic and found that it adds a box to each character when rendering the Song-like font. So I simply researched how to render text in Go. Finally developed the txtimg widget. Today I&amp;rsquo;ll share the relevant experience in summary. The body of the code is taken from the official</description>
    </item>
    
    <item>
      <title>Go 1.18 will introduce a new network address packet</title>
      <link>https://www.sobyte.net/post/2022-01/go-1.18-netip/</link>
      <pubDate>Wed, 05 Jan 2022 13:00:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-1.18-netip/</guid>
      <description>A long time ago, I came across an article by Brad Fitzpatrick called netaddr.IP: a new IP address type for Go. Brad is the core developer of the Go language and founder of tailscale, and in this article he analyzes the problems with the Go language net.IP type and their solution to them and how it evolved. Eventually Brad and his team open sourced the inet.af/netaddr package. I took a</description>
    </item>
    
    <item>
      <title>Go HTTP Service Timeout Control</title>
      <link>https://www.sobyte.net/post/2022-01/go-http-server-timeout/</link>
      <pubDate>Wed, 05 Jan 2022 12:40:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-http-server-timeout/</guid>
      <description>The system must control the timeout time of each link when providing HTTP services to the outside world, otherwise it is vulnerable to DDos attacks. The business framework used by our department is based on the Go language net/http standard library secondary development. When I was developing the framework, I did not have a deep understanding of the timeout control of the Go HTTP server. TimeoutHandler in the outermost layer</description>
    </item>
    
    <item>
      <title>Copy text using vim across ssh</title>
      <link>https://www.sobyte.net/post/2022-01/vim-copy-over-ssh/</link>
      <pubDate>Wed, 05 Jan 2022 12:09:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-copy-over-ssh/</guid>
      <description>Recently, a friend asked how to copy the contents of vim on the server to the local clipboard without using the mouse. To be honest, I always select and copy directly with the mouse. But since my friend asked, I had to do some research. I really found a solution that doesn&amp;rsquo;t use the mouse. This method can not only copy the contents of vim to the local clipboard, but also to the local tmux clipboard, very convenient.</description>
    </item>
    
    <item>
      <title>Rob opposes changes to the Go 1.18 generic standard library</title>
      <link>https://www.sobyte.net/post/2022-01/no-change-lib-in-go-1.18/</link>
      <pubDate>Wed, 05 Jan 2022 11:57:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/no-change-lib-in-go-1.18/</guid>
      <description>Rob Pike, the father of the Go language, previously created issue to oppose the introduction of generic support in the standard library in Go 1.18. Rob&amp;rsquo;s move was both unexpected and justified. Rob&amp;rsquo;s rationale was twofold: the scope of the change was too large, and the lack of real-world experience. So Rob suggested not to change the standard library in Go 1.18, but to provide a generic version of the</description>
    </item>
    
    <item>
      <title>Vim Macro Quick Start</title>
      <link>https://www.sobyte.net/post/2022-01/vim-macro-quick-start/</link>
      <pubDate>Wed, 05 Jan 2022 11:51:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-macro-quick-start/</guid>
      <description>Vim provides a macro recording feature that allows you to record a series of actions and then repeat them. This feature is relatively cold, but also very powerful. Just because the operation is complicated, few people learn and rarely use. But I think the idea of macros is very simple, the reason why I think it is complex is not particularly good real-world cases to reflect its value. I came across a more suitable scenario for the use of macros when I was modifying the Sniper framework today.</description>
    </item>
    
    <item>
      <title>Use systemd to listen to the service port</title>
      <link>https://www.sobyte.net/post/2022-01/systemd-socket-activation/</link>
      <pubDate>Wed, 05 Jan 2022 11:46:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/systemd-socket-activation/</guid>
      <description>The http service of the website is developed in Go. Because it listens to the standard ports 80 and 443, the http service is always run under the root account. But running with root is very risky. If the code is vulnerable and the bad guys break it, they will get root access and the consequences will be unthinkable. That&amp;rsquo;s why http services like nginx support setting the account under which the worker processes run.</description>
    </item>
    
    <item>
      <title>Develop website message function based on IMAP mailbox</title>
      <link>https://www.sobyte.net/post/2022-01/imap-comment/</link>
      <pubDate>Wed, 05 Jan 2022 11:39:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/imap-comment/</guid>
      <description>The site has been online for a few months now and there has been no message function. A friend suggested adding a message or discussion support. My earliest thought was that leaving a message is a very low frequency operation, and I also left my email address on my personal page. If a friend really needs to discuss a problem, he or she can send an email. But the actual</description>
    </item>
    
    <item>
      <title>Developing a simple Vim search plugin</title>
      <link>https://www.sobyte.net/post/2022-01/vim-search-plugin/</link>
      <pubDate>Wed, 05 Jan 2022 11:33:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-search-plugin/</guid>
      <description>Recently, I was going to write a vim introductory article for new Go developers, so I started to organize my vim configuration and plug-in system. While sorting out the file-related plugins, I found myself using the ack plugin. ack itself has no file search capability; it uses tools like ack/ag to search for articles. The plugin itself only serves the purpose of calling commands and displaying results. Since it is relatively simple, why not implement one yourself?</description>
    </item>
    
    <item>
      <title>Using JWT for user authentication in Golang</title>
      <link>https://www.sobyte.net/post/2022-01/golang-jwt/</link>
      <pubDate>Tue, 04 Jan 2022 20:51:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/golang-jwt/</guid>
      <description>Doing user authentication with JWT is a relatively simple way. Common authentication methods The mainstream methods of user authentication are broadly classified as session-based and token-based. User authentication with JWT sesion-based authentication method User sends username and password to the server. The server authenticates and saves relevant data in the current conversation (sesion), such as user role, login time, etc. The server returns a session_id to the user, which is</description>
    </item>
    
    <item>
      <title>Kubernetes mounted subpath containers fail to mount when restarting after configmap changes</title>
      <link>https://www.sobyte.net/post/2022-01/pod-loopcrash-of-k8s-subpath/</link>
      <pubDate>Tue, 04 Jan 2022 20:46:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/pod-loopcrash-of-k8s-subpath/</guid>
      <description>Kubernetes has a problem with mounted subpath containers that continue to crash after configmap or other volume changes if the container quits unexpectedly and does not start properly.
Kubernetes has now released version 1.18 and this issue still exists.
Community-related issue #68211
Reproduction steps 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  ---apiVersion:v1kind:Pod metadata:name:test-podspec:volumes:- configMap:name:extra-cfgname:extra-cfgcontainers:- name:testimage:ubuntu:bioniccommand:[&amp;#34;sleep&amp;#34;,&amp;#34;30&amp;#34;]resources:requests:cpu:100mvolumeMounts:- name:extra-cfgmountPath:/etc/extra.</description>
    </item>
    
    <item>
      <title>Pod targeted migration support in Kubernetes</title>
      <link>https://www.sobyte.net/post/2022-01/k8s-pod-directional-migration/</link>
      <pubDate>Tue, 04 Jan 2022 20:37:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/k8s-pod-directional-migration/</guid>
      <description>Native K8s does not support migration of a given Pod from the current node to another given node. However, we can implement support for this feature based on the extension capabilities provided by K8s. Background In K8s, kube-scheduler is responsible for scheduling the Pods that need to be scheduled to a suitable node. It computes the best node to run the current Pod through various algorithms. When a new Pod</description>
    </item>
    
    <item>
      <title>Quickly editing Go struct tags under vim</title>
      <link>https://www.sobyte.net/post/2022-01/vim-go-struct-tag/</link>
      <pubDate>Tue, 04 Jan 2022 18:50:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-go-struct-tag/</guid>
      <description>I have written a previous article How to configure Vim&amp;rsquo;s Golang development environment. Go language jump completions use NeoVim&amp;rsquo;s built-in lsp functionality, so there is no need to integrate additional plugins. However, lsp does not seem to support adding or modifying tags to structs. My colleagues in the group started tinkering with it, and they found a small plugin developed in lua and introduced it to me. I thought about</description>
    </item>
    
    <item>
      <title>How to Configure Golang Development Environment for Vim</title>
      <link>https://www.sobyte.net/post/2022-01/go-vim/</link>
      <pubDate>Tue, 04 Jan 2022 18:35:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-vim/</guid>
      <description>Today we will introduce you how to configure Go development environment under Vim. If you are interested, you may want to give it a try. System Dependencies Before we start, we need a handy terminal emulation software. There are many such programs, but make sure to choose one that supports utf-8 encoding and 24-bit true color. Here I recommend. linux platform st macos platform iTerm2 window platform Windows Terminal There</description>
    </item>
    
    <item>
      <title>Go Language Generic Design</title>
      <link>https://www.sobyte.net/post/2022-01/go-language-generic-design/</link>
      <pubDate>Tue, 04 Jan 2022 18:04:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-language-generic-design/</guid>
      <description>After several years of work, the generic feature is finally going to follow the 1.18 release. This is a milestone. Considering that the original design document of Go generic is rather difficult and has a messy structure, I&amp;rsquo;ll compile my understanding into a document and share it with you today. Since there is a lot of content and my own understanding of the English design document is limited (especially the</description>
    </item>
    
    <item>
      <title>Go Language Generics Example</title>
      <link>https://www.sobyte.net/post/2022-01/go-language-generics-example/</link>
      <pubDate>Tue, 04 Jan 2022 17:22:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-language-generics-example/</guid>
      <description>Slicing Operations Functions like Map/Reduce/Filter are often used in functional programming. Because of generics, we can also write Map/Reduce/Filter functions that can be adapted to any type 😂.
All three of these functions are used to process sliced data, so Go officially wanted to provide a standard slices package. But it&amp;rsquo;s subject to Rob&amp;rsquo;s objection, so it has to go under exp package underneath.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  // The slices package implements a series of slicing algorithms.</description>
    </item>
    
    <item>
      <title>Basic usage of std::thread in C&#43;&#43;</title>
      <link>https://www.sobyte.net/post/2022-01/cpp-threads-usage/</link>
      <pubDate>Tue, 04 Jan 2022 17:15:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cpp-threads-usage/</guid>
      <description>C++11 introduces std::thread to make it easier to create and manage multiple threads, and this note briefly documents my learning process. This note is a brief record of my learning process, including the management of thread creation and related usage in classes. requirement In order to use std::thread we need to add &amp;lt;thread&amp;gt; as a header file, and if we use cmake for project compilation management, we need to add</description>
    </item>
    
    <item>
      <title>Enable Tab Search on your own blog</title>
      <link>https://www.sobyte.net/post/2022-01/tab-to-search/</link>
      <pubDate>Tue, 04 Jan 2022 13:19:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/tab-to-search/</guid>
      <description>Chrome has a feature where you can enter a domain name in the address bar and press the Tab key to enter a search. This makes it easy to search for a site&amp;rsquo;s content.

This feature is called Tab to Search. Of course, not every site supports it, as the search interface varies from site to site. However, this feature is not an adaptation of Chrome for well-known sites, but is implemented through an open standard OpenSearch description format .</description>
    </item>
    
    <item>
      <title>Passing file descriptors between processes via UNIX domain sockets </title>
      <link>https://www.sobyte.net/post/2022-01/pass-fd-over-domain-socket/</link>
      <pubDate>Tue, 04 Jan 2022 13:11:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/pass-fd-over-domain-socket/</guid>
      <description>Linux provides a series of system calls that allow us to pass file descriptors between processes. Instead of simply passing the file descriptor, which is a 32-bit integer, we actually pass the file handle to the target process so that it can read and write to the file. Now suppose process B wants to send a file descriptor to process A. Let&amp;rsquo;s see how to do that.
1. UNIX domain socket To pass file descriptors, you need to establish inter-process communication.</description>
    </item>
    
    <item>
      <title>Promise and Deferred</title>
      <link>https://www.sobyte.net/post/2022-01/promise-and-deferred/</link>
      <pubDate>Tue, 04 Jan 2022 13:02:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/promise-and-deferred/</guid>
      <description>1. Introduction In this article I want to discuss Promise in JavaScript and Deferred in Python Twisted (Deferred is also available in jQuery, and the idea is the same). They&amp;rsquo;re interesting, and a bit complicated. They played an important role in web programming before concurrency was widely used. Before that, let&amp;rsquo;s take a look at some basic concepts.
2. Starting with the request Requests and responses When we do network programming, we always use request and response .</description>
    </item>
    
    <item>
      <title>Why there are no more global variables in Lua 5.3</title>
      <link>https://www.sobyte.net/post/2022-01/lua53-environment/</link>
      <pubDate>Tue, 04 Jan 2022 12:26:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/lua53-environment/</guid>
      <description>I&amp;rsquo;ve been using Lua 5.1 in the past, and I don&amp;rsquo;t know much about _ENV in Lua 5.3. Recently, I used Lua 5.3 in a new project, so I looked into it. This article summarizes the meaning of the environment and global variables in Lua 5.3, _ENV and their usage.
Types of Lua variables Lua variables can be classified as local, upvalue and global variables. Anyone who has used Lua a lot should be familiar with it, as an example:</description>
    </item>
    
    <item>
      <title>Gzip format and DEFLATE compression algorithm</title>
      <link>https://www.sobyte.net/post/2022-01/gzip-and-deflate/</link>
      <pubDate>Tue, 04 Jan 2022 12:02:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/gzip-and-deflate/</guid>
      <description>1. Introduction When you type tar -zcf src.tar.gz src, you can package all the files under src into a tar.gz format. Here &amp;ldquo;tar&amp;rdquo; is the archive format, which combines multiple files into a single file, and &amp;ldquo;gz&amp;rdquo; refers to the gzip compression format, which uses the DEFLATE algorithm to compress. As the most widely used lossless compression algorithm, how does DEFLATE work and what are the principles behind it? In this article, we will discuss this issue.</description>
    </item>
    
    <item>
      <title>Build HTTPS service for free with Cloudflare</title>
      <link>https://www.sobyte.net/post/2022-01/cloudflare-free-https/</link>
      <pubDate>Tue, 04 Jan 2022 11:42:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cloudflare-free-https/</guid>
      <description>Cloudflare proxy HTTPS certificate is too expensive, a wildcard domain name certificate a year to spend at least a couple of thousand. So how to meet the needs of the general public to build a website? Cloudflare is a very good choice. Cloudflare is a CDN provider, can provide reverse proxy for the site. It does this by resolving the domain name to Cloudflare&amp;rsquo;s server (or proxy), and then the browser uses Cloudflare&amp;rsquo;s certificate to establish an SSL connection with the proxy; then the proxy will establish an SSL connection with the target server using a self-signed certificate, and the next data are forwarded by the proxy.</description>
    </item>
    
    <item>
      <title>Parsing syntax using LPeg</title>
      <link>https://www.sobyte.net/post/2022-01/lpeg/</link>
      <pubDate>Mon, 03 Jan 2022 11:47:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/lpeg/</guid>
      <description>LPeg is a pattern matching library for Lua. When I was first introduced to LPeg, I thought it was just another form of regular expression; I found out that it is much more powerful than regular expressions, and can easily match complex patterns that are difficult to match with regular expressions, and even parse syntax. In fact, LPeg is Parsing Expression Grammars for Lua, which is designed to parse grammars. LPeg makes it easy to parse all kinds of grammars, for example in 400 lines of code parsing Lua source code into abstract syntax trees.</description>
    </item>
    
    <item>
      <title>An interesting problem with the Lua next function</title>
      <link>https://www.sobyte.net/post/2022-01/lua-next/</link>
      <pubDate>Mon, 03 Jan 2022 11:34:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/lua-next/</guid>
      <description>Anyone familiar with Lua knows that Lua allows you to modify and delete elements in a for ... pairs loop. pairs` loops to modify and delete elements in a table. There is nothing wrong with the following code:
1 2 3 4 5 6  local t = {a = 1, b = 2, c = 3} for k, v in pairs(t) do if v == 1 then t[k] = nil end end   However, if we delete elements and add new elements while traversing, there will be a problem.</description>
    </item>
    
    <item>
      <title>Implementing a Socks5 Secure Proxy with Go</title>
      <link>https://www.sobyte.net/post/2022-01/go-socket5/</link>
      <pubDate>Mon, 03 Jan 2022 11:25:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-socket5/</guid>
      <description>I recently finished reading The Go Programming Language , and wanted to write something to practice. Go is more suitable for writing server software, and before that I learned Socks5 protocol, so I decided to write a Socks5 proxy server. The basic function is finished, part of the idea is referred to ginuerzh/gost. I named it Subsocks, sub- meaning under &amp;hellip; (similar to &amp;ldquo;subway&amp;rdquo;). The project Repository is here: lyuhuang/subsocks. Here&amp;rsquo;s an introduction and a brief summary of its implementation.</description>
    </item>
    
    <item>
      <title>Explaining the principle and implementation of KCP protocol</title>
      <link>https://www.sobyte.net/post/2022-01/kcp/</link>
      <pubDate>Mon, 03 Jan 2022 11:15:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/kcp/</guid>
      <description>1. Introduction KCP is a fast and reliable ARQ (Automatic Repeat-reQuest) protocol that uses a different automatic retransmission policy than TCP and has a lower network latency than TCP. In practice, KCP over UDP is often used instead of TCP for online games and audio/video transmission. The implementation of KCP is short and concise, which is good for learning. The ARQ mechanism of KCP is similar to TCP, but some</description>
    </item>
    
    <item>
      <title>Go sets up socket port multiplexing</title>
      <link>https://www.sobyte.net/post/2022-01/reuse-port/</link>
      <pubDate>Mon, 03 Jan 2022 11:08:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/reuse-port/</guid>
      <description>We know that, in general, TCP/UDP ports can only be bound to one socket. When we try to listen to a port that is already listened to by another process, the bind call fails and errno is set to 98 EADDRINUSE. This is also known as port occupation.
1 2 3 4 5 6 7 8 9 10  int fd1 = socket(AF_INET, SOCK_DGRAM, 0); int fd2 = socket(AF_INET, SOCK_DGRAM, 0); struct sockaddr_in addr = {0}; addr.</description>
    </item>
    
    <item>
      <title>Automatic generation of Lua hot update code</title>
      <link>https://www.sobyte.net/post/2022-01/hotfix-gen/</link>
      <pubDate>Mon, 03 Jan 2022 11:02:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/hotfix-gen/</guid>
      <description>One of the main reasons why game servers use Lua is that it is easy to hot update. Even if the server is running, you can rewrite some of its functions for hot update purposes by simply having it execute a piece of code. For example, the module app has a function foo
1 2 3 4 5 6 7  local M = {} function M.foo(a, b) return a + b end return M   If we want to hot change foo to multiply a and b, we just need to have the server load and run the following code:</description>
    </item>
    
    <item>
      <title>Jump Consistent Hash Algorithm </title>
      <link>https://www.sobyte.net/post/2022-01/jump-consistent-hash/</link>
      <pubDate>Mon, 03 Jan 2022 10:41:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/jump-consistent-hash/</guid>
      <description>In this article we discuss the Jump Consistent Hash algorithm, a minimalist and efficient consistent hashing algorithm.
Hashing and Consistent Hashing A hash function, or hash function, maps the elements of a large definition field into a small finite value field. The elements in the value domain are sometimes called buckets, and the size of the value domain is also referred to as the number of buckets.
MD5 is a common hash function that maps data of any size (the larger definition field) into a 16-byte hash (the smaller finite value field).</description>
    </item>
    
  </channel>
</rss>
