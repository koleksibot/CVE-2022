<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>solution on SoByte</title>
    <link>https://www.sobyte.net/categories/solution/</link>
    <description>Recent content in solution on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Oct 2021 20:04:51 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/categories/solution/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Universally Unique Identifier</title>
      <link>https://www.sobyte.net/post/2021-10/universally-unique-identifier/</link>
      <pubDate>Thu, 28 Oct 2021 20:04:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/universally-unique-identifier/</guid>
      <description>In complex distributed systems, it is often necessary to uniquely identify a large number of data and messages. A unique ID is needed to identify a piece of data or a message after the data is divided into libraries and tables, and the self-incrementing ID of the database obviously does not meet the demand at this time a system that can generate a globally unique ID is very necessary. To</description>
    </item>
    
    <item>
      <title>Safari does not support build-in custom elements for compatibility handling</title>
      <link>https://www.sobyte.net/post/2021-08/safari-buildin-custom-element-polyfill/</link>
      <pubDate>Tue, 17 Aug 2021 18:08:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/safari-buildin-custom-element-polyfill/</guid>
      <description>Safari browser does not support build-in custom elements, only anonymous custom elements.
Compatibility is shown in the following figure.
That is, Safari only supports the following HTML-formatted UI components by default.
1 2 3 4  &amp;lt;ui-tips&amp;gt;&amp;lt;/ui-tips&amp;gt; &amp;lt;ui-drop&amp;gt;&amp;lt;/ui-drop&amp;gt; &amp;lt;ui-tab&amp;gt;&amp;lt;/ui-tab&amp;gt; &amp;lt;ui-lighttip&amp;gt;&amp;lt;/ui-lighttip&amp;gt;   The following web components components, which extend on native HTML elements via the is attribute, are not supported.
1 2 3 4  &amp;lt;input is=&amp;#34;ui-color&amp;#34;&amp;gt; &amp;lt;select is=&amp;#34;ui-select&amp;#34;&amp;gt;&amp;lt;/select&amp;gt; &amp;lt;form is=&amp;#34;ui-form&amp;#34;&amp;gt;&amp;lt;/form&amp;gt; &amp;lt;table is=&amp;#34;ui-table&amp;#34;&amp;gt;&amp;lt;/table&amp;gt;   That&amp;rsquo;s a problem, otherwise great UI components are verbose and tedious when they can only be implemented using anonymous custom elements.</description>
    </item>
    
    <item>
      <title>Golang - Number of Threads in the Running Program</title>
      <link>https://www.sobyte.net/post/2021-06/golang-number-of-threads-in-the-running-program/</link>
      <pubDate>Tue, 29 Jun 2021 11:05:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/golang-number-of-threads-in-the-running-program/</guid>
      <description>Programmers who are a little bit introduced to the Go language know that the GOMAXPROCS variable can limit the maximum number of threads that can concurrently run the user-state Go code operating system, and you can even change the size of the maximum number of threads at program runtime by calling the function func GOMAXPROCS(n int) int, but when you read the documentation further, or more When you read the documentation further, or go deeper into Go language development, you will find that the actual number of threads is larger than the number you set, sometimes much larger than the value you set, and even more tragically, even when your concurrent tasks are backed up to no more than a few, the number of threads has not come down, wasting memory space and CPU scheduling for nothing.</description>
    </item>
    
    <item>
      <title>Fixing the Problem of Lost Code After Git Revert and Merge Again</title>
      <link>https://www.sobyte.net/post/2021-06/fixing-the-problem-of-lost-code-after-git-revert-and-merge-again/</link>
      <pubDate>Sun, 27 Jun 2021 17:53:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/fixing-the-problem-of-lost-code-after-git-revert-and-merge-again/</guid>
      <description>Our project uses GitLab for code management, and when I upgraded the system to SpringBoot 2.0, the branch was merged to the Master branch. During the actual deployment, I found that a child dependency of a two-party package that I depended on had not been upgraded, causing a service to fail to drop through. Since it took time to fix the bipartite package, we decided to Revert the Master branch in order not to affect the subsequent release of other features.</description>
    </item>
    
    <item>
      <title>Analysis of the Problems Caused by Replacing Fastjson With Gson</title>
      <link>https://www.sobyte.net/post/2021-06/analysis-of-the-problems-caused-by-replacing-fastjson-with-gson/</link>
      <pubDate>Fri, 18 Jun 2021 12:04:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/analysis-of-the-problems-caused-by-replacing-fastjson-with-gson/</guid>
      <description>The security vulnerability of Json serialization framework has always been a topic of conversation among programmers, especially in the past two years, fastjson has been targeted research, and more frequently reported vulnerabilities, a vulnerability does not matter, but the security team is always using email to urge the online application to upgrade the dependency, which can be fatal, I believe that many people are also unbearable, consider using other serialization framework to replace fastjson.</description>
    </item>
    
  </channel>
</rss>
