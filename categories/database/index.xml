<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on SoByte</title>
    <link>https://www.sobyte.net/categories/database/</link>
    <description>Recent content in database on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 20 Nov 2021 15:15:55 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/categories/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tree structured data database storage solution</title>
      <link>https://www.sobyte.net/post/2021-11/storing-trees-in-rdbms/</link>
      <pubDate>Sat, 20 Nov 2021 15:15:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/storing-trees-in-rdbms/</guid>
      <description>In the program development, we often encounter a tree structure to represent the relationship between certain data, such as the organizational structure of the enterprise, the classification of goods, operation columns, etc., the current relational database is to store data in the form of two-dimensional table records, and the tree structure of the data must be stored in the two-dimensional table Schema design. Recently, we have been interested in this</description>
    </item>
    
    <item>
      <title>Navicat Premium Database Account Password Decryption</title>
      <link>https://www.sobyte.net/post/2021-09/navicat-database-account-password-decryption/</link>
      <pubDate>Sun, 19 Sep 2021 16:19:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/navicat-database-account-password-decryption/</guid>
      <description>If you want to crack the password of an already connected database, you can refer to this method.
First of all, check the properties of the database that is already connected like this
But the password is ****** who can not read, the blogger also downloaded from the site to use some broken password crackers and other things, all to no avail.
The next step is to try to export these connection properties, select the file &amp;mdash;-&amp;gt;Export Connection, check the database you want to export, export the .</description>
    </item>
    
    <item>
      <title>MySQL Paging Sorting with Data Duplication Problem (MySQL Priority Queue)</title>
      <link>https://www.sobyte.net/post/2021-09/mysql-paging-sorting-data-duplicates/</link>
      <pubDate>Sun, 19 Sep 2021 16:01:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/mysql-paging-sorting-data-duplicates/</guid>
      <description>MySQL Version: 5.7.18
Problem Assuming that the field category is not indexed and has duplicate values, the combination of order by category and limit will not work as expected.
Scene Reproduction Table structure (reproduce the problem, two fields are enough ~)
1  Tablestructure(reproducetheproblem,twofieldsareenough~)  Sort all data by the category field: select * from ratings order by category ;
   id category     1 1   5 1   10 1   3 2   4 2   6 2   9 2   2 3   7 3   8 3    When we want to paginate the first 5 items use select * from ratings order by category limit 5 ;</description>
    </item>
    
    <item>
      <title>Redis6 Client Side Caching Features and Practices</title>
      <link>https://www.sobyte.net/post/2021-07/redis6-client-side-caching-features-and-practices/</link>
      <pubDate>Fri, 16 Jul 2021 10:33:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/redis6-client-side-caching-features-and-practices/</guid>
      <description>Redis 6.0 has been released more than a year ago.
The new features in Redis 6.0 have been identified through step-by-step discussions and optimizations.
Many of these features have already been introduced in previous releases such as RC.
However, there are some new changes in the official GA release:
 SSL ACL: better, command support RESP3 Client side caching: redesigned Threaded I/O Diskless replication on replicas Cluster support in Redis-benchmark and improved redis-cli cluster support Disque in beta as a module of Redis: starting to invade the message queue space Redis Cluster Proxy Support for immediate deletion when the RDB is no longer in use, for scenarios where the disk is not dropped PSYNC2: Optimized replication protocol More friendly timeout setting support Faster RDB loading, 20% ~ 30% improvement STRALGO, new string command, currently only one implementation of LCS (longest common subsequence)  @antirez mentioned that it was only the largest version update in Redis history, so it was prudent to recommend more testing and evaluation of the product in the application, and promised to release version 6.</description>
    </item>
    
    <item>
      <title>MySQL Crash Safe</title>
      <link>https://www.sobyte.net/post/2021-07/mysql-crash-safe/</link>
      <pubDate>Mon, 12 Jul 2021 10:03:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/mysql-crash-safe/</guid>
      <description>The MySQL master-slave architecture has been widely used, and the stability of the master-slave replication relationship is a constant concern.
MySQL 5.6 provides a new feature for master-slave replication stability: slave support crash-safe. This feature can solve the problem of relay_log.info bit inaccuracy caused by abnormal power failure in previous versions.
In this article, we will introduce this feature in terms of principle, parameters, and new issues.
Translated with www.DeepL.com/Translator (free version)</description>
    </item>
    
    <item>
      <title>Various Database Connection Strings Commonly Used by Go</title>
      <link>https://www.sobyte.net/post/2021-07/various-database-connection-strings-commonly-used-by-go/</link>
      <pubDate>Thu, 01 Jul 2021 17:27:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/various-database-connection-strings-commonly-used-by-go/</guid>
      <description>1. Relational Databases 1.1 MySQL  https://github.com/go-sql-driver/mysql/
 1 2 3 4 5 6 7 8 9 10 11 12  [username[:password]@][protocol[(address)]]/dbname[?param1=value1&amp;amp;...Â¶mN=valueN] // user@unix(/path/to/socket)/dbname // root:pw@unix(/tmp/mysql.sock)/myDatabase?loc=Local // user:password@tcp(localhost:5555)/dbname?tls=skip-verify&amp;amp;autocommit=true // user:password@/dbname?sql_mode=TRADITIONAL // user:password@tcp([de:ad:be:ef::ca:fe]:80)/dbname?timeout=90s&amp;amp;collation=utf8mb4_unicode_ci // id:password@tcp(your-amazonaws-uri.com:3306)/dbname // user@cloudsql(project-id:instance-name)/dbname // user@cloudsql(project-id:regionname:instance-name)/dbname // user:password@tcp/dbname?charset=utf8mb4,utf8&amp;amp;sys_var=esc%40ped // user:password@/dbname // user:password@/   1.2 Postgres (pure Go)  https://github.com/lib/pq
 1 2 3 4 5 6 7 8 9  postgres://[user[:password]@][netloc][:port][,...][/dbname][?param1=value1&amp;amp;...] postgres:// postgres://localhost postgres://localhost:5433 postgres://localhost/mydb postgres://user@localhost postgres://user:secret@localhost postgres://other@localhost/otherdb?</description>
    </item>
    
    <item>
      <title>PostgreSQL Jsonpath Usage in Practice</title>
      <link>https://www.sobyte.net/post/2021-06/postgresql-jsonpath-usage-in-practice/</link>
      <pubDate>Thu, 17 Jun 2021 21:28:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/postgresql-jsonpath-usage-in-practice/</guid>
      <description>jsonpath is a tool used to parse json data, similar to xpath, jsonpath can parse very complex json data.
PostgreSQL json development history. postgreSQL has supported json data type since 9.2, but due to the poor performance of parsing json data, it is not favored by everyone, but choose to use nosql database instead. So from pg9.4 onwards, the jsonb data type was supported. Compared to the json type, jsonb does not need to be parsed every time it is used, so the performance is much improved, and it also supports index queries and so on.</description>
    </item>
    
    <item>
      <title>Redis Expired Key Removal Policy</title>
      <link>https://www.sobyte.net/post/2021-06/redis-expired-key-removal-policy/</link>
      <pubDate>Sun, 13 Jun 2021 17:20:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/redis-expired-key-removal-policy/</guid>
      <description>Redis stores key-value pairs, where the keys are strings and the values are of various types, such as string, list, hash, set, sorted set, and so on. When setting a key-value pair, we should also set the expiration time for it, which can be set by expire and pexpire commands, or by setnx command. So, after setting the expiration time, how exactly do you delete the expired key-value pairs? To find out, let&amp;rsquo;s take a look at Redis&#39; expired key deletion policy.</description>
    </item>
    
  </channel>
</rss>
