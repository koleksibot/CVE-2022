<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>https on SoByte</title>
    <link>https://www.sobyte.net/tags/https/</link>
    <description>Recent content in https on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 08 Jan 2022 13:14:10 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/https/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prevent HTTPS from exposing the domain name bound on the server</title>
      <link>https://www.sobyte.net/post/2022-01/prevent-https-from-exposing-the-domain-name-bound-on-the-server/</link>
      <pubDate>Sat, 08 Jan 2022 13:14:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/prevent-https-from-exposing-the-domain-name-bound-on-the-server/</guid>
      <description>When we use CDN services such as CloudFlare, in addition to the function of saving traffic and speeding up access, an important function is to prevent exposing the real IP of the website, but if your NGINX is not properly configured, direct access to the server&amp;rsquo;s IP using the HTTPS protocol will expose a certificate pointing to a domain name on the server, which will be scanned by some Some services that scan the entire network for IP addresses get the correspondence between the domain name and the IP.</description>
    </item>
    
    <item>
      <title>Introduction to DNS SVCB/HTTPS records</title>
      <link>https://www.sobyte.net/post/2022-01/dns-svcb-https/</link>
      <pubDate>Fri, 07 Jan 2022 11:03:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/dns-svcb-https/</guid>
      <description>The IETF is introducing a new type of record for DNS called SVCB/HTTPS. this SVCB/HTTPS record can solve some very important problems and I have been following the advancement of the standard. Today I&amp;rsquo;ll give you an introduction.
1987 CNAME records The DNS system first supported CNAME records in 1987 (RFC 1034), which means canonical name in Chinese. For example, we can set the a.example.com record type to CNAME and its value to b.</description>
    </item>
    
    <item>
      <title>Build HTTPS service for free with Cloudflare</title>
      <link>https://www.sobyte.net/post/2022-01/cloudflare-free-https/</link>
      <pubDate>Tue, 04 Jan 2022 11:42:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/cloudflare-free-https/</guid>
      <description>Cloudflare proxy HTTPS certificate is too expensive, a wildcard domain name certificate a year to spend at least a couple of thousand. So how to meet the needs of the general public to build a website? Cloudflare is a very good choice. Cloudflare is a CDN provider, can provide reverse proxy for the site. It does this by resolving the domain name to Cloudflare&amp;rsquo;s server (or proxy), and then the browser uses Cloudflare&amp;rsquo;s certificate to establish an SSL connection with the proxy; then the proxy will establish an SSL connection with the target server using a self-signed certificate, and the next data are forwarded by the proxy.</description>
    </item>
    
    <item>
      <title>Understanding HTTPS principles, SSL/TLS protocols in detail</title>
      <link>https://www.sobyte.net/post/2021-12/https-ssl-tls/</link>
      <pubDate>Tue, 14 Dec 2021 16:10:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/https-ssl-tls/</guid>
      <description>Introduction to SSL/TLS When we use the HTTP protocol, the data transmitted is insecure, because all data going to and from the client and the server is in plaintext:.
 Third parties can get access to the real data Third parties can tamper with the data Third parties can impersonate the server or client  The full name of HTTPS is Hypertext Transfer Protocol Secure, which is used to exchange information securely (secure communication) between two end systems on a computer network, which is equivalent to adding a Secure secure word eye to HTTP, then we can give a HTTPS definition: HTTPS is a protocol and specification for secure transmission of text, images, audio, video and other hypertext data between two points in the computer world.</description>
    </item>
    
    <item>
      <title>Why HTTPS requires 7 handshakes and 9x latency</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-https-latency/</link>
      <pubDate>Tue, 07 Dec 2021 14:44:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-https-latency/</guid>
      <description>HTTP (Hypertext Transfer Protocol) has become the most commonly used application layer protocol on the Internet, however, it is only a network protocol for transmitting hypertext and does not provide any security guarantees, using plaintext to transmit packets over the Internet makes eavesdropping and man-in-the-middle attacks possible. Transmitting passwords over HTTP is actually similar to running around naked on the Internet.
Netscape designed the HTTPS protocol in 1994 to secure data transfers using Secure Sockets Layer (SSL), and with the development of Transport Layer Security (TLS), we now use TLS instead of the deprecated SSL protocol, although the term SSL certificate is still used.</description>
    </item>
    
    <item>
      <title>Local https quick solution - mkcert</title>
      <link>https://www.sobyte.net/post/2021-08/local-https-solution/</link>
      <pubDate>Mon, 16 Aug 2021 19:01:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/local-https-solution/</guid>
      <description>In Local Development, sometimes we often need to emulate an https environment, for example, PWA applications that require https access. In the traditional solution, we need to use self-signed certificate, and then use self-signed certificate in http server. Since self-signed certificates are not trusted by browsers, to solve the browser trust problem we need to add the CA certificate used by self-signed certificates to the trusted CA certificate of the</description>
    </item>
    
  </channel>
</rss>
