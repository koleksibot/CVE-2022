<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tcp on SoByte</title>
    <link>https://www.sobyte.net/tags/tcp/</link>
    <description>Recent content in tcp on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 13 Feb 2022 11:08:23 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Does the original TCP connection still exist after disconnecting the network cable?</title>
      <link>https://www.sobyte.net/post/2022-02/tcp-connection/</link>
      <pubDate>Sun, 13 Feb 2022 11:08:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/tcp-connection/</guid>
      <description>Today, let&amp;rsquo;s talk about an interesting question: Unplug the cable for a few seconds, then plug it back in, does the original TCP connection still exist?
Some people may say that if the cable is unplugged, it means the physical layer is disconnected, so the upper transport layer should also be disconnected, so the original TCP connection will not exist. Just like when we make a wired phone call, if one party&amp;rsquo;s phone line is unplugged, the call is completely disconnected.</description>
    </item>
    
    <item>
      <title>TCP/IP protocol optimisation for large websites</title>
      <link>https://www.sobyte.net/post/2022-01/tcp-ip-optimisation-websites/</link>
      <pubDate>Thu, 13 Jan 2022 13:14:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/tcp-ip-optimisation-websites/</guid>
      <description>As a site with millions or tens of millions of DAUs, it is not only necessary to optimize the web application and database, but also the TCP/IP protocol layer.
In my work, I have used the following basic optimisation approaches.
Increasing the maximum number of connections In Linux, all network connections are made via file descriptors, so the number of file descriptors a process can open determines the maximum number of connections it can create.</description>
    </item>
    
    <item>
      <title>Analysis of efficiency issues of TCP-based VPNs</title>
      <link>https://www.sobyte.net/post/2022-01/vpn-over-tcp/</link>
      <pubDate>Fri, 07 Jan 2022 10:44:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vpn-over-tcp/</guid>
      <description>I have recently been working on the implementation of the AnyConnect protocol and service, an enterprise virtual private network (VPN) system developed by Cisco, and one of its core selling points is the UDP-based DTLS channel. In this article, we&amp;rsquo;ll analyze why UDP is used to transport VPN data.
VPNs work at the network layer, and all that is transmitted over the VPN tunnel is IP packets, which are unreliable. To achieve reliable transmission, we need to use TCP protocol.</description>
    </item>
    
    <item>
      <title>TCP-based application layer protocol design</title>
      <link>https://www.sobyte.net/post/2022-01/application-layer-protocol/</link>
      <pubDate>Sun, 02 Jan 2022 13:06:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/application-layer-protocol/</guid>
      <description>Many people, including myself, have long believed that TCP-based application layer protocols are simple and only require a packet header. Because TCP is a reliable protocol, it ensures that data reaches the other side in an orderly and error-free manner; it is just stream-oriented and does not preserve message boundaries, so we only need to define protocol packet headers that can distinguish individual datagrams. However, this is wrong: the transport layer protocol is limited in what it can do, and the application layer protocol can do much more than encapsulate a packet header.</description>
    </item>
    
    <item>
      <title>Why the TCP protocol has performance problems</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-tcp-performance/</link>
      <pubDate>Thu, 09 Dec 2021 15:05:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-tcp-performance/</guid>
      <description>The TCP protocol is arguably the cornerstone of today&amp;rsquo;s Internet, and as a reliable transport protocol, almost all data is transmitted over TCP today. However, TCP was not designed with today&amp;rsquo;s complex network environment in mind, and when you are tormented by intermittent networks on the subway or train, you may not even know that it may all be caused by the TCP protocol. This article will analyze why the TCP protocol has serious performance problems in weak network environments</description>
    </item>
    
    <item>
      <title>Why TCP protocol has sticky packet problem</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-tcp-message-frame/</link>
      <pubDate>Mon, 06 Dec 2021 15:37:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-tcp-message-frame/</guid>
      <description>The TCP/IP protocol cluster establishes a conceptual model for communication protocols in the Internet, and the two main protocols in the cluster are TCP and IP. TCP in the TCP/IP protocol cluster guarantees the reliability and order of data segments, and with a reliable transport layer protocol, application layer protocols can directly use TCP to transfer data without the need to care about Loss and duplication of data segments
The IP protocol solves the routing and transmission of packets, and the upper layer TCP protocol is no longer concerned with routing and addressing.</description>
    </item>
    
    <item>
      <title>Why does the TCP protocol have a TIME_WAIT state?</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-tcp-time-wait/</link>
      <pubDate>Mon, 06 Dec 2021 15:18:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-tcp-time-wait/</guid>
      <description>The TCP protocol contains 11 different states, and the TCP connection transitions states based on the messages sent or received. The state machine shown below illustrates all possible transitions, including not only the state transition process under normal conditions, but also the state transition under abnormal conditions.
Both parties communicating using the TCP protocol will trigger the TIME_WAIT state when closing the connection. The operation of closing the connection actually tells the other party to the communication that it has no data to send, but it still maintains the ability to receive data from the other party, a common process of closing the connection is as follows.</description>
    </item>
    
    <item>
      <title>Tcp Network Programming Best Practices</title>
      <link>https://www.sobyte.net/post/2021-06/tcp-network-programming-best-practices/</link>
      <pubDate>Mon, 14 Jun 2021 11:29:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/tcp-network-programming-best-practices/</guid>
      <description>This article is based on years of TCP network programming experience of youzan middleware team. The purpose of this article is to avoid various unintended behaviors of applications due to various network anomalies, which can cause unintended effects and affect system stability and reliability. This document does not cover the basics of TCP, but mainly summarizes some of the problems that may be encountered in TCP network programming practice, as</description>
    </item>
    
  </channel>
</rss>
