<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ast on SoByte</title>
    <link>https://www.sobyte.net/tags/ast/</link>
    <description>Recent content in ast on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Feb 2022 10:24:16 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/ast/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting to Know the Power of Ast</title>
      <link>https://www.sobyte.net/post/2022-02/getting-to-know-the-power-of-ast/</link>
      <pubDate>Tue, 08 Feb 2022 10:24:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/getting-to-know-the-power-of-ast/</guid>
      <description>The abstract syntax tree is an intermediate product of the compilation process, and is generally just a simple thing to understand. But we can take the whole parser and ast package from Go and use it directly, which can be very powerful in some scenarios. What is ast? I took an excerpt from Wikipedia. In computer science, an Abstract Syntax Tree (AST), or Syntax tree for short, is an abstract</description>
    </item>
    
  </channel>
</rss>
