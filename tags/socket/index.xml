<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>socket on SoByte</title>
    <link>https://www.sobyte.net/tags/socket/</link>
    <description>Recent content in socket on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 04 Jan 2022 13:11:27 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/socket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Passing file descriptors between processes via UNIX domain sockets </title>
      <link>https://www.sobyte.net/post/2022-01/pass-fd-over-domain-socket/</link>
      <pubDate>Tue, 04 Jan 2022 13:11:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/pass-fd-over-domain-socket/</guid>
      <description>Linux provides a series of system calls that allow us to pass file descriptors between processes. Instead of simply passing the file descriptor, which is a 32-bit integer, we actually pass the file handle to the target process so that it can read and write to the file. Now suppose process B wants to send a file descriptor to process A. Let&amp;rsquo;s see how to do that.
1. UNIX domain socket To pass file descriptors, you need to establish inter-process communication.</description>
    </item>
    
  </channel>
</rss>
