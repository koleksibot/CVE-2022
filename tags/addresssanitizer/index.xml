<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>addresssanitizer  on SoByte</title>
    <link>https://www.sobyte.net/tags/addresssanitizer/</link>
    <description>Recent content in addresssanitizer  on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Jan 2022 10:08:55 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/addresssanitizer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AddressSanitizer - A tool for programmers to detect memory access errors</title>
      <link>https://www.sobyte.net/post/2022-01/asan-intro/</link>
      <pubDate>Mon, 10 Jan 2022 10:08:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/asan-intro/</guid>
      <description>Memory access errors are the most common software errors that often cause program crashes. The AddressSanitizer tool, developed by Google engineers in 2012, has become the first choice of C/C++ programmers for its wide coverage, high efficiency and low overhead. Here is a brief introduction to its principle and usage.
Tools Overview The C/C++ language allows programmers to have low-end control over memory, and this direct memory management has made it possible to write efficient application software.</description>
    </item>
    
  </channel>
</rss>
