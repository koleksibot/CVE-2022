<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>http on SoByte</title>
    <link>https://www.sobyte.net/tags/http/</link>
    <description>Recent content in http on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 21 Jan 2022 15:48:53 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analysis of the Go language HTTP standard library</title>
      <link>https://www.sobyte.net/post/2022-01/go-http/</link>
      <pubDate>Fri, 21 Jan 2022 15:48:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-http/</guid>
      <description>This article looks at how the Go language HTTP standard library is implemented. The HTTP-based service standard model consists of two ends, a client (&amp;lsquo;Client&amp;rsquo;) and a server (&amp;lsquo;Server&amp;rsquo;). HTTP requests are sent from the client, and the server receives the request, processes it and returns the response to the client. So the job of the HTTP server is to accept requests from the client and return a response to</description>
    </item>
    
    <item>
      <title>Understanding multipart/form-data in HTTP protocol</title>
      <link>https://www.sobyte.net/post/2021-12/learn-about-http-multipart-form-data/</link>
      <pubDate>Thu, 30 Dec 2021 09:39:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/learn-about-http-multipart-form-data/</guid>
      <description>I encountered the problem of encapsulating the Media type multipart/form-data when writing a generic HTTP component. This article briefly introduces the definition, application and simple implementation of the media type multipart/form-data in the HTTP protocol. Definition of multipart/form-data The media type multipart/form-data follows the multipart MIME data stream definition (which can be found in Section 5.1 - RFC2046), which roughly means that the data body of the media type multipart/form-data</description>
    </item>
    
    <item>
      <title>HTTP protocol evolution and features of each version</title>
      <link>https://www.sobyte.net/post/2021-12/http/</link>
      <pubDate>Wed, 22 Dec 2021 16:15:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/http/</guid>
      <description>Recently, I&amp;rsquo;ve been learning about TCP/IP, and I&amp;rsquo;ve found that most of the HTTP-related content is very old. Many of the materials are not updated with the HTTP version. So I took the time to do some simple organization. HTTP&amp;rsquo;s Past Life Saga Before the HTTP protocol was defined, Berners-Lee had already proposed the hypertext idea and eventually implemented the earliest hypertext systems. 1980 - The Birth of the Hypertext</description>
    </item>
    
    <item>
      <title>How to Install an HTTP Git Server on Debian 11 Using Nginx</title>
      <link>https://www.sobyte.net/post/2021-12/debian-git-http-nginx/</link>
      <pubDate>Sun, 19 Dec 2021 15:23:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/debian-git-http-nginx/</guid>
      <description>Git is an open source version control system used by thousands of developers around the world to track your software changes at the source code level. It allows you to track changes, revert them to a previous stage and create alternate versions of files and directories.
HTTP Git Server is an open source project that uses an Nginx web server to serve Git repositories over a local area network (LAN). It&amp;rsquo;s simple and easy to set up, and anyone can manage it from a command-line interface.</description>
    </item>
    
  </channel>
</rss>
