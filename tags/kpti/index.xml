<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kpti on SoByte</title>
    <link>https://www.sobyte.net/tags/kpti/</link>
    <description>Recent content in kpti on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 09 Jan 2022 10:17:09 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/kpti/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KPTI mechanism in xv6-riscv</title>
      <link>https://www.sobyte.net/post/2022-01/xv6-riscv-kpti/</link>
      <pubDate>Sun, 09 Jan 2022 10:17:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/xv6-riscv-kpti/</guid>
      <description>KPTI in a Nutshell The KPTI (Kernel Page Table Isolation) mechanism was originally designed to mitigate KASLR bypass and CPU-side channel attacks.
In the KPTI mechanism, the isolation of memory in kernel state space from user state space has been further enhanced.
 The page table in the kernel state includes the page table of user-space memory and the page table of kernel-space memory. The page table in the user state includes only the page table of user space memory and the page table of kernel space memory as necessary, such as the memory used for handling system calls, interrupts, and other information.</description>
    </item>
    
  </channel>
</rss>
