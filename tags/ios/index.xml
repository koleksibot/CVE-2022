<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ios on SoByte</title>
    <link>https://www.sobyte.net/tags/ios/</link>
    <description>Recent content in ios on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 21 Feb 2022 09:55:40 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IOS NSURLProtocol Explained and Pitfalls of Use</title>
      <link>https://www.sobyte.net/post/2022-02/nsurlprotocol/</link>
      <pubDate>Mon, 21 Feb 2022 09:55:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nsurlprotocol/</guid>
      <description>If you want to intervene in network requests, a good choice is to use NSURLProtocol, a feature of the iOS URL Loading System that provides a convenient interface to allow developers to redefine the behavior of network requests, including modifying the request initiation and response actions. In iOS web development, if there is a need for something like. adding specific header or parameters to global requests. request redirection, MOCK request</description>
    </item>
    
    <item>
      <title>IOS Method Swizzling Usage Pitfalls</title>
      <link>https://www.sobyte.net/post/2022-02/method-swizzling/</link>
      <pubDate>Mon, 21 Feb 2022 09:46:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/method-swizzling/</guid>
      <description>While reading the source code of a team project, I found some flaws in the way Method Swizzling is written. This article is about what the correct way to write iOS Method Swizzling should look like. Here is an implementation of iOS Method Swizzling. 1 2 3 4 5 6 7 8 9 10 11 + (void)load { Class class = [self class]; SEL fromSelector = @selector(func); SEL toSelector =</description>
    </item>
    
    <item>
      <title>iOS WKWebView detailed explanation and JS Bridge synchronization call problem</title>
      <link>https://www.sobyte.net/post/2022-02/ios-wkwebview/</link>
      <pubDate>Sat, 19 Feb 2022 12:42:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/ios-wkwebview/</guid>
      <description>WKWebView is the browser component used to replace UIWebView after iOS 8.0. Compared with UIWebView, WKWebView has higher performance, supports more HTML5 features and has more detailed control. This article briefly introduces the use of UIWebView and the synchronous interaction between JS and native APP. WKWebView 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    
    <item>
      <title>App Deep Linking and Delayed Deep Linking</title>
      <link>https://www.sobyte.net/post/2022-01/deep-link-deferred-deeplink/</link>
      <pubDate>Wed, 19 Jan 2022 13:18:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/deep-link-deferred-deeplink/</guid>
      <description>APP Wakeup and Scene Restoration In App launch promotion, waking up users is a common operation strategy. To get users active again and convert their behavior, the path of users must be restored from the scene to find the mystery of user growth from the root. In this era of advertising, I believe most users have encountered a similar scenario when using an app: when using an information app, they</description>
    </item>
    
    <item>
      <title>Android/iOS determine whether to use a proxy or VPN</title>
      <link>https://www.sobyte.net/post/2022-01/android-ios-proxy-vpn/</link>
      <pubDate>Sat, 08 Jan 2022 13:23:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/android-ios-proxy-vpn/</guid>
      <description>For the black industry of APP, we mentioned that some users will bypass the wind control strategy by changing IP. A more convenient way to change IP is to use proxy IP or VPN. In testing APP security is required to make a judgment on whether to use the code and VPN. The following is a compilation of some codes for reference. Android determine whether to use proxy IP 1</description>
    </item>
    
    <item>
      <title>Code to determine if IOS is jailbroken</title>
      <link>https://www.sobyte.net/post/2021-12/ios-jailbreak-check/</link>
      <pubDate>Fri, 31 Dec 2021 13:04:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/ios-jailbreak-check/</guid>
      <description>&amp;ldquo;Jailbreaking&amp;rdquo; has existed since the Appstore was evaluated, when many people jailbroken in order to install paid applications or games. With the richness of Appstore applications and the increase of free APPs, there are few users who jailbreak their phones in order to sacrifice their security. On the other hand, jailbroken devices can install any software or script at will, which also brings the door of convenience to the black</description>
    </item>
    
  </channel>
</rss>
