<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on SoByte</title>
    <link>https://www.sobyte.net/tags/git/</link>
    <description>Recent content in git on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Mar 2022 11:04:23 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A deeper understanding of the git cherry-pick operation</title>
      <link>https://www.sobyte.net/post/2022-03/git-cherry-pick-intro/</link>
      <pubDate>Thu, 03 Mar 2022 11:04:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/git-cherry-pick-intro/</guid>
      <description>In the previous articles on advanced Git usage, we&amp;rsquo;ve learned how Git works and how to use rebase, merge, checkout, reset, etc. Basically, you can use Git without fear, and you can comfortably modify your commit history without losing any You can change your commit history without losing anything. Today, we&amp;rsquo;re going to add the final piece to the puzzle and learn about the cherry-pick command, which is not used in many scenarios, but can work wonders.</description>
    </item>
    
    <item>
      <title>Git rebase Usage Details and How it Works</title>
      <link>https://www.sobyte.net/post/2022-03/git-rebase-intro/</link>
      <pubDate>Thu, 03 Mar 2022 10:27:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/git-rebase-intro/</guid>
      <description>I had no idea about the use of git rebase -i, but once I needed to merge multiple commits, I almost lost all my commits, but luckily I was able to recover them later. So let&amp;rsquo;s document the process of learning the rebase command. Understanding the Rebase Command The documentation for the git rebase command is Reapply commits on top of another base tip, which literally means reapply commits on</description>
    </item>
    
    <item>
      <title>A deeper understanding of git merge operations</title>
      <link>https://www.sobyte.net/post/2022-03/git-merge-intro/</link>
      <pubDate>Thu, 03 Mar 2022 09:55:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/git-merge-intro/</guid>
      <description>Merging is a very common operation in Git: you can merge changes between branches, or perform pull and push operations on remote branches.
However, the git merge command can be a bit daunting for newcomers, because you can get different results from running merge in different situations. This uncertainty about the results has kept me from actively using it for a long time, and I&amp;rsquo;ve relied on visual interfaces like GitHub&amp;rsquo;s Pull Request or GitLab&amp;rsquo;s Merge Request to merge manually.</description>
    </item>
    
    <item>
      <title>The History of Version Control with Go: It Started with SVN and Ended with Git</title>
      <link>https://www.sobyte.net/post/2022-02/go-version-contro/</link>
      <pubDate>Fri, 18 Feb 2022 09:29:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/go-version-contro/</guid>
      <description>Go development team technical leader Russ Cox (rsc) post describes the history of version control for Go. The reason is that every once in a while, someone always uses the following code to indicate that the first commit of Go was in 1972.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  % git log --reverse --stat commit 7d7c6a97f815e9279d08cfaea7d5efb5e90695a8 Author: Brian Kernighan &amp;lt;bwk&amp;gt; AuthorDate: Tue Jul 18 19:05:45 1972 -0500 Commit: Brian Kernighan &amp;lt;bwk&amp;gt; CommitDate: Tue Jul 18 19:05:45 1972 -0500 hello, world R=ken DELTA=7 (7 added, 0 deleted, 0 changed) src/pkg/debug/macho/testdata/hello.</description>
    </item>
    
    <item>
      <title>Git: Failed sending HTTP2 data solution</title>
      <link>https://www.sobyte.net/post/2022-01/git-failed-sending-http2-data/</link>
      <pubDate>Wed, 19 Jan 2022 10:25:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/git-failed-sending-http2-data/</guid>
      <description>In recent times I&amp;rsquo;ve noticed strange errors in Git Clone on my Debian machine, and after a bit of Googling I&amp;rsquo;ve finally discovered that it&amp;rsquo;s a bug in the libcurl3-gnutls library.
2021-10-01 Update: Buster-backports has not yet fixed this issue, but Bullseye has incorporated a new version that does.
2021-06-19 Update: The fix is still not incorporated into backports, and the problem seems to be due to a problem with the TLSv1.</description>
    </item>
    
    <item>
      <title>How to Install an HTTP Git Server on Debian 11 Using Nginx</title>
      <link>https://www.sobyte.net/post/2021-12/debian-git-http-nginx/</link>
      <pubDate>Sun, 19 Dec 2021 15:23:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/debian-git-http-nginx/</guid>
      <description>Git is an open source version control system used by thousands of developers around the world to track your software changes at the source code level. It allows you to track changes, revert them to a previous stage and create alternate versions of files and directories.
HTTP Git Server is an open source project that uses an Nginx web server to serve Git repositories over a local area network (LAN). It&amp;rsquo;s simple and easy to set up, and anyone can manage it from a command-line interface.</description>
    </item>
    
    <item>
      <title>Using DropBox as a Private Git Repository</title>
      <link>https://www.sobyte.net/post/2021-12/using-dropbox-as-git-remote-rep/</link>
      <pubDate>Sat, 18 Dec 2021 11:29:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/using-dropbox-as-git-remote-rep/</guid>
      <description>I. Preface I&amp;rsquo;ve been working on some small projects that I can&amp;rsquo;t easily make public on GitHub, but I wanted to have a simple private repository.
So I came up with DropBox.
However, we couldn&amp;rsquo;t simply put the project in the DropBox directory, because that would cause every simple save to initiate a file sync, and some temporary file changes during compilation would cause the DropBox to sync, which would drive the CPU usage of the computer very high.</description>
    </item>
    
    <item>
      <title>Gitlab pulling code exception after updating Git version：The authenticity of host xxx can&#39;t be established</title>
      <link>https://www.sobyte.net/post/2021-12/gitlab-err/</link>
      <pubDate>Thu, 16 Dec 2021 16:31:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/gitlab-err/</guid>
      <description>After installing the latest version of the Git client (git version 2.34.1.windows.1), the following error is reported when pulling code from gitlab:
1 2 3 4 5 6 7 8 9 10 11  $ git pull -r -v The authenticity of host ‘[gitlab.lzw.me]:10022 ([xxx.xxx.xxx.xxx]:10022)’ can’t be established. ED25519 key fingerprint is SHA256:K+/XdcpPLPqHJsmSIsXHUMIrRVxivN9//YiYFp7VQeM. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])?</description>
    </item>
    
    <item>
      <title>Private Git server build: Gogs/Gitea</title>
      <link>https://www.sobyte.net/post/2021-11/gogs-gitea/</link>
      <pubDate>Tue, 02 Nov 2021 22:19:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/gogs-gitea/</guid>
      <description>Git is a version control system developed by Linux Torvalds and is being used by a large number of developers around the world today. Many companies like to use GitHub, which is based on Git version control, and GitHub is now the largest code hosting site in the world. Many large companies are now migrating their code to GitHub. GitHub is a great service, but it has some limitations, one of which is that it doesn&amp;rsquo;t offer private hosting of code as a free service.</description>
    </item>
    
    <item>
      <title>Reasonable use of git rebase instead of git merge</title>
      <link>https://www.sobyte.net/post/2021-09/git-rebase-and-merge/</link>
      <pubDate>Thu, 23 Sep 2021 14:38:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/git-rebase-and-merge/</guid>
      <description>The main points of this article are first written in the front. develop on the same branch with fewer changes per commit, it is recommended to use rebase it is recommended to use rebase when merging from a public branch to a personal feature branch when merging from different branches with many change records, merge is recommended To merge from a personal topic branch to a public branch, you should</description>
    </item>
    
    <item>
      <title>Git Multiple Ssh Keys</title>
      <link>https://www.sobyte.net/post/2021-09/git-multiple-ssh-keys/</link>
      <pubDate>Sun, 19 Sep 2021 16:28:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/git-multiple-ssh-keys/</guid>
      <description>When there are multiple git accounts, such as a github, used for some of your own development activities, and then a gitlab, generally the company&amp;rsquo;s internal git. these two your email address if different, there will be a problem involved, the generation of the second git key will overwrite the first key, resulting in the inevitable one can not be used. Solution We can configure the problem by creating a</description>
    </item>
    
    <item>
      <title>Git Undo</title>
      <link>https://www.sobyte.net/post/2021-08/git-undo/</link>
      <pubDate>Fri, 20 Aug 2021 11:43:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/git-undo/</guid>
      <description>When managing Git versions, you often need to undo certain actions. This article describes a few of the most important cases and gives detailed explanations. Withdrawal of submission A common scenario is that after committing the code, you suddenly realize that there is something wrong with the commit and you should undo it, so you can execute the following command. 1 $ git revert HEAD The above command works by</description>
    </item>
    
    <item>
      <title>git cherry-pick tutorial</title>
      <link>https://www.sobyte.net/post/2021-08/git-cherry-pick/</link>
      <pubDate>Sun, 15 Aug 2021 19:44:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/git-cherry-pick/</guid>
      <description>For multi-branch codebases, it is a common requirement to move code from one branch to another.
There are two scenarios for this. In one case, you need all the code changes in another branch, so you use git merge. In the other case, you only need some of the code changes (a few commits), then you can use Cherry pick.
Basic usage What the git cherry-pick command does is apply the specified commit to other branches.</description>
    </item>
    
    <item>
      <title>GitHub has deprecated password-based authentication for Git operations</title>
      <link>https://www.sobyte.net/post/2021-08/github-deprecates-passwords-for-git-operations/</link>
      <pubDate>Sun, 15 Aug 2021 11:48:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/github-deprecates-passwords-for-git-operations/</guid>
      <description>If your Git actions have been failing or giving errors on GitHub since yesterday (August 14), it&amp;rsquo;s likely because you&amp;rsquo;re still using password-based authentication for your Git actions, and now you need to change that setting.
GitHub announced last July that it would no longer accept account passwords to authenticate Git operations, and now it&amp;rsquo;s time to make that decision official. You will now need to use SSH keys or token-based authentication to authenticate Git operations.</description>
    </item>
    
    <item>
      <title>Use Git Hook to Restrict Commit Emails</title>
      <link>https://www.sobyte.net/post/2021-08/use-githook-to-restrict-commit-emails/</link>
      <pubDate>Sat, 07 Aug 2021 11:37:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/use-githook-to-restrict-commit-emails/</guid>
      <description>Here&amp;rsquo;s the thing. Recently, the group created a new code repository to develop a new product, and since it&amp;rsquo;s raining hard in Beijing today, many of my colleagues chose to work from home (including me), so I chose to use my own PC to work.
But I used my own personal email address for the Git information on my PC.
1 2  git config --global user.name &amp;#34;Germey&amp;#34; git config --global user.</description>
    </item>
    
    <item>
      <title>Fixing the Problem of Lost Code After Git Revert and Merge Again</title>
      <link>https://www.sobyte.net/post/2021-06/fixing-the-problem-of-lost-code-after-git-revert-and-merge-again/</link>
      <pubDate>Sun, 27 Jun 2021 17:53:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/fixing-the-problem-of-lost-code-after-git-revert-and-merge-again/</guid>
      <description>Our project uses GitLab for code management, and when I upgraded the system to SpringBoot 2.0, the branch was merged to the Master branch. During the actual deployment, I found that a child dependency of a two-party package that I depended on had not been upgraded, causing a service to fail to drop through. Since it took time to fix the bipartite package, we decided to Revert the Master branch in order not to affect the subsequent release of other features.</description>
    </item>
    
    <item>
      <title>Certify Your Git Commits on Github With GPG</title>
      <link>https://www.sobyte.net/post/2021-06/certify-your-git-commits-on-github-with-gpg/</link>
      <pubDate>Wed, 23 Jun 2021 10:57:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/certify-your-git-commits-on-github-with-gpg/</guid>
      <description>Because of the email-based identity verification feature of Git, you can easily fake being someone else to make a Commit. How do you ensure that the Commit is really a developer commit? This is where a special key, the GPG key, is needed for authentication.
About GPG GNU Privacy Guard (GnuPG or GPG) is a cryptographic software for encrypting and signing communication content and managing keys for asymmetric cryptography.
Asymmetric cryptography is a technique that you should have come across, and it is used in many fields.</description>
    </item>
    
  </channel>
</rss>
