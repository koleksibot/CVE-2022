<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gunicorn on SoByte</title>
    <link>https://www.sobyte.net/tags/gunicorn/</link>
    <description>Recent content in gunicorn on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 11 Jan 2022 14:11:20 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/gunicorn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gunicorn Signal Processing</title>
      <link>https://www.sobyte.net/post/2022-01/gunicorn-signal-processing/</link>
      <pubDate>Tue, 11 Jan 2022 14:11:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/gunicorn-signal-processing/</guid>
      <description>I recently used Gunicorn&amp;rsquo;s Graceful Shutdown feature in a project, so I read the code to learn about Gunicorn&amp;rsquo;s signal processing. Master Gunicorn starts with. 1 2 3 WSGIApplication(&amp;#34;%(prog)s[OPTIONS] [APP_MODULE]&amp;#34;).run() BaseApplication().run() Arbiter(self).run() The main control logic of the Master is implemented in Arbiter, including the signal handling and main loop logic. A call to Arbiter().run() will eventually lead to a call to Arbiter.init_signals(), where the signal functions defined in the</description>
    </item>
    
  </channel>
</rss>
