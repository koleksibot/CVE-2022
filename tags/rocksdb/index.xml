<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rocksdb on SoByte</title>
    <link>https://www.sobyte.net/tags/rocksdb/</link>
    <description>Recent content in rocksdb on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Jan 2022 10:30:16 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/rocksdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rocksdb transactions</title>
      <link>https://www.sobyte.net/post/2022-01/rocksdb-tx/</link>
      <pubDate>Wed, 12 Jan 2022 10:30:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/rocksdb-tx/</guid>
      <description>rocksdb supports both PessimisticTransactionDB and OptimisticTransactionDB concurrency control modes, both of which seem to be external wrappers for DB objects, doing concurrency control outside of the storage, allowing applications to do transactional KV read and write capabilities per BEGIN, COMMIT, ROLLBACK APIs. rocksdb originally has the ability to write WriteBatch atomically, and the transaction does things on the basis of WriteBatch, where writes within the transaction are temporarily stored in</description>
    </item>
    
  </channel>
</rss>
