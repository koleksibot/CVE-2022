<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>systemtap on SoByte</title>
    <link>https://www.sobyte.net/tags/systemtap/</link>
    <description>Recent content in systemtap on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 09 Mar 2022 14:16:11 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/systemtap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to troubleshoot problems with systemtap</title>
      <link>https://www.sobyte.net/post/2022-03/how-debug-with-systemtap/</link>
      <pubDate>Wed, 09 Mar 2022 14:16:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-debug-with-systemtap/</guid>
      <description>What is systemtap We generally debug our programs, and the logs printed by the business process are basically sufficient for our needs. If not, using strace, lsof, or perf is enough to see the bottleneck of performance. But for system programming, you can&amp;rsquo;t print logs like crazy, and many call stacks are in kernel space, so ordinary debugging means are stretched to the limit.
At this point systemtap comes in handy, it adds probe probes to kernel functions, aggregates statistics on kernel space function calls, and even intervenes in them.</description>
    </item>
    
  </channel>
</rss>
