<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>loki on SoByte</title>
    <link>https://www.sobyte.net/tags/loki/</link>
    <description>Recent content in loki on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Dec 2021 16:05:54 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/loki/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Log monitoring and alerting with Loki</title>
      <link>https://www.sobyte.net/post/2021-12/use-loki-monitor-alert/</link>
      <pubDate>Mon, 13 Dec 2021 16:05:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/use-loki-monitor-alert/</guid>
      <description>For a production environment and an aspiring ops person, even millisecond level downtime is not tolerated. Proper logging and monitoring of infrastructure and applications is very helpful in solving problems, and can also help optimize costs and resources, as well as help detect some problems that may occur later. In this article we will use the more lightweight Grafana Loki to implement log monitoring and alerting. The key thing is that if you are familiar with using Prometheus, you will have no problem using Loki, as they are basically the same, and have the same Label tag if they are auto-discovered in a Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Grafana Loki Concise Tutorial</title>
      <link>https://www.sobyte.net/post/2021-10/grafana-loki-usage/</link>
      <pubDate>Sun, 24 Oct 2021 12:43:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/grafana-loki-usage/</guid>
      <description>Loki, the latest open source project from the Grafana Labs team, is a horizontally scalable, high-availability, multi-tenant log aggregation system. It is designed to be very cost effective and easy to use because it does not index log content, but rather configures a set of tags for each log stream. Project inspired by Prometheus , the official description is: Like Prometheus, but for logs , similar to the Prometheus logging</description>
    </item>
    
  </channel>
</rss>
