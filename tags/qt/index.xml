<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qt on SoByte</title>
    <link>https://www.sobyte.net/tags/qt/</link>
    <description>Recent content in qt on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Mar 2022 17:19:32 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/qt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A simple comparison of QDir and std::filesystem</title>
      <link>https://www.sobyte.net/post/2022-03/qdir-stdfilesystem/</link>
      <pubDate>Sun, 06 Mar 2022 17:19:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/qdir-stdfilesystem/</guid>
      <description>As a Qt developer, Qt provides me with a lot of useful infrastructure, such as the popular QString, QNetwork, etc. This is what the Qt platform provides me with, and I only need to develop on this platform. As a C++ developer, the C++ standard library is also the infrastructure I need to use, but the standard library provides less functionality than Qt, most notably the C++ std::string, which has</description>
    </item>
    
    <item>
      <title>Python GUI framework PyQt5</title>
      <link>https://www.sobyte.net/post/2021-10/pyqt5/</link>
      <pubDate>Sun, 17 Oct 2021 15:38:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pyqt5/</guid>
      <description>There is not really much software that uses Python to develop graphical interfaces. Compared to GUI interfaces, probably Web way applications are more popular. But for other programming languages like me you such as C# or WPF may not be a good tool. Common GUI frameworks PyQt5: Qt is a cross-platform C++ GUI library. QT was once owned by Nokia and then sold to Digia, a Finnish software company. Oyj.</description>
    </item>
    
    <item>
      <title>Qt Multithreading</title>
      <link>https://www.sobyte.net/post/2021-09/qt-multi-thread/</link>
      <pubDate>Tue, 14 Sep 2021 16:04:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/qt-multi-thread/</guid>
      <description>There are three ways to register Qt types for multithreading, namely inheriting QThread, using QObject&amp;rsquo;s moveToThread function and Qtconcurrent concurrent threads. In many articles, it is recommended to inherit from the QThread class and override the run method to use time-consuming manipulation code in run. This approach makes us think that QThread is the entity of the thread. Creating a QThread object is thought of as opening a new thread.</description>
    </item>
    
    <item>
      <title>Qt 6.2 LTS features may completely override Qt 5.15</title>
      <link>https://www.sobyte.net/post/2021-09/qt-6-2-lts-cover-5-15/</link>
      <pubDate>Fri, 03 Sep 2021 16:48:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/qt-6-2-lts-cover-5-15/</guid>
      <description>Qt has published a blog post comparing Qt 6.2 LTS with Qt 5.15, stating that Qt 6.2 LTS will completely override Qt 5.15.
When Qt 6.0 debuted last year, most of the criticism came from the fact that it didn&amp;rsquo;t port all the modules and features from Qt5, and that Qt Inc. limited the Qt 5.15 LTS release to paying customers only. Since then, developers have been working to address these missing elements in Qt6, and with the upcoming Qt 6.</description>
    </item>
    
  </channel>
</rss>
