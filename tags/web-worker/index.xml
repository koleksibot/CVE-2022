<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web-worker on SoByte</title>
    <link>https://www.sobyte.net/tags/web-worker/</link>
    <description>Recent content in web-worker on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Mar 2022 10:30:02 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/web-worker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A brief introduction to Web Workers</title>
      <link>https://www.sobyte.net/post/2022-03/web-workers-simple-introduction/</link>
      <pubDate>Sat, 05 Mar 2022 10:30:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/web-workers-simple-introduction/</guid>
      <description>&amp;ldquo;JavaScript is single-threaded&amp;rdquo;, Js developers have always thought so. But today we are going to introduce multi-threaded programming in JavaScript, you heard me right, I am talking about Multi-Threaded Programming - Web Workers . I. Preface Web Workers is a feature of the browser (the host environment), not a standard feature of JavaScript, so what does it do? Suppose you click a button on a page and it triggers the</description>
    </item>
    
    <item>
      <title>Web Worker Tutorial</title>
      <link>https://www.sobyte.net/post/2021-07/web-worker-tutorial/</link>
      <pubDate>Tue, 13 Jul 2021 09:26:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/web-worker-tutorial/</guid>
      <description>1. Overview The JavaScript language uses a single-threaded model, which means that all tasks can only be done on one thread, one thing at a time. If the previous task is not done, the later task has to wait. With the increase in computing power of computers, especially with the advent of multi-core CPUs, single-threading poses a great inconvenience and cannot fully utilize the computing power of computers.
The role of the Web Worker is to create a multi-threaded environment for JavaScript, allowing the main thread to create Worker threads and assign some tasks to the latter to run.</description>
    </item>
    
  </channel>
</rss>
