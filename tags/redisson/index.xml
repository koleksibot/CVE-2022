<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redisson on SoByte</title>
    <link>https://www.sobyte.net/tags/redisson/</link>
    <description>Recent content in redisson on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Aug 2021 12:27:06 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/redisson/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Redisson Lock</title>
      <link>https://www.sobyte.net/post/2021-08/about-redisson-lock/</link>
      <pubDate>Mon, 09 Aug 2021 12:27:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/about-redisson-lock/</guid>
      <description>I wrote an article about the red lock implementation in Redis a long, long time ago, but in a production environment, the distributed lock component used in my projects has always been Redisson, a Java-based Redis client framework written with features of In-Memory Data Grid Redisson is a Java-based Redis client framework (Redis Java Client) with features of In-Memory Data Grid, which extends the basic data types of Redis with</description>
    </item>
    
  </channel>
</rss>
