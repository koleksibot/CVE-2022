<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-cloud-bus on SoByte</title>
    <link>https://www.sobyte.net/tags/spring-cloud-bus/</link>
    <description>Recent content in spring-cloud-bus on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Jun 2021 17:57:28 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/spring-cloud-bus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction to Spring Cloud Bus</title>
      <link>https://www.sobyte.net/post/2021-06/introduction-to-spring-cloud-bus/</link>
      <pubDate>Tue, 29 Jun 2021 17:57:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/introduction-to-spring-cloud-bus/</guid>
      <description>The Spring Cloud Bus positions itself as a messaging bus within the Spring Cloud system, using a message broker to connect all nodes of a distributed system.
The official Reference documentation for the Bus is relatively simple, so simple that it doesn&amp;rsquo;t even have a diagram.
This is the most 2.1.0 version of the Spring Cloud Bus code structure (less code)
Bus Example Demonstration Before we analyze the implementation of the Bus, let&amp;rsquo;s look at two simple examples of using Spring Cloud Bus.</description>
    </item>
    
  </channel>
</rss>
