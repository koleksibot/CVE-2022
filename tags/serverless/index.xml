<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serverless on SoByte</title>
    <link>https://www.sobyte.net/tags/serverless/</link>
    <description>Recent content in serverless on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Dec 2021 16:33:29 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>With high hopes for Serverless, have the controversies and issues been resolved?</title>
      <link>https://www.sobyte.net/post/2021-12/serverless/</link>
      <pubDate>Sun, 19 Dec 2021 16:33:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/serverless/</guid>
      <description>In 2009, the University of California, Berkeley published a paper, &amp;ldquo;The Berkeley View on Cloud Computing,&amp;rdquo; which correctly predicted the evolution and popularity of cloud computing over the next decade.
In 2019, Berkeley published another paper with the same naming style, &amp;ldquo;A Berkeley View on Serverless Computing,&amp;rdquo; which again predicted that &amp;ldquo;serverless computing will evolve to become the dominant form of cloud computing in the future. Serverless has been met with high hopes, but also with some controversy.</description>
    </item>
    
    <item>
      <title>Serverless and Lightweight Virtualization Firecracker - NSDI &#39;20</title>
      <link>https://www.sobyte.net/post/2021-11/papers-firecracker/</link>
      <pubDate>Fri, 26 Nov 2021 15:47:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/papers-firecracker/</guid>
      <description>This paper is about the paper in the 2020 NSDI Journal &amp;ndash; Firecracker: Lightweight Virtualization for Serverless Applications, which implements Firecracker to provide lightweight virtualization support on the host. Many developers today choose to use Serverless containers and services to reduce system overhead, improve hardware resource utilization, and enable rapid scaling, but the Serverless scenario places higher demands on container isolation, security, and performance.
When serving multiple tenants with the same hardware, we expect the different workloads to be isolated for security and performance with minimal additional overhead.</description>
    </item>
    
  </channel>
</rss>
