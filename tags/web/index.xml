<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on SoByte</title>
    <link>https://www.sobyte.net/tags/web/</link>
    <description>Recent content in web on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Sep 2021 15:00:16 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Detailed Guide to Web Page Sub-resource Integrity Checks</title>
      <link>https://www.sobyte.net/post/2021-09/web-page-resource-integrity-checks/</link>
      <pubDate>Fri, 24 Sep 2021 15:00:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/web-page-resource-integrity-checks/</guid>
      <description>About Subresource Integrity (subresource integrity) If you don&amp;rsquo;t pay much attention to web security, you may not have heard of this term. I believe that after reading this article, you will be able to gain a deeper understanding of what SRI is, why you should use SRI, and how to practice using SRI in your projects if you have a need for it. What SRI is and what it solves</description>
    </item>
    
    <item>
      <title>Tracking Users via Js</title>
      <link>https://www.sobyte.net/post/2021-07/tracking-users-via-js/</link>
      <pubDate>Sat, 03 Jul 2021 16:09:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/tracking-users-via-js/</guid>
      <description>This article describes how to write JavaScript scripts to send user data back to the server.
I made a code repository containing all the examples below, which can be run to see the results.
1. Synchronization AJAX The common practice of sending data back to the server is to put the collected user data inside the unload event and send it back to the server with an AJAX request.
However, asynchronous AJAX inside the unload event may not always work, because the page is already in unload and the browser may or may not send it.</description>
    </item>
    
  </channel>
</rss>
