<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unix on SoByte</title>
    <link>https://www.sobyte.net/tags/unix/</link>
    <description>Recent content in unix on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 04 Jan 2022 13:11:27 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Passing file descriptors between processes via UNIX domain sockets </title>
      <link>https://www.sobyte.net/post/2022-01/pass-fd-over-domain-socket/</link>
      <pubDate>Tue, 04 Jan 2022 13:11:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/pass-fd-over-domain-socket/</guid>
      <description>Linux provides a series of system calls that allow us to pass file descriptors between processes. Instead of simply passing the file descriptor, which is a 32-bit integer, we actually pass the file handle to the target process so that it can read and write to the file. Now suppose process B wants to send a file descriptor to process A. Let&amp;rsquo;s see how to do that.
1. UNIX domain socket To pass file descriptors, you need to establish inter-process communication.</description>
    </item>
    
    <item>
      <title>How to build a c/c&#43;&#43; development environment in Linux/MacOS using vscode</title>
      <link>https://www.sobyte.net/post/2022-01/how-to-build-a-c-c-development-environment-using-vscode-on-linux-macos/</link>
      <pubDate>Sat, 01 Jan 2022 17:02:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/how-to-build-a-c-c-development-environment-using-vscode-on-linux-macos/</guid>
      <description>Whether you&amp;rsquo;re a fan of the Lord of the Rings movies or not, you&amp;rsquo;ll agree that almost everyone loves unity, and having a unified development experience is something that developers have always strived for and welcomed.
Development environments have long been tightly coupled with specific technologies, such as Visual Studio, for primarily .NET-based development. We&amp;rsquo;ve seen heated debates among developers who endlessly argue for one tool over another. This will never end, nor should it, because many times these arguments result in the awesome tools we are using today.</description>
    </item>
    
  </channel>
</rss>
