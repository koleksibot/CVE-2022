<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rest on SoByte</title>
    <link>https://www.sobyte.net/tags/rest/</link>
    <description>Recent content in rest on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Dec 2021 20:16:01 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/rest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP Desync attack against HTTP/2 protocol</title>
      <link>https://www.sobyte.net/post/2021-12/http-desync-http2/</link>
      <pubDate>Tue, 28 Dec 2021 20:16:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/http-desync-http2/</guid>
      <description>This article describes the vulnerabilities that attackers use to launch HTTP Desync attacks, targeting well-known websites that hijack clients, Trojanize caches, and steal credentials to launch attacks.
HTTP Desync Attack on Netflix The Content-Length header is not required due to HTTP/2&amp;rsquo;s data frame length field. However, the HTTP/2 RFC declares that this header is allowed as long as it is correct. netflix uses a front-end that performs HTTP degradation without validating the content length.</description>
    </item>
    
    <item>
      <title>GraphQL and REST: Two API Architectures</title>
      <link>https://www.sobyte.net/post/2021-12/graphql-rest/</link>
      <pubDate>Mon, 27 Dec 2021 19:31:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/graphql-rest/</guid>
      <description>GraphQL is both a query language for the API and a runtime for your data queries. GraphQL provides a complete set of easy-to-understand descriptions of the data in your API, allowing the client to get exactly the data it needs without any redundancy, and making it easier for the API to evolve over time, as well as for building powerful developer tools.
 Over the last decade, REST has become the design standard for Web APIs, providing some great ideas such as stateless servers and structured access to resources.</description>
    </item>
    
  </channel>
</rss>
