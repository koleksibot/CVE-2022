<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jdk on SoByte</title>
    <link>https://www.sobyte.net/tags/jdk/</link>
    <description>Recent content in jdk on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Jun 2021 10:45:12 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/jdk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Underlying Implementation of Annotations in the Jdk</title>
      <link>https://www.sobyte.net/post/2021-06/the-underlying-implementation-of-annotations-in-the-jdk/</link>
      <pubDate>Mon, 28 Jun 2021 10:45:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/the-underlying-implementation-of-annotations-in-the-jdk/</guid>
      <description>Using Java for several years, annotations are a common type, especially in some frameworks will be a lot of annotations to do component identification, configuration or strategy. But has not been deeply to explore the JDK annotations in the end what is the bottom is how to achieve? So refer to some information, to do a slightly more detailed analysis.
JDK annotations description Refer to JLS-9.6 inside JavaSE-8 for a description of the annotations as follows.</description>
    </item>
    
  </channel>
</rss>
