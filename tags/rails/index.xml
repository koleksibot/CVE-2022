<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rails on SoByte</title>
    <link>https://www.sobyte.net/tags/rails/</link>
    <description>Recent content in rails on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Mar 2022 09:15:33 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to switch from Webpacker to CSS/JS bundling</title>
      <link>https://www.sobyte.net/post/2022-03/webpacker-to-css-js-bundling/</link>
      <pubDate>Tue, 22 Mar 2022 09:15:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/webpacker-to-css-js-bundling/</guid>
      <description>One of the notable features of the recent Rails 7 release is CSS/JS bundling, which replaces Rails 6&amp;rsquo;s Webpacker.
Rails now creates projects that will add two parameters.
1 2  -j, [--javascript=JAVASCRIPT] # Choose JavaScript approach [options: importmap (default), webpack, esbuild, rollup] -c, [--css=CSS] # Choose CSS processor [options: tailwind, bootstrap, bulma, postcss, sass...]   For example, to use esbuild and sass you can use the following command.</description>
    </item>
    
    <item>
      <title>Rails on Docker: Build a development environment with Docker Compose</title>
      <link>https://www.sobyte.net/post/2022-03/rails-on-docker/</link>
      <pubDate>Tue, 22 Mar 2022 08:58:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rails-on-docker/</guid>
      <description>Why use Docker First of all, why should I use Docker in a development environment when it&amp;rsquo;s better to build it directly on my local system? Using Docker in a development environment provides the following benefits. Solidify the development environment into a configuration file, which makes it easy for new developers to start. Isolating system dependencies across projects to avoid interactions. Make the development environment as close to the production</description>
    </item>
    
  </channel>
</rss>
