<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vim on SoByte</title>
    <link>https://www.sobyte.net/tags/vim/</link>
    <description>Recent content in vim on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Mar 2022 09:18:16 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Find and Replace in Vim/Vi</title>
      <link>https://www.sobyte.net/post/2022-03/vim-find-replace/</link>
      <pubDate>Tue, 01 Mar 2022 09:18:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/vim-find-replace/</guid>
      <description>This article describes how to find and replace text in Vim/Vi.
Vim is the most popular command line text editor. It comes pre-installed on macOS and most Linux distributions. Finding and replacing text in Vim is very easy.
Basic Find and Replace In Vim, you can use the :substitute (:s) command to find and replace text.
To run commands in Vim, you must be in normal mode, which is the default mode when you start the editor.</description>
    </item>
    
    <item>
      <title>Vim Core Maintainer Sven Guckes Dies, Father of Vim: Version 9.0 Will Be Dedicated to Him</title>
      <link>https://www.sobyte.net/post/2022-02/vim-main-promoter-programmer-sven-guckes-passed-away/</link>
      <pubDate>Wed, 23 Feb 2022 09:30:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/vim-main-promoter-programmer-sven-guckes-passed-away/</guid>
      <description>Bram Moolenaar, the father of Vim, has announced the death of core maintainer Sven Guckes on the mailing list.
Sven Guckes died on February 20, 2022 in Berlin, according to the body of the email. He was diagnosed with a brain tumor in December 2021, and because there was nothing surgeons could do about it, Sven was transferred to a hospice at the end of January, where a group of friends accompanied Sven through his final days.</description>
    </item>
    
    <item>
      <title>Copy text using vim across ssh</title>
      <link>https://www.sobyte.net/post/2022-01/vim-copy-over-ssh/</link>
      <pubDate>Wed, 05 Jan 2022 12:09:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-copy-over-ssh/</guid>
      <description>Recently, a friend asked how to copy the contents of vim on the server to the local clipboard without using the mouse. To be honest, I always select and copy directly with the mouse. But since my friend asked, I had to do some research. I really found a solution that doesn&amp;rsquo;t use the mouse. This method can not only copy the contents of vim to the local clipboard, but also to the local tmux clipboard, very convenient.</description>
    </item>
    
    <item>
      <title>Vim Macro Quick Start</title>
      <link>https://www.sobyte.net/post/2022-01/vim-macro-quick-start/</link>
      <pubDate>Wed, 05 Jan 2022 11:51:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-macro-quick-start/</guid>
      <description>Vim provides a macro recording feature that allows you to record a series of actions and then repeat them. This feature is relatively cold, but also very powerful. Just because the operation is complicated, few people learn and rarely use. But I think the idea of macros is very simple, the reason why I think it is complex is not particularly good real-world cases to reflect its value. I came across a more suitable scenario for the use of macros when I was modifying the Sniper framework today.</description>
    </item>
    
    <item>
      <title>Developing a simple Vim search plugin</title>
      <link>https://www.sobyte.net/post/2022-01/vim-search-plugin/</link>
      <pubDate>Wed, 05 Jan 2022 11:33:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-search-plugin/</guid>
      <description>Recently, I was going to write a vim introductory article for new Go developers, so I started to organize my vim configuration and plug-in system. While sorting out the file-related plugins, I found myself using the ack plugin. ack itself has no file search capability; it uses tools like ack/ag to search for articles. The plugin itself only serves the purpose of calling commands and displaying results. Since it is relatively simple, why not implement one yourself?</description>
    </item>
    
    <item>
      <title>Quickly editing Go struct tags under vim</title>
      <link>https://www.sobyte.net/post/2022-01/vim-go-struct-tag/</link>
      <pubDate>Tue, 04 Jan 2022 18:50:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/vim-go-struct-tag/</guid>
      <description>I have written a previous article How to configure Vim&amp;rsquo;s Golang development environment. Go language jump completions use NeoVim&amp;rsquo;s built-in lsp functionality, so there is no need to integrate additional plugins. However, lsp does not seem to support adding or modifying tags to structs. My colleagues in the group started tinkering with it, and they found a small plugin developed in lua and introduced it to me. I thought about</description>
    </item>
    
    <item>
      <title>How to Configure Golang Development Environment for Vim</title>
      <link>https://www.sobyte.net/post/2022-01/go-vim/</link>
      <pubDate>Tue, 04 Jan 2022 18:35:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/go-vim/</guid>
      <description>Today we will introduce you how to configure Go development environment under Vim. If you are interested, you may want to give it a try. System Dependencies Before we start, we need a handy terminal emulation software. There are many such programs, but make sure to choose one that supports utf-8 encoding and 24-bit true color. Here I recommend. linux platform st macos platform iTerm2 window platform Windows Terminal There</description>
    </item>
    
  </channel>
</rss>
