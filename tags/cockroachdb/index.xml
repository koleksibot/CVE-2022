<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cockroachdb  on SoByte</title>
    <link>https://www.sobyte.net/tags/cockroachdb/</link>
    <description>Recent content in cockroachdb  on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Jan 2022 10:10:19 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/cockroachdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cockroachdb two-stage commit process</title>
      <link>https://www.sobyte.net/post/2022-01/crdb-txn/</link>
      <pubDate>Wed, 12 Jan 2022 10:10:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/crdb-txn/</guid>
      <description>Previously, I only knew a little bit about percolator, and my impression of it is that it can implement transaction capability on top of a common distributed KV storage, but the overhead of 2PC + raft process is considerable. A few days ago, I heard that cockroachdb has made some engineering optimizations compared to percolator, so I&amp;rsquo;d like to learn how to implement this part.
The same as percolator, crdb also implements multi-line transaction management according to decentralized transaction manager.</description>
    </item>
    
  </channel>
</rss>
