<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on SoByte</title>
    <link>https://www.sobyte.net/tags/python/</link>
    <description>Recent content in python on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Mar 2022 09:02:19 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python passed a proposal to remove &#34;dead batteries&#34; from the standard library</title>
      <link>https://www.sobyte.net/post/2022-03/python-removes-dead-batteries-from-stdlib/</link>
      <pubDate>Thu, 17 Mar 2022 09:02:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-removes-dead-batteries-from-stdlib/</guid>
      <description>A Python Enhancement Proposal (PEP) 594, proposed by Python contributors Christian Heimes and Brett Cannon, to remove obsolete and unmaintained modules from the Python standard library, has been approved. -0594) has been approved for adoption. This proposal was originally submitted in 2019, but was only recently (March 11) approved for Python 3.11. With this PEP, Python 3.11 will mark certain modules as deprecated, and Python 3.12 will be the last release to include them.</description>
    </item>
    
    <item>
      <title>A Brief Introduction to WSGI</title>
      <link>https://www.sobyte.net/post/2022-03/wsgi/</link>
      <pubDate>Sun, 13 Mar 2022 11:21:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/wsgi/</guid>
      <description>WSGI is a term often referred to in Python Web development, and is defined in Wikipedia as follows. The Python Web Server Gateway Interface (abbreviated WSGI) is a simple and generic interface between a web server and a web application or framework defined for the Python language. Since WSGI was developed, similar interfaces have appeared in many other languages. As defined, WSGI is not a server, not an API, not</description>
    </item>
    
    <item>
      <title>Concurrent Programming in Python</title>
      <link>https://www.sobyte.net/post/2022-03/concurrent-programming-in-python/</link>
      <pubDate>Sat, 12 Mar 2022 12:11:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/concurrent-programming-in-python/</guid>
      <description>This article will explain the basic operations of concurrent programming in Python. Concurrency and parallelism are twin brothers, and the concepts are often confused. Joe Armstrong, the father of Erlang, has a very interesting diagram that illustrates these two concepts. One of my personal preferences is that concurrency is macro-parallel and micro-serial. GIL While Python comes with great class libraries to support multithreaded/processed programming, it is well known that Python</description>
    </item>
    
    <item>
      <title>Python Coroutine</title>
      <link>https://www.sobyte.net/post/2022-03/python-coroutine/</link>
      <pubDate>Sat, 12 Mar 2022 10:35:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-coroutine/</guid>
      <description>A coroutine, also known as a micro-thread, is a lightweight thread. coroutines can be understood as processes that collaborate with the caller to produce values provided by the caller. The advantage over threads is that context switching is cheaper and under the control of the user.
History of development Coroutines in Python have gone through three main phases. coroutines were first implemented in Python 2.5, morphed from generators and implemented with keywords like yield/send; yield from was introduced, allowing complex generators to be refactored into small nested generators; Python 3.</description>
    </item>
    
    <item>
      <title>RabbitMQ Consumption Model and Dead Letter Queues</title>
      <link>https://www.sobyte.net/post/2022-03/rabbitmq-queue/</link>
      <pubDate>Fri, 11 Mar 2022 13:37:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/rabbitmq-queue/</guid>
      <description>RabbitMQ Model RabbitMQ is a producer/consumer model, where the producer produces messages to a queue and the consumer takes messages from the queue to consume, without interacting directly with each other. Let&amp;rsquo;s start by looking at the structure of the RabbitMQ model. In the diagram, we can see that the entire structure consists of a Producer, an Exchange, a Queue, and a Consumer. Among them, the Producer and the Consumer</description>
    </item>
    
    <item>
      <title>Python time processing standard library: time and datetime modules</title>
      <link>https://www.sobyte.net/post/2022-03/differences-bettween-time-and-datetime-in-python/</link>
      <pubDate>Thu, 03 Mar 2022 15:00:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/differences-bettween-time-and-datetime-in-python/</guid>
      <description>Python has a number of built-in APIs for manipulating time, which are distributed in standard libraries such as time and datetime, and their usage can be confusing.
The following article will introduce the main purpose, core objects, common methods, and uses of each module, and will end with an analysis and comparison, so if you already know these details, you can jump directly to the summary and comparison section at the end.</description>
    </item>
    
    <item>
      <title>Understanding descriptors in Python</title>
      <link>https://www.sobyte.net/post/2022-03/python-descriptor-in-detail/</link>
      <pubDate>Thu, 03 Mar 2022 14:43:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-descriptor-in-detail/</guid>
      <description>Descriptors are an advanced concept in Python and the basis for many of Python&amp;rsquo;s internal mechanisms, so this article will go into them in some depth. Definition of a descriptor The definition of a descriptor is simple; a Python object that implements any of the following methods is a descriptor. __get__(self, obj, type=None) __set__(self, obj, value) __delete__(self, obj) The meanings of the parameters of these methods are as follows. self</description>
    </item>
    
    <item>
      <title>Metaclass in Python 3</title>
      <link>https://www.sobyte.net/post/2022-03/python-metaclass/</link>
      <pubDate>Thu, 03 Mar 2022 09:44:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-metaclass/</guid>
      <description>In the Python programming language, most classes are used to generate objects: when you call these classes, they return an Instance of the class to the caller. For example, if you call a Student class that defines the various actions required of a student, we get a new instance of Student, which seems very natural. One of the core ideas of the OOP language is inheritance, i.e. if I had</description>
    </item>
    
    <item>
      <title>How to install Python 3.8 on Debian 10</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-install-python-3-8-on-debian-10/</link>
      <pubDate>Tue, 01 Mar 2022 19:47:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-install-python-3-8-on-debian-10/</guid>
      <description>Python is one of the most widely used programming languages in the world. With its easy-to-learn syntax, Python is a popular choice for beginners and experienced developers alike. Python is quite a versatile programming language. It can be used to build all kinds of applications, from simple and complex machine learning algorithms.
Debian 10 includes Python version 3.7, which can be installed or updated using the apt tool.
At the time of writing, Python 3.</description>
    </item>
    
    <item>
      <title>Python range function</title>
      <link>https://www.sobyte.net/post/2022-03/python-range/</link>
      <pubDate>Tue, 01 Mar 2022 19:40:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/python-range/</guid>
      <description>The Python range type generates a sequence of integers by defining the start and end points of a range. It is typically used with a for loop to iterate over a sequence of numbers.
range() works differently in Python 2 and 3.
In Python 2, there are two functions that allow you to generate sequences of integers range and xrange. These functions are very similar, the main difference being that range returns a list and xrange returns an xrange object.</description>
    </item>
    
    <item>
      <title>Ditching the Official Site, Python Migrates All Bugs to GitHub</title>
      <link>https://www.sobyte.net/post/2022-02/python-bugs-move-to-github/</link>
      <pubDate>Fri, 25 Feb 2022 09:42:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/python-bugs-move-to-github/</guid>
      <description>Previously, the Python development team has been submitting, tracking, and handling bugs on the official Python bug site https://bugs.python.org/ (abbreviated as bpo or BPO), which uses the open source tool Roundup as a bug tracker.
On February 18, Python core developer ≈Åukasz Langa announced on the Python Discourse forum: All bug data on Roundup / BPO will be migrated to GitHub, and when the migration is complete new bugs will be handled in GitHub Issues, and the former official BPO site will exist in read-only mode to avoid a host of problems caused by broken links.</description>
    </item>
    
    <item>
      <title>CPython performance to be improved by 5x? faster-python project PEP 659 source code interpretation</title>
      <link>https://www.sobyte.net/post/2022-01/faster-python/</link>
      <pubDate>Tue, 18 Jan 2022 14:36:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/faster-python/</guid>
      <description>Earlier in 2021, Python author Guido van Rossum was rehired by Microsoft to continue work on CPython, and they have proposed a faster-cpython project to improve the performance of CPython by a factor of 5 over 4 years. The whole project is open on GitHub&amp;rsquo;s faster-cpython group, and some of the ideas have been implemented and verified through Activity.
In this article, we will read and analyse the source code of one of the project&amp;rsquo;s key proposals, PEP 659, and learn how to optimise virtual machine performance at the bytecode level.</description>
    </item>
    
    <item>
      <title>Understanding python asynchronous programming and simple implementation of asyncio</title>
      <link>https://www.sobyte.net/post/2022-01/python-asyncio/</link>
      <pubDate>Tue, 18 Jan 2022 13:59:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/python-asyncio/</guid>
      <description>Asynchronous programming Before we start to explain asynchronous programming, let&amp;rsquo;s first understand a few related concepts. Blocking The state in which a program is hung when it has not been given the computational resources it needs. A program is said to be blocking on an operation if it cannot do anything else on its own while waiting for that operation to complete. Common forms of blocking are: network I/O blocking,</description>
    </item>
    
    <item>
      <title>SWIG implementation of Python calls C/C&#43;&#43; code</title>
      <link>https://www.sobyte.net/post/2021-11/swig-python/</link>
      <pubDate>Sat, 20 Nov 2021 14:42:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/swig-python/</guid>
      <description>SWIG Introduction SWIG is short for Simplified Wrapper and Interface Generator, a development tool that links C and C++ programs with various other high-level languages such as Perl, Python, Ruby and Tcl. Languages currently supported. C# ‚Äì Mono C# ‚Äì MS.NET D Go language Guile Java Javascript ‚Äì Node.js Javascript ‚Äì V8 Javascript ‚Äì WebKit Lua MzScheme/Racket OCaml Octave Perl PHP Python R Ruby Scilab Tcl/Tk SWIG with Python With</description>
    </item>
    
    <item>
      <title>Python string fuzzy matching library FuzzyWuzzy</title>
      <link>https://www.sobyte.net/post/2021-11/fuzzywuzzy/</link>
      <pubDate>Thu, 18 Nov 2021 23:09:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/fuzzywuzzy/</guid>
      <description>In computer science, fuzzy string matching is a technique for finding a string that matches a pattern approximately (rather than exactly). In other words, fuzzy string matching is a search that finds a match even if the user misspells a word or enters only part of a word to search. Therefore, it is also known as string approximate matching. String fuzzy search can be used in various applications, such as</description>
    </item>
    
    <item>
      <title>HTML page parsing and extraction tools lxml and XPath</title>
      <link>https://www.sobyte.net/post/2021-11/python-lxml-xpath/</link>
      <pubDate>Thu, 18 Nov 2021 22:45:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-lxml-xpath/</guid>
      <description>In the process of data crawling, often encountered the need to parse the content of HTML, commonly used is to use regular expressions, today mainly to introduce the lxml tool and the syntax of xpath.
Introduction to lxml lxml is a high-performance Python XML library that natively supports XPath 1.0, XSLT 1.0, custom element classes, and even a Python style data binding interface. It is built on top of two C libraries: libxml2 and libxslt, which provide the main power for performing core tasks such as parsing, serialization, and conversion.</description>
    </item>
    
    <item>
      <title>Python exception retry solution</title>
      <link>https://www.sobyte.net/post/2021-11/python-error-retry/</link>
      <pubDate>Tue, 16 Nov 2021 22:43:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-error-retry/</guid>
      <description>When data crawling, we often encounter program exceptions due to network problems, and the initial approach is just to record the error content and post-process the error content again. Some better exception retry methods or mechanisms are compiled here.
Initial version :
1 2 3 4 5 6 7 8 9 10 11  def crawl_page(url): pass def log_error(url): pass url = &amp;#34;&amp;#34; try: crawl_page(url) except: log_error(url)   Improved version (increased number of retries):</description>
    </item>
    
    <item>
      <title>Tips for using the Python network request library Requests</title>
      <link>https://www.sobyte.net/post/2021-11/requests-best-practice/</link>
      <pubDate>Tue, 16 Nov 2021 22:35:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/requests-best-practice/</guid>
      <description>The Requests library is used to make standard HTTP requests in Python. It abstracts the complexity behind the request into a nice, simple API so you can focus on interacting with the service and using the data in your application. Requests POST/GET parameters Commonly used parameters are listed in the following table. Requests Return object Response common methods Common properties and methods of Response class. 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>HTML parsing and extraction tool Beautiful Soup</title>
      <link>https://www.sobyte.net/post/2021-11/python-beautiful-soup/</link>
      <pubDate>Tue, 16 Nov 2021 22:14:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-beautiful-soup/</guid>
      <description>Beautiful Soup is a Python library that can extract data from HTML or XML files. Simply put, it can parse HTML tag files into a tree structure and then easily get the corresponding attributes of the specified tags. This feature is similar to lxml. Beautiful Soup installation Beautiful Soup 3 is currently out of development and it is recommended to use Beautiful Soup 4 in your current projects, installed by</description>
    </item>
    
    <item>
      <title>Regular Expressions and Python Re Modules</title>
      <link>https://www.sobyte.net/post/2021-11/python-re/</link>
      <pubDate>Mon, 15 Nov 2021 19:42:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-re/</guid>
      <description>In the data crawl will often use regular expressions, if not familiar with Python&amp;rsquo;s re module, it is easy to be confused by the various methods inside, today we will review the Python re module. Before learning the Python module, let&amp;rsquo;s see what the official description documentation says Implementation. 1 2 import re help(re) Helpful information. 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description>
    </item>
    
    <item>
      <title>Python Geographic Data Visualization Tool GeoPandas</title>
      <link>https://www.sobyte.net/post/2021-11/geopandas/</link>
      <pubDate>Mon, 15 Nov 2021 19:35:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/geopandas/</guid>
      <description>GeoPandas Introduction GeoPandas is an open source project that aims to make it easier to work with geospatial data under Python. GeoPandas extends the pandas data type to allow spatial operations on geometric types. Geometric operations are performed by shapely. GeoPandas further relies on fiona for file access and descartes, matplotlib for plotting. GeoPandas follows the data types of pandas, so there are also two data types in GeoPandas. GeoSeries</description>
    </item>
    
    <item>
      <title>Python geographic data visualization tool mapboxgl jupyter</title>
      <link>https://www.sobyte.net/post/2021-11/mapboxgl-jupyter/</link>
      <pubDate>Mon, 15 Nov 2021 19:26:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/mapboxgl-jupyter/</guid>
      <description>Introduction to Mapbox Founded in 2010 by Eric Gunderson, Mapbox has grown rapidly and has become a leader in the mapping renaissance. focused on providing custom base map blocks for map and application developers, Mapbox has positioned itself as the leading software company for web maps and mobile applications. In addition to the base map style toolset already widely used by program developers and cartographers, they also offer mapping tools written in Python and JavaScript.</description>
    </item>
    
    <item>
      <title>Python Geographic Data Visualization Tool Basemap</title>
      <link>https://www.sobyte.net/post/2021-11/basemap/</link>
      <pubDate>Sun, 14 Nov 2021 12:15:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/basemap/</guid>
      <description>Basemap Introduction Basemap is a toolkit under the Python visualization library Matplotlib. its main function is to draw 2D maps, which are important for visualizing spatial data. basemap itself does not do any plotting, but provides the ability to transform coordinates into one of 25 different map projections. Matplotlib can also be used to plot contours, images, vectors, lines, or points in transformed coordinates. basemap includes the GSSH coastline dataset,</description>
    </item>
    
    <item>
      <title>Python Module: Container DatatypesCollections</title>
      <link>https://www.sobyte.net/post/2021-11/python-collections/</link>
      <pubDate>Thu, 11 Nov 2021 18:58:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-collections/</guid>
      <description>There are some built-in data types in Python, such as int, str, list, tuple, dict, etc. Python&amp;rsquo;s collections module builds on these built-in data types by providing several additional data types. namedtuple() generates a subclass of tuple that can use the name to access the content of the element deque A list-like container that implements fast append and pop at both ends Counter A subclass of dictionary that provides counting</description>
    </item>
    
    <item>
      <title>PMML, JAVA calls Python algorithm model</title>
      <link>https://www.sobyte.net/post/2021-11/pmml/</link>
      <pubDate>Thu, 11 Nov 2021 18:51:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/pmml/</guid>
      <description>Most of the company&amp;rsquo;s applications are developed in JAVA, so it is very difficult to use Python models, but after searching online, we can convert the generated models into PMML files and call them directly in JAVA. PMML Introduction Predictive Model Markup Language (PMML) is an XML-based format standard for storing models proposed by Dr. Robert Lee Grossman. PMML provides a way for different data analysis software or programming languages</description>
    </item>
    
    <item>
      <title>Python connection and using MongoDB</title>
      <link>https://www.sobyte.net/post/2021-11/python-mongodb/</link>
      <pubDate>Tue, 09 Nov 2021 19:49:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-mongodb/</guid>
      <description>MongoDB can store JSON data compared to traditional relational databases, which is perfect for storing JSON data returned by data crawling. Previously, we introduced the installation of MongoDB on Windows, today we mainly learn to connect to MongoDB using Python and perform the operation of adding, deleting, and checking. Before connecting to MongoDB, the first thing you need to install is the Python package: PyMongo, which is very easy to</description>
    </item>
    
    <item>
      <title>Python Multithreading and Multiprocessing</title>
      <link>https://www.sobyte.net/post/2021-11/python-multi-thread-and-multi-process/</link>
      <pubDate>Sat, 06 Nov 2021 11:47:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-multi-thread-and-multi-process/</guid>
      <description>In the process of learning Python, I have come across knowledge points related to multi-threaded programming, which I have not been able to understand thoroughly before. Today I&amp;rsquo;m going to spend some time to sort out the details as clearly as possible. The difference between threads and processes Processes (process) and threads (thread) are basic operating system concepts, but they are rather abstract and not easy to grasp. The most</description>
    </item>
    
    <item>
      <title>Python logical judgment True/False trap</title>
      <link>https://www.sobyte.net/post/2021-11/python-true-false/</link>
      <pubDate>Sat, 06 Nov 2021 11:42:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-true-false/</guid>
      <description>The definitions of True and False in Python are defined in different versions of Python as follows.
 Python 2: None, 0, and the empty string are all counted as False, all others are True Python 3: None, 0, the empty string, the empty list, and the empty dictionary are all considered False, and all other values are True  However, in actual use, the above definition and actual performance are not consistent.</description>
    </item>
    
    <item>
      <title>String Hashing Algorithm Compendium</title>
      <link>https://www.sobyte.net/post/2021-11/string-hash/</link>
      <pubDate>Fri, 05 Nov 2021 13:50:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/string-hash/</guid>
      <description>What is a hash ? Hash is the transformation of an input of arbitrary length (also called pre-image) into an output of fixed length by a hashing algorithm, and that output is the hash value. This transformation is a compressed mapping, i.e., the space for the hash value is usually much smaller than the space for the input, and different inputs may be hashed into the same output, and it is not possible to uniquely determine the input value from the hash value.</description>
    </item>
    
    <item>
      <title>Python Date and Time Processing Explained</title>
      <link>https://www.sobyte.net/post/2021-11/python-datetime/</link>
      <pubDate>Fri, 05 Nov 2021 13:18:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-datetime/</guid>
      <description>Python&amp;rsquo;s time processing module is used more often in everyday use, but when using it, you basically have to look up the information, which is still a bit of a hassle, so comb through it to make it easier to use in the future. Time-related concepts Second At the 13th International Conference on Weights and Measures in 1967, it was decided to use the second, defined in atomic time, as</description>
    </item>
    
    <item>
      <title>Character encoding problem and Python solution</title>
      <link>https://www.sobyte.net/post/2021-11/python-charset/</link>
      <pubDate>Tue, 02 Nov 2021 13:34:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-charset/</guid>
      <description>What is the most likely to encounter, the most annoying, the most disgusting problem in program development? Character encoding problems! This article expects to solve this problem with the most detailed sorting. What is encoding? The information stored in the computer is expressed in binary numbers; and the characters we see on the screen, such as English and Chinese characters, are the result of binary number conversion. Generally speaking, according</description>
    </item>
    
    <item>
      <title>Python handles control characters in text</title>
      <link>https://www.sobyte.net/post/2021-11/control-character-python/</link>
      <pubDate>Mon, 01 Nov 2021 19:26:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/control-character-python/</guid>
      <description>Python handles control characters in text Previously, when using Python for crawling, I encountered an error reading the data. After analysis, I found that the returned HTML contains control characters (it turns out that anti-crawler can also do this, control characters in the crawler easily cause errors, but when presented to the user in the browser does not affect anything).
What is a control character? Control characters (Control Character), or non-printing characters, appear in the text of a specific message, indicating a control function characters, such as control characters: LF (line feed), CR (carriage return), FF (page break), DEL (delete), BS (backspace), BEL (ringing), etc.</description>
    </item>
    
    <item>
      <title>Python reads and writes Excel tables</title>
      <link>https://www.sobyte.net/post/2021-11/python-excel/</link>
      <pubDate>Mon, 01 Nov 2021 18:55:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/python-excel/</guid>
      <description>When you use Python to process data, you often need to handle data in Excel. Nowadays, you basically use Pandas to read data from Excel, but there are some Python packages other than Pandas that can satisfy the need to read Excel data. Before we begin, learn the concepts involved in Excel. workbook : In various libraries, a workbook is actually an excel file, which can be regarded as a</description>
    </item>
    
    <item>
      <title>Python chatbot building based on AIML</title>
      <link>https://www.sobyte.net/post/2021-10/python-aiml/</link>
      <pubDate>Sun, 31 Oct 2021 11:17:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-aiml/</guid>
      <description>AIML Introduction AIML, known as Artificial Intelligence Markup Language, is an XML language for creating natural language software agents, invented and created by Dr. Richard S. Wallace and the Alicebot open source software organization between 1995-2000. AIML is an XML format for rule definition in order to match patterns and determine responses. The design goals of AIML are as follows. AIML should be easy for the general public to learn</description>
    </item>
    
    <item>
      <title>Python JSON/JSONP Data Parsing</title>
      <link>https://www.sobyte.net/post/2021-10/python-json-jsonp/</link>
      <pubDate>Sun, 31 Oct 2021 11:03:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-json-jsonp/</guid>
      <description>JSON Introduction JSON, JavaScript Object Natation, is a lightweight data interchange format that is ideal for server interaction with JavaScript. In ordinary Web applications, developers often struggle with XML parsing, either server-side generation or processing of XML, or client-side parsing of XML with JavaScript, often resulting in complex code and very low development efficiency. In fact, for most Web applications, many AJAX applications even return pieces of HTML directly to</description>
    </item>
    
    <item>
      <title>Python XML file format parsing</title>
      <link>https://www.sobyte.net/post/2021-10/python-xml/</link>
      <pubDate>Sun, 31 Oct 2021 10:54:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-xml/</guid>
      <description>XML refers to Extensible Markup Language, a subset of the Standard Generalized Markup Language, a markup language used to mark up electronic documents to make them structured. XML is designed to transfer and store data. Python has three common ways of parsing XML: SAX (simple API for XML), DOM (Document Object Model), and ElementTree. DOM approach: DOM, translated as Document Object Model, is a standard programming interface recommended by the</description>
    </item>
    
    <item>
      <title>Python object persistence storage tool pickle</title>
      <link>https://www.sobyte.net/post/2021-10/python-pickle/</link>
      <pubDate>Sun, 31 Oct 2021 10:34:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-pickle/</guid>
      <description>Python has a serialization process called pickle, which enables interconversion between arbitrary objects and text, and between arbitrary objects and binary. In other words, pickle enables the storage and recovery of Python objects. Serialization (picking): The process of turning a variable from memory into something that can be stored or transferred is called serialization, and after serialization, you can write the serialized object to disk or transfer it to another</description>
    </item>
    
    <item>
      <title>Python file reading and writing operations</title>
      <link>https://www.sobyte.net/post/2021-10/python-read-write-file/</link>
      <pubDate>Sat, 30 Oct 2021 13:54:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-read-write-file/</guid>
      <description>When programming in Python, you will often encounter operations that read and write files. The various modes of reading and writing files (such as read, write, append, etc.) can sometimes be really confusing, as well as confusing the use of methods such as open, read, readline, readlines, write, writelines, etc. can also throw you for a loop. I hope this article will help you better understand how to read and</description>
    </item>
    
    <item>
      <title>Python pip source and Anaconda conda source modification</title>
      <link>https://www.sobyte.net/post/2021-10/pip-and-conda/</link>
      <pubDate>Sat, 30 Oct 2021 13:40:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pip-and-conda/</guid>
      <description>Due to some unavoidable factors, the official Python packages are sometimes inaccessible or have network instability in China. conda source also has the problem of network link failure. To solve this problem, here are some configuration methods to sort out. Pip vs. Conda Dependency checking pip: does not always show the required additional dependencies. When installing a package, it may simply ignore the dependencies and install them, only indicating errors</description>
    </item>
    
    <item>
      <title>Using the Python Logging Module</title>
      <link>https://www.sobyte.net/post/2021-10/python-logging/</link>
      <pubDate>Wed, 27 Oct 2021 22:36:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-logging/</guid>
      <description>logging module is a standard module built in Python, mainly used for outputting runtime logs, you can set the output log level, log save path, log file rollback, etc. Compared with print, it has the following advantages. you can set different logging levels to output only important information in the release version without having to display a lot of debugging information print outputs all the information to the standard output,</description>
    </item>
    
    <item>
      <title>Python modules, packages, libraries, frameworks</title>
      <link>https://www.sobyte.net/post/2021-10/python-module-package-library-framework/</link>
      <pubDate>Wed, 27 Oct 2021 22:18:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-module-package-library-framework/</guid>
      <description>In the process of using Python, I often get confused by the concepts of modules, libraries, packages, and frameworks. Today, we will take time to sort out these concepts.
Module A module is a file with a .py suffix in which constants and functions are defined. The name of a module is the name of that .py file. The name of the module is taken as a global variable __name__ that can be fetched or imported by other modules.</description>
    </item>
    
    <item>
      <title>The difference between break/continue/pass in Python</title>
      <link>https://www.sobyte.net/post/2021-10/python-break-continue-pass/</link>
      <pubDate>Mon, 25 Oct 2021 22:02:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-break-continue-pass/</guid>
      <description>There are two types of loops you can use in Python: for loops and while loops. You can use them for repetitive tasks. As a result, repetitive tasks will happen automatically, making the process more efficient. Unfortunately, you may run into some problems with your loops. Sometimes your program may run into problems that require it to skip a part of the loop or exit the loop altogether. Or you may need it to ignore external factors that affect the program.</description>
    </item>
    
    <item>
      <title>Compressing and Decompressing with Python</title>
      <link>https://www.sobyte.net/post/2021-10/python-compress-decompress/</link>
      <pubDate>Mon, 25 Oct 2021 21:49:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-compress-decompress/</guid>
      <description>In your daily work, in addition to using Python to process text files, sometimes you will also be involved in processing compressed files. The compression file formats that are usually involved are rar: the more used compression under Windows environment, the more famous GUI tool is winrar tar: a packaging tool for Linux systems, only packaging, not compression gz: or gzip, usually can only compress one file. Combined with tar,</description>
    </item>
    
    <item>
      <title>Decision tree visualization methods and techniques</title>
      <link>https://www.sobyte.net/post/2021-10/decision-tree-visualizations/</link>
      <pubDate>Sun, 24 Oct 2021 19:40:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/decision-tree-visualizations/</guid>
      <description>One advantage of decision trees over other algorithms is the ability to visualize decision tree models. Decision trees are subdivided into classification trees, which are used to predict classifications, and regression trees, which are used to predict values. The visualization of decision trees can help us to understand the details of the algorithm in a very intuitive way. However, some problems may be encountered during the specific use. The following</description>
    </item>
    
    <item>
      <title>Merging and Joining DataFrames in Pandas</title>
      <link>https://www.sobyte.net/post/2021-10/pandas-dataframe-append-concat-merge-join/</link>
      <pubDate>Sat, 23 Oct 2021 15:58:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pandas-dataframe-append-concat-merge-join/</guid>
      <description>When working with data in Pandas, it is sometimes necessary to merge and concatenate multiple data, the most common of which include merging multiple split files.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import pandas as pd import glob file_list = glob.glob(&amp;#39;data/*&amp;#39;) df_list = [] for file in file_list: df_temp = pd.read_csv(file, sep=&amp;#34;&amp;lt;pre class=&amp;#34;EnlighterJSRAW&amp;#34; data-enlighter-language=&amp;#34;generic&amp;#34;&amp;gt;import pandas as pd import glob file_list = glob.</description>
    </item>
    
    <item>
      <title>Pandas&#43;SQLAlchemy interaction with database</title>
      <link>https://www.sobyte.net/post/2021-10/pandas-sqlalchemy/</link>
      <pubDate>Sat, 23 Oct 2021 15:58:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pandas-sqlalchemy/</guid>
      <description>When using Pandas to analyze data, besides reading text-based data, such as Excel and CSV files, database reading is also involved. The usual solution is Pandas+ SQLAlchemy. The following is a record of some operations, as a memo. Connecting to a database using sqlalchemy Engine translates to engine, the car is driven by the engine, and SQLAlchemy is driven by the Engine, which maintains a connection pool (Pool) object and</description>
    </item>
    
    <item>
      <title>Python Automation - Timed Tasks</title>
      <link>https://www.sobyte.net/post/2021-10/python-schedule/</link>
      <pubDate>Sat, 23 Oct 2021 15:19:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-schedule/</guid>
      <description>In our daily work, we often use tasks that need to be executed periodically, one way is to use Linux crond in combination with command line implementation. Another way is to use Python directly, and the following is a list of common ways to implement Python timed tasks. Use while True: + sleep() to implement a timed task The sleep(secs) function in the time module allows you to pause the</description>
    </item>
    
    <item>
      <title>Python garbage collection mechanism and implementation</title>
      <link>https://www.sobyte.net/post/2021-10/python-garbage-collector/</link>
      <pubDate>Sat, 23 Oct 2021 14:44:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-garbage-collector/</guid>
      <description>Python, as an interpreted language, is known for its clean and easy to understand code. We can assign values to names directly, without having to declare types. The Python interpreter determines name types and allocates and frees memory space at runtime, and this automatic memory management greatly reduces the burden on the programmer. For a high-level language like Python, developers can complete their work without concern for its internal garbage</description>
    </item>
    
    <item>
      <title>Pandas Data Processing Concise Tutorial</title>
      <link>https://www.sobyte.net/post/2021-10/pandas/</link>
      <pubDate>Sat, 23 Oct 2021 10:56:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pandas/</guid>
      <description>When using Python to process and analyze data, the most used is Pandas. Since Pandas is a very powerful tool and involves a lot of functions, it is often necessary to consult the documentation when using it. Here is a record of some of the functions and knowledge points that you commonly use. Introduction to Pandas Pandas is a data analysis package for python, originally developed by AQR Capital Management</description>
    </item>
    
    <item>
      <title>Python Exception Catching and Handling</title>
      <link>https://www.sobyte.net/post/2021-10/exception-handling-in-python/</link>
      <pubDate>Fri, 22 Oct 2021 14:25:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/exception-handling-in-python/</guid>
      <description>What is an exception? An exception is an event that occurs during program execution and affects the normal execution of the program. Typically, an exception occurs when Python is unable to process a program properly. Exceptions are Python objects that represent an error. When an exception occurs in a Python script we need to catch it and handle it, otherwise the program will terminate execution. When an uncaught exception occurs,</description>
    </item>
    
    <item>
      <title>Python String Formatting Tool</title>
      <link>https://www.sobyte.net/post/2021-10/python-string-format/</link>
      <pubDate>Fri, 22 Oct 2021 14:21:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-string-format/</guid>
      <description>There are two string formatting schemes in Python, one is the % operator that existed before Python 2.6, and the other is a new string formatting function str.format() that has been added since Python 2.6. % Formatting Tool Students familiar with the C printf() function will easily learn the %formatting tool. print() uses conversion specifiers beginning with % to format output for various types of data. Output of integers. %o</description>
    </item>
    
    <item>
      <title>Python built-in functions</title>
      <link>https://www.sobyte.net/post/2021-10/python-built-in-functions/</link>
      <pubDate>Fri, 22 Oct 2021 14:08:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-built-in-functions/</guid>
      <description>Python&amp;rsquo;s design philosophy is &amp;ldquo;small core language&amp;rdquo; + &amp;ldquo;large standard library&amp;rdquo;, so when Python wants to add a new feature, it is more likely to think about whether to add it to the core language support or put it into the library as an extension. library is very large and contains many modules. To use a function, you must import the corresponding module in advance, otherwise the function is invalid.</description>
    </item>
    
    <item>
      <title>If __name__ == &#39;__main__&#39; in Python</title>
      <link>https://www.sobyte.net/post/2021-10/pytho-if-name-main/</link>
      <pubDate>Fri, 22 Oct 2021 13:59:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pytho-if-name-main/</guid>
      <description>In the process of learning Python, or reading other code written to it, you will encounter code like this.
1 2  if __name__ == &amp;#34;__main__&amp;#34;: print(&amp;#34;Hello World!&amp;#34;)   We found that even if we remove the if __name__ == &#39;__main__&#39;, the program still runs as usual. Many of you only know that this is how it works, and you don&amp;rsquo;t look deeper into what exactly it does.
Program entrance For many programming languages, a program must have an entry point, such as C, C++, and the fully object-oriented programming languages Java, C#, and so on.</description>
    </item>
    
    <item>
      <title>In-depth understanding of Python with statements</title>
      <link>https://www.sobyte.net/post/2021-10/python-with/</link>
      <pubDate>Thu, 21 Oct 2021 15:55:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-with/</guid>
      <description>What is a with statement? The with statement is a feature related to exception handling introduced in Python 2.6. The with statement is used when accessing resources to ensure that the necessary &amp;ldquo;cleanup&amp;rdquo; operations are performed to release resources, such as automatic closure of files after use, automatic acquisition and release of locks in threads, and so on, regardless of whether an exception occurs during use. automatically after a file is used, automatic acquisition and release of locks in threads, etc.</description>
    </item>
    
    <item>
      <title>Python error Unable to find vcvarsall.bat</title>
      <link>https://www.sobyte.net/post/2021-10/python-error-unable-to-find-vcvarsall-bat/</link>
      <pubDate>Thu, 21 Oct 2021 10:04:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-error-unable-to-find-vcvarsall-bat/</guid>
      <description>Python error Unable to find vcvarsall.bat error is the most impressive problem I&amp;rsquo;ve encountered when installing Python packages on Windows platforms. This solution was compiled on September 10, 2012. Nine years have passed, and I believe there are still many of you who encountered similar problems. I took the time to recreate the previous solution and sort it out. The main change is to add the solution under Python2.
Problem Cause If the package/module you installed has contents written in cpython, you need to compile the middle C code into a binary file before the installation can be completed successfully.</description>
    </item>
    
    <item>
      <title>In-depth learning of the Python import mechanism</title>
      <link>https://www.sobyte.net/post/2021-10/python-import/</link>
      <pubDate>Wed, 20 Oct 2021 16:02:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-import/</guid>
      <description>When I was learning Python, I basically skimmed over how to import modules and packages. The reason for this is not only that the syntax of importing is very simple, but also that at the early stage of learning, you will not be involved in large projects, nor will you be writing your own modules and packages, so you will not encounter any problems here. In the process of using</description>
    </item>
    
    <item>
      <title>Python Iterators and Generators</title>
      <link>https://www.sobyte.net/post/2021-10/python-generator-iterator-iterable/</link>
      <pubDate>Wed, 20 Oct 2021 15:12:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-generator-iterator-iterable/</guid>
      <description>We all know that in Python we can for loop to iterate through a list, tuple or range object. So what is the underlying principle? In understanding Python&amp;rsquo;s data structures, containers (container), iterable objects (iterator), iterators (iterator), generators (generator), lists/sets/dictionary comprehensions (list, set, dict comprehension), and many other concepts are mixed together to make beginners confused. The relationship between them. container A container is a data structure that organizes multiple</description>
    </item>
    
    <item>
      <title>How to understand Python decorators</title>
      <link>https://www.sobyte.net/post/2021-10/python-decorator/</link>
      <pubDate>Tue, 19 Oct 2021 22:17:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/python-decorator/</guid>
      <description>Introduction to Decorators A decorator is a high-level Python syntax. It can be used to process a function, method, or class. In Python, we have several ways to process functions and classes. Compared to other ways, decorator syntax is simple and the code is highly readable. As a result, decorators have a wide range of applications in Python projects. Decorators are often used in scenarios with tangential requirements, some classic</description>
    </item>
    
    <item>
      <title>Python GUI framework PyQt5</title>
      <link>https://www.sobyte.net/post/2021-10/pyqt5/</link>
      <pubDate>Sun, 17 Oct 2021 15:38:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pyqt5/</guid>
      <description>There is not really much software that uses Python to develop graphical interfaces. Compared to GUI interfaces, probably Web way applications are more popular. But for other programming languages like me you such as C# or WPF may not be a good tool. Common GUI frameworks PyQt5: Qt is a cross-platform C++ GUI library. QT was once owned by Nokia and then sold to Digia, a Finnish software company. Oyj.</description>
    </item>
    
    <item>
      <title>Pandas read and export Excel, CSV files</title>
      <link>https://www.sobyte.net/post/2021-10/pandas-excel-csv/</link>
      <pubDate>Sun, 17 Oct 2021 15:31:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/pandas-excel-csv/</guid>
      <description>When you use Pandas to process data, it is common to read data from Excel or CSV files, and sometimes you need to export the processed data to Excel or CSV files. Today, we will learn how to read and export common Pandas files.
Loading Excel files In Pandas, the Excel file reading method is: pd.read_excel(). The specific passable parameters are.
1  pandas.read_excel(io, sheet_name=0, header=0, names=None, index_col=None, usecols=None, squeeze=False, dtype=None, engine=None, converters=None, true_values=None, false_values=None, skiprows=None, nrows=None, na_values=None, parse_dates=False, date_parser=None, thousands=None, comment=None, skipfooter=0, convert_float=True, **kwds)   Where.</description>
    </item>
    
    <item>
      <title>python-gitlab CLI Usage Notes</title>
      <link>https://www.sobyte.net/post/2021-09/gitlab-cli/</link>
      <pubDate>Sat, 18 Sep 2021 11:08:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/gitlab-cli/</guid>
      <description>It took us about two weeks to migrate our GitHub code to Gitlab, and the biggest impact was on our product release pipeline, which needed to be adapted to Gitlab and some services on our intranet environment. Basically, we had to rewrite the entire product release pipeline, and it was exhausting ü•∫. At the time, I thought migrating the code to Gitlab was purely backwards üòÖ, but after</description>
    </item>
    
    <item>
      <title>Pyston development team announces joining Anaconda</title>
      <link>https://www.sobyte.net/post/2021-08/pyston-team-join-anaconda/</link>
      <pubDate>Tue, 31 Aug 2021 21:17:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/pyston-team-join-anaconda/</guid>
      <description>Pyston has officially posted that its team (Marius and Kevin) will join Anaconda and continue development of the Python open source interpreter Pyston.
Pyston was originally developed by Dropbox as a Python implementation based on the open source JIT, but Dropbox later abandoned Pyston. eventually, its developers decided to start their own business a few years later and released Pyston 2.0. while Anaconda is a well-known Python and R distribution with a simplified package management strategy, focusing on scientific computing, among other tasks.</description>
    </item>
    
    <item>
      <title>Pitfalls of os.popen function and Pipe in Python</title>
      <link>https://www.sobyte.net/post/2021-06/pitfalls-of-os.popen-function-and-pipe-in-python/</link>
      <pubDate>Tue, 29 Jun 2021 13:00:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/pitfalls-of-os.popen-function-and-pipe-in-python/</guid>
      <description>I recently wrote a few simple scripts in Python to process some data, and since it&amp;rsquo;s just a simple function, I just use print to print the log. The task occasionally throws some exceptions when running. Because I have print logs in different places, the place where the error is reported is not quite the same every time, which leads to very strange results; sometimes this piece of code is</description>
    </item>
    
  </channel>
</rss>
