<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nextjs on SoByte</title>
    <link>https://www.sobyte.net/tags/nextjs/</link>
    <description>Recent content in nextjs on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Feb 2022 12:50:09 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/nextjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nextjs how not to show data of next_data</title>
      <link>https://www.sobyte.net/post/2022-02/nextjs-no-data/</link>
      <pubDate>Sun, 20 Feb 2022 12:50:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nextjs-no-data/</guid>
      <description>nextjs provides the getServerSideProps method (previously called getInitialProps method) to request data before rendering the page. However, the nextjs framework will pass the requested data to the front-end via a script tag in order to keep the front-end and back-end in sync. 1 &amp;lt;script id=&amp;#34;__NEXT_DATA__&amp;#34; type=&amp;#34;application/json&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; But sometimes, we don&amp;rsquo;t want to expose some raw data to the front-end page, such as some blog sites, news sites, etc., which basically</description>
    </item>
    
    <item>
      <title>How to package NextJs separately by server-side or browser-side type</title>
      <link>https://www.sobyte.net/post/2022-02/nextjs-server-client-build/</link>
      <pubDate>Sat, 19 Feb 2022 20:04:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/nextjs-server-client-build/</guid>
      <description>If some modules can only be used in the browser side , or only in the server side , how to refer to it in NextJs ? NextJs is an excellent react isomorphic framework that writes code once and can be used on both the server side and the browser side. This is because NextJs will package a copy on the server side and a copy on the browser side,</description>
    </item>
    
  </channel>
</rss>
