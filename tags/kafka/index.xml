<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kafka on SoByte</title>
    <link>https://www.sobyte.net/tags/kafka/</link>
    <description>Recent content in kafka on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Mar 2022 09:57:23 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A brief comparison of mainstream Kafka clients in the Go community</title>
      <link>https://www.sobyte.net/post/2022-03/the-comparison-of-the-go-community-leading-kakfa-clients/</link>
      <pubDate>Mon, 28 Mar 2022 09:57:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/the-comparison-of-the-go-community-leading-kakfa-clients/</guid>
      <description>I. Background As we all know, Kafka is a star open source project under the Apache Open Source Foundation. As an open source distributed event streaming platform, it is used by thousands of companies for high-performance data pipelines, stream analysis, data integration, and mission-critical applications. In China, large and small companies, whether they deploy their own or use Kafka cloud services like those provided by AliCloud, many Internet applications are</description>
    </item>
    
    <item>
      <title>A troubleshooting process for frequent crashes in a kafka cluster</title>
      <link>https://www.sobyte.net/post/2022-03/kafka-crash/</link>
      <pubDate>Wed, 16 Mar 2022 10:34:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/kafka-crash/</guid>
      <description>Overview Some brokers in a kafka cluster will restart randomly, and there is no pattern to the restart. broker restart is not perceptible to the client side at the usage level, but there are risks in data consistency and stability. broker restart, the connections connected to this broker will be reconnected to other normal brokers, increasing the pressure on the other This increases the pressure on other brokers in the cluster.</description>
    </item>
    
    <item>
      <title>Deploying Kafka on a Kubernetes cluster</title>
      <link>https://www.sobyte.net/post/2021-12/install-kafka-in-kubernetes/</link>
      <pubDate>Sat, 11 Dec 2021 14:59:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/install-kafka-in-kubernetes/</guid>
      <description>Recently, when I was testing log collection, I found that Elasticsearch was a bit overwhelmed by the volume of log data, and the optimization of ES might not be completed overnight, so I planned to add an intermediate layer to export the logs to Kafka, and then consume the logs from Kafka via Logstash and deposit them into Elasticsearch. There is no Kafka cluster in the test environment, so let&amp;rsquo;s</description>
    </item>
    
    <item>
      <title>Running a highly available Kafka cluster on Kubernetes</title>
      <link>https://www.sobyte.net/post/2021-10/deploy-kafka-ha-on-k8s/</link>
      <pubDate>Tue, 19 Oct 2021 22:40:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/deploy-kafka-ha-on-k8s/</guid>
      <description>Apache Kafka is the most popular distributed messaging publish-subscribe system available today. While Kafka is very powerful, it is equally complex and requires a highly available and robust platform to run. In a world where microservices are prevalent and most companies are adopting distributed computing, it is still very advantageous to use Kafka as a core messaging system.
If you run your microservices in a Kubernetes cluster, it makes sense to run a Kafka cluster in Kubernetes to take advantage of its built-in resiliency and high availability, and we can easily interact with Kafka Pods within the cluster using the built-in Kubernetes service discovery.</description>
    </item>
    
  </channel>
</rss>
