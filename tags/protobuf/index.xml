<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>protobuf on SoByte</title>
    <link>https://www.sobyte.net/tags/protobuf/</link>
    <description>Recent content in protobuf on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 23 Mar 2022 09:51:34 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/protobuf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Protocol Buffers Encoding</title>
      <link>https://www.sobyte.net/post/2022-03/pb-encoding/</link>
      <pubDate>Wed, 23 Mar 2022 09:51:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pb-encoding/</guid>
      <description>In today&amp;rsquo;s cloud era gRPC is very popular, and the default serialization encoding of gRPC Protocol Buffers is also popular. It is said that Protocol Buffers is very efficient, but what is it? Today we will discuss the coding rules of Protocol Buffers. There are basically two types of objects in the code, one with a fixed length, such as int32 occupying 32 bits and double occupying 64 bits, and</description>
    </item>
    
  </channel>
</rss>
