<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on SoByte</title>
    <link>https://www.sobyte.net/tags/bash/</link>
    <description>Recent content in bash on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Mar 2022 09:54:23 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating menus with Bash Select</title>
      <link>https://www.sobyte.net/post/2022-03/bash-select/</link>
      <pubDate>Fri, 04 Mar 2022 09:54:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/bash-select/</guid>
      <description>In this tutorial, we will cover the basics of the select construct in Bash. The select construct allows you to generate menus.
Bash select constructs The select construct generates a menu from a list of items. It has almost the same syntax as the for loop.
1 2 3 4  select ITEM in [LIST] do [COMMANDS] done   [LIST] can be a series of strings separated by spaces, number ranges, command output, arrays, etc.</description>
    </item>
    
    <item>
      <title>Tips for using Bash History</title>
      <link>https://www.sobyte.net/post/2022-02/bash-history-tricks/</link>
      <pubDate>Tue, 08 Feb 2022 10:39:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/bash-history-tricks/</guid>
      <description>Bash is a common shell environment and most Linux distributions also come with Bash, so using history efficiently can save the time of manually typing repetitive commands. In this article, I share a few tips and configurations that I use myself.
Search This technique should be more or less known to everyone, that is, press Ctrl-R in the input screen to search, the returned result is the latest matching command, and then press enter to execute.</description>
    </item>
    
    <item>
      <title>How to create temporary files with Bash scripts: tutorials on the mktemp and trap commands</title>
      <link>https://www.sobyte.net/post/2021-08/mktemp/</link>
      <pubDate>Thu, 19 Aug 2021 17:06:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/mktemp/</guid>
      <description>Sometimes, Bash scripts need to create temporary files or temporary directories. The common practice is to generate a file inside the /tmp directory yourself, which has many drawbacks. This article describes how to safely handle temporary files. Security of temporary files Creating temporary files directly, especially in the /tmp directory, often leads to security problems. First, the /tmp directory is readable by everyone and any user can write to it.</description>
    </item>
    
  </channel>
</rss>
