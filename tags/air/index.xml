<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>air on SoByte</title>
    <link>https://www.sobyte.net/tags/air/</link>
    <description>Recent content in air on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 19 Jun 2021 12:28:20 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/air/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Real Time Hot Reloading of Go Programs Using Air</title>
      <link>https://www.sobyte.net/post/2021-06/real-time-hot-reloading-of-go-programs-using-air/</link>
      <pubDate>Sat, 19 Jun 2021 12:28:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/real-time-hot-reloading-of-go-programs-using-air/</guid>
      <description>Today we want to introduce a magic tool - Air can listen to the project&amp;rsquo;s code files in real time, and automatically recompile and execute the code after changes, greatly improving the development efficiency of gin framework projects.
Why do I need real-time loading When using Python to write Web projects, the common Flask or Django frameworks support live-loading, and after you modify the project code, the program can automatically reload and execute (live-reload), which is very convenient in the daily development phase.</description>
    </item>
    
  </channel>
</rss>
