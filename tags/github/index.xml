<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on SoByte</title>
    <link>https://www.sobyte.net/tags/github/</link>
    <description>Recent content in github on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Feb 2022 09:42:49 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ditching the Official Site, Python Migrates All Bugs to GitHub</title>
      <link>https://www.sobyte.net/post/2022-02/python-bugs-move-to-github/</link>
      <pubDate>Fri, 25 Feb 2022 09:42:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/python-bugs-move-to-github/</guid>
      <description>Previously, the Python development team has been submitting, tracking, and handling bugs on the official Python bug site https://bugs.python.org/ (abbreviated as bpo or BPO), which uses the open source tool Roundup as a bug tracker.
On February 18, Python core developer ≈Åukasz Langa announced on the Python Discourse forum: All bug data on Roundup / BPO will be migrated to GitHub, and when the migration is complete new bugs will be handled in GitHub Issues, and the former official BPO site will exist in read-only mode to avoid a host of problems caused by broken links.</description>
    </item>
    
    <item>
      <title>Github launches &#34;sponsor-only&#34; repository, develops new features based on sponsorship amounts</title>
      <link>https://www.sobyte.net/post/2022-02/github-new-sponsors-only-repositories/</link>
      <pubDate>Wed, 09 Feb 2022 10:25:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/github-new-sponsors-only-repositories/</guid>
      <description>With the call for companies to give back to open source authors, Github has launched a new &amp;quot; Sponsor Repository&amp;quot;: this repository is only accessible by sponsors, and developers can set sponsorship levels (up to ten) based on the amount of sponsorship, with each level of sponsorship enjoying different features (similar to the game vip1-vip10?). Once a sponsor provides a developer-defined amount of sponsorship, access to various features is automatically granted by the GitHub platform, and access is automatically withdrawn once the sponsor stops funding.</description>
    </item>
    
    <item>
      <title>&#34;I Deleted Linux&#34;, Linus Releases Prank README Using GitHub Vulnerability</title>
      <link>https://www.sobyte.net/post/2022-01/linus-play-a-trick-of-github-vulnerability/</link>
      <pubDate>Thu, 27 Jan 2022 19:02:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linus-play-a-trick-of-github-vulnerability/</guid>
      <description>On January 25, Linus Torvalds submitted a prank README page to the Linux GitHub repository with a note called &amp;ldquo;delete linux because it sucks&amp;rdquo;.
 hey guys its me linus torvalds, author of the smash hit linux. yes its me you can look at the url of the repo and the thingy at the top of the files it proves its 100% me.
i deleted linux because i hate it now i think it sucks.</description>
    </item>
    
    <item>
      <title>Using the GitHub CLI Command Line Tools</title>
      <link>https://www.sobyte.net/post/2021-12/github-cli-tool-usage/</link>
      <pubDate>Mon, 20 Dec 2021 21:27:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/github-cli-tool-usage/</guid>
      <description>Since GitHub was acquired by GiantSoft, it has released a number of very useful developer tools, such as the CI/CD tools we used earlier GitHub Actions and Package packages, and today we&amp;rsquo;re going to introduce you to another useful tool that GitHub has recently released: the GitHub CLI, which allows developers to It allows developers to work seamlessly with GitHub from the command line, which means that we can pull</description>
    </item>
    
    <item>
      <title>Configure GPG keys for IDEA/Git and light up the GitHub Verified Commit logo</title>
      <link>https://www.sobyte.net/post/2021-12/github-verified-commit/</link>
      <pubDate>Sat, 18 Dec 2021 11:36:29 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/github-verified-commit/</guid>
      <description>Preface Setting up a GPG key for Git will confirm the password you configured each time you commit, and display a Verified flag in GitHub&amp;rsquo;s Commit to mark that the commit was actually done by you, and not by someone else.
Tutorials System Environment  OS version: Windows 10 X64 IDE used: Intellij IDEA
 Installation Click here to download and install GPG Tools, follow the instructions in the image below to download the installer</description>
    </item>
    
    <item>
      <title>Automating yum/apt offline source builds with GitHub Actions</title>
      <link>https://www.sobyte.net/post/2021-09/make-offline-mirrors/</link>
      <pubDate>Sat, 11 Sep 2021 15:51:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/make-offline-mirrors/</guid>
      <description>Offline Deployment For PaaS toB products, customers often require that the deployment solution must be installed offline, i.e., it cannot rely on any online resources during deployment, such as yum/apt sources for installing some OS packages; container images on docker.io, k8s.gcr.io, quay.io; binary downloads of open source software on GitHub, etc. download files, etc. As a developer of platform deployment tools, I am always plagued by the challenge of offline</description>
    </item>
    
    <item>
      <title>Linus Torvalds: GitHub creates absolutely useless rubbish merge</title>
      <link>https://www.sobyte.net/post/2021-09/linus-torvalds-github/</link>
      <pubDate>Tue, 07 Sep 2021 23:03:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/linus-torvalds-github/</guid>
      <description>In August 2020, Paragon, a company working on a variety of storage technologies, made a high profile announcement that their NTFS read/write driver would be in mainline development in the Linux kernel, after years of being available as a commercial driver for those who need reliable support for Microsoft file systems on Linux.
It is understood that after several revisions, Paragon submitted a pull request a few days ago for its NTFS read/write driver, dubbed NTFS3, for the upcoming Linux 5.</description>
    </item>
    
    <item>
      <title>GitHub: The Unencrypted Git Protocol Is About to Become History</title>
      <link>https://www.sobyte.net/post/2021-09/improving-git-protocol-security-github/</link>
      <pubDate>Sat, 04 Sep 2021 16:24:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/improving-git-protocol-security-github/</guid>
      <description>GitHub has released a blog post stating that it is taking steps to improve the security of its hosted code repositories. It will now be necessary to use the encrypted Git protocol when pushing and pulling Git data. These changes will affect some of the keys supported in SSH, and according to the Git Systems team, unencrypted Git protocols will now be a thing of the past.
Specifically, GitHub no longer supports DSA keys (Digital Signature Algorithm), and some traditional SSH algorithms such as HMAC-SHA-1 and CBC are no longer available.</description>
    </item>
    
    <item>
      <title>GitHub Actions Tutorial: Timed Weather Emails</title>
      <link>https://www.sobyte.net/post/2021-08/github_actions/</link>
      <pubDate>Sat, 21 Aug 2021 16:03:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/github_actions/</guid>
      <description>In November 2019, GitHub officially opened the feature GitHub Actions, which is now available without a request.
GitHub Actions is a CI/CD (continuous integration/continuous deployment) tool, but can also be used as a code runtime environment. It is very powerful and can be played with in many ways.
I have written GitHub Actions Getting Started Tutorial which describes the basic usage. This article follows on from the previous tutorial and gives a simple, practical example: run a script once a day at regular intervals to get the weather forecast and then send an email.</description>
    </item>
    
    <item>
      <title>GitHub Actions Getting Started Tutorial</title>
      <link>https://www.sobyte.net/post/2021-08/getting-started-with-github-actions/</link>
      <pubDate>Sat, 21 Aug 2021 15:36:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/getting-started-with-github-actions/</guid>
      <description>GitHub Actions is GitHub&amp;rsquo;s continuous integration service, launched in October 2018.
These days, I&amp;rsquo;ve been trying it out and find it very powerful, creative, and more playful than Travis CI.
This article is a simple tutorial that demonstrates how to use GitHub Actions to automatically publish a React app to GitHub Pages.
What are GitHub Actions? As you know, continuous integration consists of many actions, such as grabbing code, running tests, logging into remote servers, publishing to third-party services, etc.</description>
    </item>
    
    <item>
      <title>GitHub has deprecated password-based authentication for Git operations</title>
      <link>https://www.sobyte.net/post/2021-08/github-deprecates-passwords-for-git-operations/</link>
      <pubDate>Sun, 15 Aug 2021 11:48:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/github-deprecates-passwords-for-git-operations/</guid>
      <description>If your Git actions have been failing or giving errors on GitHub since yesterday (August 14), it&amp;rsquo;s likely because you&amp;rsquo;re still using password-based authentication for your Git actions, and now you need to change that setting.
GitHub announced last July that it would no longer accept account passwords to authenticate Git operations, and now it&amp;rsquo;s time to make that decision official. You will now need to use SSH keys or token-based authentication to authenticate Git operations.</description>
    </item>
    
    <item>
      <title>Migrating GitHub engineering teams&#39; development environments to Codespaces</title>
      <link>https://www.sobyte.net/post/2021-08/githubs-engineering-team-moved-codespaces/</link>
      <pubDate>Thu, 12 Aug 2021 10:01:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/githubs-engineering-team-moved-codespaces/</guid>
      <description>GitHub has officially announced that the engineering team responsible for github.com has migrated its development environment to Codespaces.
GitHub.com&amp;rsquo;s codebase is nearly 14 years old. When the first commit of github.com was pushed, Rails was only two years old, AWS was only a year old, and Azure and GCP were not yet available. In those 14 years, GitHub.com&amp;rsquo;s core repository (github/github) has received over a million commits, the vast majority of which have come from developers building and testing on macOS.</description>
    </item>
    
    <item>
      <title>Automating Docker Publishing With GitHub Action</title>
      <link>https://www.sobyte.net/post/2021-07/automating-docker-publishing-with-github-action/</link>
      <pubDate>Sat, 17 Jul 2021 11:22:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/automating-docker-publishing-with-github-action/</guid>
      <description>Recently, I&amp;rsquo;ve been using GitHub Actions for my company&amp;rsquo;s internal project release process, and it&amp;rsquo;s been a great experience.
The main goal of this article is to help newcomers to GitHub Actions to quickly build automated tests and package and push Docker images.
Create project This article focuses on Go as an example, but of course other languages are similar and have little to do with the language itself.
Here we start by creating a project on GitHub and writing a few simple pieces of code main.</description>
    </item>
    
    <item>
      <title>Certify Your Git Commits on Github With GPG</title>
      <link>https://www.sobyte.net/post/2021-06/certify-your-git-commits-on-github-with-gpg/</link>
      <pubDate>Wed, 23 Jun 2021 10:57:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/certify-your-git-commits-on-github-with-gpg/</guid>
      <description>Because of the email-based identity verification feature of Git, you can easily fake being someone else to make a Commit. How do you ensure that the Commit is really a developer commit? This is where a special key, the GPG key, is needed for authentication.
About GPG GNU Privacy Guard (GnuPG or GPG) is a cryptographic software for encrypting and signing communication content and managing keys for asymmetric cryptography.
Asymmetric cryptography is a technique that you should have come across, and it is used in many fields.</description>
    </item>
    
  </channel>
</rss>
