<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on SoByte</title>
    <link>https://www.sobyte.net/tags/aws/</link>
    <description>Recent content in aws on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Feb 2022 09:22:45 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go development team leader criticizes AWS article for being seriously misleading about Go</title>
      <link>https://www.sobyte.net/post/2022-02/rsc-critique-on-the-recent-aws/</link>
      <pubDate>Fri, 25 Feb 2022 09:22:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/rsc-critique-on-the-recent-aws/</guid>
      <description>The incident started with a blog post by AWS a few days ago: &amp;ldquo;Sustainability with Rust&amp;rdquo;.
In this article, AWS compares Rust and Go as examples. AWS believes the reason for this is that Go is a garbage collection (GC) language, so when objects are created and released, the garbage collector needs to stop the program every once in a while and run a garbage collection. When the garbage collector is running, the process cannot respond to requests.</description>
    </item>
    
    <item>
      <title>AWS Launches Redis-Compatible In-Memory Database: Microsecond Read Latency, Can Handle Over 13 Trillion Requests Per Day</title>
      <link>https://www.sobyte.net/post/2021-08/aws-launches-redis-compatible-database/</link>
      <pubDate>Tue, 24 Aug 2021 14:05:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/aws-launches-redis-compatible-database/</guid>
      <description>Following the launch of the Amazon ElastiCache for Redis fully managed memory caching service, AWS recently announced the official launch of Amazon MemoryDB for Redis, a highly persistent, Redis-compatible in-memory database. According to AWS, MemoryDB enables developers to cost-effectively build applications with microsecond read performance, single-digit millisecond write performance, and extremely high persistence and availability.
According to AWS, Amazon MemoryDB for Redis has the following features.
 Ultra-fast performance. MemoryDB stores entire data sets in memory to provide microsecond read latency, single-digit millisecond write latency, and high throughput.</description>
    </item>
    
    <item>
      <title>Building an AWS Local Development Environment with Localstack</title>
      <link>https://www.sobyte.net/post/2021-07/building-an-aws-local-development-environment-with-localstack/</link>
      <pubDate>Fri, 02 Jul 2021 17:49:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-07/building-an-aws-local-development-environment-with-localstack/</guid>
      <description>I believe there are many people who have used AWS for their projects or are learning AWS. We know that with cloud services like AWS, it&amp;rsquo;s not very easy to connect to the cloud when developing locally, not to mention that the staging/production environment will have security considerations. So when we create a project, how do we build its local development environment to facilitate our local development and debugging? That&amp;rsquo;s right!</description>
    </item>
    
  </channel>
</rss>
