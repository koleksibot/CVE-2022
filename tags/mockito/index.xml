<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mockito on SoByte</title>
    <link>https://www.sobyte.net/tags/mockito/</link>
    <description>Recent content in mockito on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 03 Dec 2021 16:59:10 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/mockito/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mockito Source Code Analysis (2) - Mock and Spy</title>
      <link>https://www.sobyte.net/post/2021-12/mockito-source-code-analysis-2/</link>
      <pubDate>Fri, 03 Dec 2021 16:59:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/mockito-source-code-analysis-2/</guid>
      <description>Mock Up first throw a timing diagram, later when looking at the source code can be combined with this diagram, easier to understand.
 I didn&amp;rsquo;t use annotations for debugging purposes
 Whether you use Mockito.mock() or PowerMockito.mock(), it will call the MockitoCore.mock method (note here that the MockitoCore object is a Static property, so there is only one globally).
Once inside the MockitoCore#mock method, it does three main things, as shown below.</description>
    </item>
    
    <item>
      <title>Mockito Source Code Analysis (1) - Basic Concepts</title>
      <link>https://www.sobyte.net/post/2021-12/mockito-source-code-analysis-1/</link>
      <pubDate>Fri, 03 Dec 2021 16:53:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/mockito-source-code-analysis-1/</guid>
      <description>As a qualified development engineer, writing a good UT (Unit Test) is a necessary skill, and there are many UT tools on the market. I have chosen the most widely used combination of Mockito + Powermock to analyze its source code, and I hope it will bring you a rewarding experience.
 Please note that this series will not introduce you to basic usage.
 Before starting the series, let&amp;rsquo;s first agree on the version.</description>
    </item>
    
  </channel>
</rss>
