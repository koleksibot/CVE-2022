<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yaml on SoByte</title>
    <link>https://www.sobyte.net/tags/yaml/</link>
    <description>Recent content in yaml on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 Oct 2021 13:15:42 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/yaml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Write a do-it-yourself Kubernetes YAML templating tool</title>
      <link>https://www.sobyte.net/post/2021-10/code-k8s-yaml-templating/</link>
      <pubDate>Sun, 10 Oct 2021 13:15:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/code-k8s-yaml-templating/</guid>
      <description>When we write resource manifest files with Kubernetes, we often use tools like Helm or Kustomize for templating, both to improve the flexibility of resource manifests and to really lower the threshold for installing complex Kubernetes applications. In this article we try to implement a YAML resource manifest file templating solution ourselves using Golang. Golang&amp;rsquo;s Templating Golang has a standard library text/template that supports templated text files. This library allows</description>
    </item>
    
  </channel>
</rss>
