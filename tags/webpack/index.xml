<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webpack on SoByte</title>
    <link>https://www.sobyte.net/tags/webpack/</link>
    <description>Recent content in webpack on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Mar 2022 12:04:15 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/webpack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Webpack Quick Start</title>
      <link>https://www.sobyte.net/post/2022-03/webpack-tutorial/</link>
      <pubDate>Sat, 05 Mar 2022 12:04:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/webpack-tutorial/</guid>
      <description>This tutorial is for webpack beginners. This is also some notes I put together for newbies as I learn webpack myself. I. What is webpack? As a javascript front-end developer, you must know about webpack and the various modules. webpack is a packaging tool that bundles (packages) various modules together. The supported modules are: CommonJS AMD CSS import Images url Es module webpack bundles all modules together and makes them</description>
    </item>
    
    <item>
      <title>webpack close sourceMap cause sass-loader error problem analysis and solution</title>
      <link>https://www.sobyte.net/post/2021-09/webpack-sourcemap-sass-loader-err/</link>
      <pubDate>Sat, 25 Sep 2021 18:15:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/webpack-sourcemap-sass-loader-err/</guid>
      <description>In webpack, the webpack devtool is usually set to enable the sourceMap feature. If you use resolve-url-loader and sass-loader, when you turn off the sourceMap feature of webpack for production output, you may get an error message like the following. ModuleNotFoundError: Module not found: Error: Can&amp;rsquo;t resolve &amp;lsquo;&amp;hellip; /&amp;hellip; /&amp;hellip;/images/abc.png&amp;rsquo; After debugging the source code of resolve-url-loader and sass-loader, I found that resolve-url-loader relies on the sourceMap information processed by</description>
    </item>
    
    <item>
      <title>webpack build results remove use strict mode</title>
      <link>https://www.sobyte.net/post/2021-09/webpack-strip-use-strict/</link>
      <pubDate>Wed, 22 Sep 2021 16:05:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/webpack-strip-use-strict/</guid>
      <description>There are special requirements that require the use of syntax that is prohibited in strict mode and results in an error, so avoid building the result with use strict.
Compile the build without adding use strict babel-loader set strictMode=false babel-loader handles module transformations via @babel/helper-module-transforms, which provides a configuration parameter strictMode to specify whether to compile to strict mode, which defaults to true, i.e. use strict is added by default. This is shown in the figure below.</description>
    </item>
    
    <item>
      <title>Project upgrade to webpack5 Practices and Summary</title>
      <link>https://www.sobyte.net/post/2021-09/update-to-webpack5/</link>
      <pubDate>Tue, 21 Sep 2021 13:32:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-09/update-to-webpack5/</guid>
      <description>This is a year-long summary of webpack5 upgrade practice. I started this project in April 2020 when webpack5 was in beta phase, and then I made a few more attempts, all of which were stuck in different branches due to compatibility between self-published and third-party plugins. 2020-04 : webpack5@5.0.0-beta.15+ 2020-07 : webpack5@5.0.0-beta.21+ 2020-10 : webpack5@5.0.0 Release 2021-01 to 04 : WEB New project, webpack5, React17&amp;hellip; 2021-07 : webpack@5.4x The following</description>
    </item>
    
  </channel>
</rss>
