<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on SoByte</title>
    <link>https://www.sobyte.net/tags/spring/</link>
    <description>Recent content in spring on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Jun 2021 11:20:03 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Event Publishing and Listening Mechanism</title>
      <link>https://www.sobyte.net/post/2021-06/spring-event-publishing-and-listening-mechanism/</link>
      <pubDate>Sun, 27 Jun 2021 11:20:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/spring-event-publishing-and-listening-mechanism/</guid>
      <description>Spring provides the ApplicationContext event mechanism to publish and listen to events, which is a very useful feature. Spring has some built-in events and listeners, such as before the Spring container starts, after the Spring container starts, after the application fails to start, etc. The listeners on these events will respond accordingly. Of course, we can also customize our listeners to listen to Spring&amp;rsquo;s original events. Or we can customize</description>
    </item>
    
    <item>
      <title>Why Will Spring Remain One of the Best Platforms in the Cloud Native Era</title>
      <link>https://www.sobyte.net/post/2021-06/why-will-spring-remain-one-of-the-best-platforms-in-the-cloud-native-era/</link>
      <pubDate>Thu, 24 Jun 2021 10:48:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/why-will-spring-remain-one-of-the-best-platforms-in-the-cloud-native-era/</guid>
      <description>Back in 2015, the keynote at the SpringOne 2015 conference in Washington was Cloud Native Enterprise. The slogan of that conference was also Cloud Native and the posters were all over the place with Cloud Native.
You may wonder how you could call it Cloud Native when containers weren&amp;rsquo;t popular at that time. Although many people may not have the same understanding of Cloud Native, more and more people believe that &amp;ldquo;Cloud native is about culture, not containers&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Spring Master Slave Databas Configuration and Dynamic Datasource Switching Principles</title>
      <link>https://www.sobyte.net/post/2021-06/spring-master-slave-databas-configuration-and-dynamic-datasource-switching-principles/</link>
      <pubDate>Sun, 20 Jun 2021 15:13:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/spring-master-slave-databas-configuration-and-dynamic-datasource-switching-principles/</guid>
      <description>In large applications, it is a common design pattern to configure master-slave databases and use read-write separation. In Spring applications, to implement read-write separation, it is best to not make changes to existing code, but to support it transparently at the bottom.
Spring has a built-in AbstractRoutingDataSource that can configure multiple data sources into a Map and then, depending on the key, return different data sources. Because AbstractRoutingDataSource is also a DataSource interface, the application can set the key first, and the code that accesses the database can get the corresponding real data source from AbstractRoutingDataSource to access the specified database.</description>
    </item>
    
  </channel>
</rss>
