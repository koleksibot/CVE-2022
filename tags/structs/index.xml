<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>structs on SoByte</title>
    <link>https://www.sobyte.net/tags/structs/</link>
    <description>Recent content in structs on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Jun 2021 16:54:39 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/structs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Several Ways to Convert Struct to map[string]interface{}</title>
      <link>https://www.sobyte.net/post/2021-06/several-ways-to-convert-struct-to-mapstringinterface/</link>
      <pubDate>Fri, 25 Jun 2021 16:54:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/several-ways-to-convert-struct-to-mapstringinterface/</guid>
      <description>This article describes the &amp;ldquo;pitfalls&amp;rdquo; you need to know when converting struct to map[string]interface{} in Go, and also some of the methods you need to know.
We usually use struct in Go to store our data, for example, to store user information, we might define the following struct.
1 2 3 4 5 6 7  // UserInfo type UserInfo struct { Name string `json:&amp;#34;name&amp;#34;` Age int `json:&amp;#34;age&amp;#34;` } u1 := UserInfo{Name: &amp;#34;q1mi&amp;#34;, Age: 18}   struct to map[string]interface JSON serialization method Serialize u1 with JSON, then deserialize to map</description>
    </item>
    
  </channel>
</rss>
